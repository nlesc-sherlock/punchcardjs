{
"node_modules/browserify/node_modules/browser-pack/_prelude.js":{"path":"node_modules/browserify/node_modules/browser-pack/_prelude.js","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":1,"type":"if","locations":[{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}]}},"s":{"1":108},"b":{"1":[29,21]},"f":{"1":40},"code":"(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","l":{"1":108}},
"src/base.ts":{"path":"src/base.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":21}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":12}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"5":{"start":{"line":15,"column":0},"end":{"line":604,"column":1}},"6":{"start":{"line":125,"column":4},"end":{"line":164,"column":5}},"7":{"start":{"line":128,"column":8},"end":{"line":128,"column":21}},"8":{"start":{"line":131,"column":8},"end":{"line":131,"column":35}},"9":{"start":{"line":134,"column":8},"end":{"line":134,"column":63}},"10":{"start":{"line":138,"column":8},"end":{"line":138,"column":22}},"11":{"start":{"line":141,"column":8},"end":{"line":141,"column":29}},"12":{"start":{"line":144,"column":8},"end":{"line":144,"column":29}},"13":{"start":{"line":145,"column":8},"end":{"line":145,"column":30}},"14":{"start":{"line":146,"column":8},"end":{"line":146,"column":28}},"15":{"start":{"line":147,"column":8},"end":{"line":147,"column":32}},"16":{"start":{"line":148,"column":8},"end":{"line":148,"column":30}},"17":{"start":{"line":150,"column":8},"end":{"line":150,"column":36}},"18":{"start":{"line":151,"column":8},"end":{"line":151,"column":24}},"19":{"start":{"line":153,"column":8},"end":{"line":153,"column":44}},"20":{"start":{"line":154,"column":8},"end":{"line":154,"column":39}},"21":{"start":{"line":156,"column":8},"end":{"line":156,"column":55}},"22":{"start":{"line":159,"column":8},"end":{"line":159,"column":29}},"23":{"start":{"line":160,"column":8},"end":{"line":162,"column":11}},"24":{"start":{"line":161,"column":12},"end":{"line":161,"column":28}},"25":{"start":{"line":174,"column":14},"end":{"line":177,"column":5}},"26":{"start":{"line":176,"column":8},"end":{"line":176,"column":20}},"27":{"start":{"line":186,"column":14},"end":{"line":203,"column":5}},"28":{"start":{"line":188,"column":8},"end":{"line":188,"column":105}},"29":{"start":{"line":189,"column":8},"end":{"line":189,"column":87}},"30":{"start":{"line":190,"column":8},"end":{"line":190,"column":40}},"31":{"start":{"line":191,"column":8},"end":{"line":191,"column":39}},"32":{"start":{"line":194,"column":8},"end":{"line":200,"column":48}},"33":{"start":{"line":202,"column":8},"end":{"line":202,"column":20}},"34":{"start":{"line":214,"column":14},"end":{"line":231,"column":5}},"35":{"start":{"line":216,"column":8},"end":{"line":216,"column":105}},"36":{"start":{"line":217,"column":8},"end":{"line":217,"column":87}},"37":{"start":{"line":218,"column":8},"end":{"line":218,"column":40}},"38":{"start":{"line":219,"column":8},"end":{"line":219,"column":39}},"39":{"start":{"line":222,"column":8},"end":{"line":228,"column":44}},"40":{"start":{"line":230,"column":8},"end":{"line":230,"column":20}},"41":{"start":{"line":235,"column":14},"end":{"line":248,"column":5}},"42":{"start":{"line":237,"column":8},"end":{"line":237,"column":80}},"43":{"start":{"line":238,"column":8},"end":{"line":238,"column":63}},"44":{"start":{"line":239,"column":8},"end":{"line":246,"column":31}},"45":{"start":{"line":247,"column":8},"end":{"line":247,"column":20}},"46":{"start":{"line":257,"column":14},"end":{"line":272,"column":5}},"47":{"start":{"line":259,"column":8},"end":{"line":259,"column":105}},"48":{"start":{"line":260,"column":8},"end":{"line":260,"column":87}},"49":{"start":{"line":261,"column":8},"end":{"line":261,"column":50}},"50":{"start":{"line":262,"column":8},"end":{"line":262,"column":69}},"51":{"start":{"line":264,"column":8},"end":{"line":269,"column":52}},"52":{"start":{"line":271,"column":8},"end":{"line":271,"column":20}},"53":{"start":{"line":280,"column":14},"end":{"line":288,"column":5}},"54":{"start":{"line":283,"column":8},"end":{"line":283,"column":45}},"55":{"start":{"line":284,"column":8},"end":{"line":284,"column":22}},"56":{"start":{"line":287,"column":8},"end":{"line":287,"column":20}},"57":{"start":{"line":297,"column":14},"end":{"line":304,"column":5}},"58":{"start":{"line":299,"column":8},"end":{"line":301,"column":55}},"59":{"start":{"line":303,"column":8},"end":{"line":303,"column":20}},"60":{"start":{"line":313,"column":14},"end":{"line":327,"column":5}},"61":{"start":{"line":315,"column":8},"end":{"line":315,"column":105}},"62":{"start":{"line":316,"column":8},"end":{"line":316,"column":50}},"63":{"start":{"line":317,"column":8},"end":{"line":317,"column":45}},"64":{"start":{"line":319,"column":8},"end":{"line":324,"column":36}},"65":{"start":{"line":326,"column":8},"end":{"line":326,"column":20}},"66":{"start":{"line":336,"column":14},"end":{"line":361,"column":5}},"67":{"start":{"line":338,"column":8},"end":{"line":338,"column":40}},"68":{"start":{"line":339,"column":8},"end":{"line":339,"column":70}},"69":{"start":{"line":340,"column":8},"end":{"line":340,"column":87}},"70":{"start":{"line":343,"column":8},"end":{"line":345,"column":33}},"71":{"start":{"line":347,"column":8},"end":{"line":352,"column":30}},"72":{"start":{"line":354,"column":8},"end":{"line":357,"column":27}},"73":{"start":{"line":359,"column":8},"end":{"line":359,"column":20}},"74":{"start":{"line":370,"column":14},"end":{"line":385,"column":5}},"75":{"start":{"line":372,"column":8},"end":{"line":372,"column":87}},"76":{"start":{"line":373,"column":8},"end":{"line":373,"column":46}},"77":{"start":{"line":374,"column":8},"end":{"line":374,"column":49}},"78":{"start":{"line":376,"column":8},"end":{"line":381,"column":50}},"79":{"start":{"line":383,"column":8},"end":{"line":383,"column":20}},"80":{"start":{"line":390,"column":14},"end":{"line":402,"column":5}},"81":{"start":{"line":392,"column":8},"end":{"line":401,"column":9}},"82":{"start":{"line":394,"column":12},"end":{"line":394,"column":35}},"83":{"start":{"line":397,"column":12},"end":{"line":399,"column":13}},"84":{"start":{"line":398,"column":16},"end":{"line":398,"column":48}},"85":{"start":{"line":400,"column":12},"end":{"line":400,"column":24}},"86":{"start":{"line":411,"column":14},"end":{"line":413,"column":5}},"87":{"start":{"line":412,"column":8},"end":{"line":412,"column":22}},"88":{"start":{"line":417,"column":14},"end":{"line":419,"column":5}},"89":{"start":{"line":418,"column":8},"end":{"line":418,"column":23}},"90":{"start":{"line":423,"column":14},"end":{"line":425,"column":5}},"91":{"start":{"line":424,"column":8},"end":{"line":424,"column":23}},"92":{"start":{"line":435,"column":12},"end":{"line":451,"column":5}},"93":{"start":{"line":437,"column":8},"end":{"line":437,"column":40}},"94":{"start":{"line":438,"column":8},"end":{"line":438,"column":46}},"95":{"start":{"line":440,"column":8},"end":{"line":442,"column":9}},"96":{"start":{"line":441,"column":12},"end":{"line":441,"column":20}},"97":{"start":{"line":444,"column":8},"end":{"line":446,"column":9}},"98":{"start":{"line":445,"column":12},"end":{"line":445,"column":23}},"99":{"start":{"line":448,"column":8},"end":{"line":448,"column":78}},"100":{"start":{"line":450,"column":8},"end":{"line":450,"column":20}},"101":{"start":{"line":461,"column":12},"end":{"line":477,"column":5}},"102":{"start":{"line":463,"column":8},"end":{"line":463,"column":42}},"103":{"start":{"line":464,"column":8},"end":{"line":464,"column":44}},"104":{"start":{"line":466,"column":8},"end":{"line":468,"column":9}},"105":{"start":{"line":467,"column":12},"end":{"line":467,"column":21}},"106":{"start":{"line":470,"column":8},"end":{"line":472,"column":9}},"107":{"start":{"line":471,"column":12},"end":{"line":471,"column":22}},"108":{"start":{"line":474,"column":8},"end":{"line":474,"column":77}},"109":{"start":{"line":476,"column":8},"end":{"line":476,"column":20}},"110":{"start":{"line":485,"column":4},"end":{"line":489,"column":5}},"111":{"start":{"line":496,"column":8},"end":{"line":496,"column":32}},"112":{"start":{"line":486,"column":8},"end":{"line":486,"column":38}},"113":{"start":{"line":487,"column":8},"end":{"line":487,"column":30}},"114":{"start":{"line":488,"column":8},"end":{"line":488,"column":22}},"115":{"start":{"line":504,"column":4},"end":{"line":508,"column":5}},"116":{"start":{"line":515,"column":8},"end":{"line":515,"column":33}},"117":{"start":{"line":505,"column":8},"end":{"line":505,"column":40}},"118":{"start":{"line":506,"column":8},"end":{"line":506,"column":30}},"119":{"start":{"line":507,"column":8},"end":{"line":507,"column":22}},"120":{"start":{"line":523,"column":4},"end":{"line":527,"column":5}},"121":{"start":{"line":534,"column":8},"end":{"line":534,"column":31}},"122":{"start":{"line":524,"column":8},"end":{"line":524,"column":36}},"123":{"start":{"line":525,"column":8},"end":{"line":525,"column":31}},"124":{"start":{"line":526,"column":8},"end":{"line":526,"column":22}},"125":{"start":{"line":542,"column":4},"end":{"line":546,"column":5}},"126":{"start":{"line":553,"column":8},"end":{"line":553,"column":34}},"127":{"start":{"line":543,"column":8},"end":{"line":543,"column":42}},"128":{"start":{"line":544,"column":8},"end":{"line":544,"column":31}},"129":{"start":{"line":545,"column":8},"end":{"line":545,"column":22}},"130":{"start":{"line":561,"column":4},"end":{"line":565,"column":5}},"131":{"start":{"line":572,"column":8},"end":{"line":572,"column":33}},"132":{"start":{"line":562,"column":8},"end":{"line":562,"column":37}},"133":{"start":{"line":563,"column":8},"end":{"line":563,"column":54}},"134":{"start":{"line":564,"column":8},"end":{"line":564,"column":22}},"135":{"start":{"line":575,"column":4},"end":{"line":578,"column":5}},"136":{"start":{"line":581,"column":8},"end":{"line":581,"column":27}},"137":{"start":{"line":576,"column":8},"end":{"line":576,"column":28}},"138":{"start":{"line":577,"column":8},"end":{"line":577,"column":22}},"139":{"start":{"line":584,"column":4},"end":{"line":587,"column":5}},"140":{"start":{"line":590,"column":8},"end":{"line":590,"column":28}},"141":{"start":{"line":585,"column":8},"end":{"line":585,"column":30}},"142":{"start":{"line":586,"column":8},"end":{"line":586,"column":22}},"143":{"start":{"line":593,"column":4},"end":{"line":596,"column":5}},"144":{"start":{"line":599,"column":8},"end":{"line":599,"column":28}},"145":{"start":{"line":594,"column":8},"end":{"line":594,"column":30}},"146":{"start":{"line":595,"column":8},"end":{"line":595,"column":22}},"147":{"start":{"line":604,"column":0},"end":{"line":604,"column":1}},"148":{"start":{"line":15,"column":13},"end":{"line":604,"column":1}}},"fnMap":{"1":{"name":"(anonymous_8)","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Base","line":125,"loc":{"start":{"line":125,"column":4},"end":{"line":125,"column":85}}},"3":{"name":"(anonymous_10)","line":160,"loc":{"start":{"line":160,"column":42},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_11)","line":174,"loc":{"start":{"line":174,"column":4},"end":{"line":null,"column":-1}}},"5":{"name":"(anonymous_12)","line":186,"loc":{"start":{"line":186,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_13)","line":214,"loc":{"start":{"line":214,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_14)","line":235,"loc":{"start":{"line":235,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_15)","line":257,"loc":{"start":{"line":257,"column":4},"end":{"line":null,"column":-1}}},"9":{"name":"(anonymous_16)","line":280,"loc":{"start":{"line":280,"column":4},"end":{"line":null,"column":-1}}},"10":{"name":"(anonymous_17)","line":297,"loc":{"start":{"line":297,"column":4},"end":{"line":null,"column":-1}}},"11":{"name":"(anonymous_18)","line":313,"loc":{"start":{"line":313,"column":4},"end":{"line":null,"column":-1}}},"12":{"name":"(anonymous_19)","line":336,"loc":{"start":{"line":336,"column":4},"end":{"line":null,"column":-1}}},"13":{"name":"(anonymous_20)","line":370,"loc":{"start":{"line":370,"column":4},"end":{"line":null,"column":-1}}},"14":{"name":"(anonymous_21)","line":390,"loc":{"start":{"line":390,"column":4},"end":{"line":null,"column":-1}}},"15":{"name":"(anonymous_22)","line":411,"loc":{"start":{"line":411,"column":4},"end":{"line":null,"column":-1}}},"16":{"name":"(anonymous_23)","line":417,"loc":{"start":{"line":417,"column":4},"end":{"line":417,"column":31}}},"17":{"name":"(anonymous_24)","line":423,"loc":{"start":{"line":423,"column":4},"end":{"line":423,"column":27}}},"18":{"name":"(anonymous_25)","line":435,"loc":{"start":{"line":435,"column":4},"end":{"line":null,"column":-1}}},"19":{"name":"(anonymous_26)","line":461,"loc":{"start":{"line":461,"column":4},"end":{"line":null,"column":-1}}},"20":{"name":"(anonymous_27)","line":495,"loc":{"start":{"line":495,"column":4},"end":{"line":null,"column":-1}}},"21":{"name":"(anonymous_28)","line":485,"loc":{"start":{"line":485,"column":4},"end":{"line":485,"column":43}}},"22":{"name":"(anonymous_29)","line":514,"loc":{"start":{"line":514,"column":4},"end":{"line":null,"column":-1}}},"23":{"name":"(anonymous_30)","line":504,"loc":{"start":{"line":504,"column":4},"end":{"line":504,"column":45}}},"24":{"name":"(anonymous_31)","line":533,"loc":{"start":{"line":533,"column":4},"end":{"line":null,"column":-1}}},"25":{"name":"(anonymous_32)","line":523,"loc":{"start":{"line":523,"column":4},"end":{"line":523,"column":41}}},"26":{"name":"(anonymous_33)","line":552,"loc":{"start":{"line":552,"column":4},"end":{"line":null,"column":-1}}},"27":{"name":"(anonymous_34)","line":542,"loc":{"start":{"line":542,"column":4},"end":{"line":542,"column":47}}},"28":{"name":"(anonymous_35)","line":571,"loc":{"start":{"line":571,"column":4},"end":{"line":null,"column":-1}}},"29":{"name":"(anonymous_36)","line":561,"loc":{"start":{"line":561,"column":4},"end":{"line":561,"column":45}}},"30":{"name":"(anonymous_37)","line":580,"loc":{"start":{"line":580,"column":4},"end":{"line":null,"column":-1}}},"31":{"name":"(anonymous_38)","line":575,"loc":{"start":{"line":575,"column":4},"end":{"line":575,"column":33}}},"32":{"name":"(anonymous_39)","line":589,"loc":{"start":{"line":589,"column":4},"end":{"line":null,"column":-1}}},"33":{"name":"(anonymous_40)","line":584,"loc":{"start":{"line":584,"column":4},"end":{"line":584,"column":35}}},"34":{"name":"(anonymous_41)","line":598,"loc":{"start":{"line":598,"column":4},"end":{"line":null,"column":-1}}},"35":{"name":"(anonymous_42)","line":593,"loc":{"start":{"line":593,"column":4},"end":{"line":593,"column":35}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}}]},"2":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}}]},"3":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":23},"end":{"line":153,"column":30}},{"start":{"line":153,"column":34},"end":{"line":153,"column":43}}]},"4":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":8},"end":{"line":392,"column":7}},{"start":{"line":392,"column":8},"end":{"line":392,"column":7}}]},"5":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":8},"end":{"line":440,"column":7}},{"start":{"line":440,"column":8},"end":{"line":440,"column":7}}]},"6":{"line":440,"type":"binary-expr","locations":[{"start":{"line":440,"column":12},"end":{"line":440,"column":38}},{"start":{"line":440,"column":42},"end":{"line":440,"column":49}}]},"7":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":8},"end":{"line":444,"column":7}},{"start":{"line":444,"column":8},"end":{"line":444,"column":7}}]},"8":{"line":444,"type":"binary-expr","locations":[{"start":{"line":444,"column":12},"end":{"line":444,"column":41}},{"start":{"line":444,"column":45},"end":{"line":444,"column":55}}]},"9":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":8},"end":{"line":466,"column":7}},{"start":{"line":466,"column":8},"end":{"line":466,"column":7}}]},"10":{"line":466,"type":"binary-expr","locations":[{"start":{"line":466,"column":12},"end":{"line":466,"column":39}},{"start":{"line":466,"column":43},"end":{"line":466,"column":51}}]},"11":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":8},"end":{"line":470,"column":7}},{"start":{"line":470,"column":8},"end":{"line":470,"column":7}}]},"12":{"line":470,"type":"binary-expr","locations":[{"start":{"line":470,"column":12},"end":{"line":470,"column":40}},{"start":{"line":470,"column":44},"end":{"line":470,"column":53}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":46,"8":46,"9":46,"10":46,"11":46,"12":46,"13":46,"14":46,"15":46,"16":46,"17":46,"18":46,"19":46,"20":46,"21":46,"22":46,"23":46,"24":162,"25":1,"26":0,"27":1,"28":130,"29":130,"30":130,"31":130,"32":130,"33":130,"34":1,"35":130,"36":130,"37":130,"38":130,"39":130,"40":130,"41":1,"42":128,"43":128,"44":128,"45":128,"46":1,"47":130,"48":130,"49":130,"50":130,"51":130,"52":130,"53":1,"54":128,"55":128,"56":128,"57":1,"58":169,"59":169,"60":1,"61":130,"62":130,"63":130,"64":130,"65":130,"66":1,"67":153,"68":153,"69":153,"70":153,"71":153,"72":153,"73":153,"74":1,"75":130,"76":130,"77":130,"78":130,"79":130,"80":1,"81":637,"82":128,"83":128,"84":124,"85":128,"86":1,"87":162,"88":1,"89":0,"90":1,"91":0,"92":1,"93":107,"94":107,"95":107,"96":0,"97":107,"98":46,"99":107,"100":107,"101":1,"102":92,"103":92,"104":92,"105":0,"106":92,"107":46,"108":92,"109":92,"110":1,"111":2027,"112":46,"113":46,"114":46,"115":1,"116":1046,"117":46,"118":46,"119":46,"120":1,"121":1990,"122":46,"123":46,"124":46,"125":1,"126":1753,"127":61,"128":61,"129":61,"130":1,"131":1978,"132":46,"133":46,"134":46,"135":1,"136":130,"137":92,"138":92,"139":1,"140":130,"141":46,"142":46,"143":1,"144":130,"145":46,"146":46,"147":1,"148":1},"b":{"1":[1,0],"2":[1,0],"3":[46,40],"4":[128,509],"5":[0,107],"6":[107,107],"7":[46,61],"8":[107,61],"9":[0,92],"10":[92,92],"11":[46,46],"12":[92,46]},"f":{"1":1,"2":46,"3":162,"4":0,"5":130,"6":130,"7":128,"8":130,"9":128,"10":169,"11":130,"12":153,"13":130,"14":637,"15":162,"16":0,"17":0,"18":107,"19":92,"20":2027,"21":46,"22":1046,"23":46,"24":1990,"25":46,"26":1753,"27":61,"28":1978,"29":46,"30":130,"31":92,"32":130,"33":46,"34":130,"35":46},"code":"import 'crossfilter';\r\nimport 'd3';\r\n\r\n\r\nimport {ColorMap} from './colormap';\r\nimport {Legend} from './legend';\r\n\r\n\r\n/**\r\n * This is the base class for all punchcards. It provides the methods that are\r\n * shared between all punchcards, such as drawing of the vertical axis (which is\r\n * always hour of day), drawing of the background box, generation of the SVG DOM\r\n * element, and so on.\r\n */\r\nexport class Base {\r\n\r\n    /**\r\n     * The crossfilter that contains the data which needs to be visualized.\r\n     * @type {CrossFilter.CrossFilter<any>}\r\n     */\r\n    protected cf: CrossFilter.CrossFilter<any>;\r\n    /**\r\n     * The colormap: i.e. the element that determines what color is used to\r\n     * display a certain value.\r\n     * @type {ColorMap}\r\n     */\r\n    public colormap: ColorMap;\r\n    /**\r\n     * The user-defined dimensions that are used to manipulate the crossfilter\r\n     * data.\r\n     * @type {any}\r\n     */\r\n    protected dim: any;\r\n    /**\r\n     * The element of the DOM where the punchcard should be visualized.\r\n     * @type {HTMLElement}\r\n     */\r\n    public domElem: HTMLElement;\r\n    /**\r\n     * The element ID of the this._domElem object.\r\n     * @type {string}\r\n     */\r\n    protected domElemId: string;\r\n    /**\r\n     * The SVG DOM element that is used to draw a punchcard in.\r\n     * @type {any}\r\n     */\r\n    public svg: any;\r\n    /**\r\n     * The space in pixels between the left side of the axis background and\r\n     * edge of the SVG element.\r\n     * @type {number}\r\n     */\r\n    private _marginLeft: number;\r\n    /**\r\n     * The space in pixels between the right side of the  axis background and\r\n     * edge of the SVG element.\r\n     * @type {number}\r\n     */\r\n    private _marginRight: number;\r\n    /**\r\n     * The space in pixels between the top side of axis background and edge of\r\n     * the SVG element.\r\n     * @type {number}\r\n     */\r\n    private _marginTop: number;\r\n    /**\r\n     * The space in pixels between the bottom side of axis background and edge\r\n     * of the SVG element.\r\n     * @type {number}\r\n     */\r\n    private _marginBottom: number;\r\n    /**\r\n     * Text to use as title for the graph\r\n     * @type {string}\r\n     */\r\n    protected _title: string;\r\n    /**\r\n     * Text to use as label for the horizontal axis\r\n     * @type {string}\r\n     */\r\n    protected _xlabel: string;\r\n    /**\r\n     * Text to use as label for the vertical axis\r\n     * @type {string}\r\n     */\r\n    protected _ylabel: string;\r\n    /**\r\n     * d3 time scale for the vertical axis\r\n     * @type {d3.scale.Linear<any, any>}\r\n     */\r\n    protected todScale: d3.scale.Linear<any, any>;\r\n    /**\r\n     * height of the axis\r\n     * @type {number}\r\n     */\r\n    protected height: number;\r\n    /**\r\n     * width in pixels that is occupied by the legend\r\n     * @type {number}\r\n     */\r\n    private _legendWidth: number;\r\n    /**\r\n     * Whether or not there is enough data defined to be able to draw anything.\r\n     * @type {boolean}\r\n     */\r\n    public canDraw: boolean;\r\n    /**\r\n     * Defines which key of your input data contains the datetime information\r\n     * based on which you want to create the symbols in the punchcard's body.\r\n     * The default value is 'datestr'\r\n     * @type {string}\r\n     */\r\n    protected datekey:string;\r\n\r\n    /**\r\n     * Constructs an instance of Base when given a crossfilter object and the\r\n     * name of a DOM element to draw in.\r\n     * @param  {CrossFilter.CrossFilter<any>} cf Crossfilter object\r\n     * containing the data\r\n     * @param  {string} domElemId DOM element identifier for the div in which to\r\n     * draw the punchcard graph\r\n     * @return {[type]} Returns an instance of Base class\r\n     */\r\n    constructor (cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\r\n\n        // the crossfilter object\n        this.cf = cf;\n\n        // the name of the DOM element\n        this.domElemId = domElemId;\n\n        // the DOM element by ID\n        this.domElem = document.getElementById(this.domElemId);\n\n        // all the dimensions are collected into one object, dim, which is\n        // initialized here:\n        this.dim = {};\r\n\r\n        // can only draw stuff after user has defined some dimensions\r\n        this.canDraw = false;\r\n\r\n        // the margins around the graph body\n        this.marginLeft = 70;\n        this.marginRight = 30;\n        this.marginTop = 50;\n        this.marginBottom = 110;\n        this.legendWidth = 80;\n\n        this.ylabel = 'Time of day';\n        this.title = '';\n\n        this.datekey = datekey || 'datestr';\r\n        this.colormap = new ColorMap();\r\n\r\n        this.domElem.classList.add('punchcard-common');\r\n\r\n        // beware: JavaScript magic happens here\r\n        let that:Base = this;\r\n        window.addEventListener('resize', function() {\r\n            that.onResize();\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Placeholder method that does not do anything but needs to be here because\r\n     * it's called by .update().\r\n     * @return {Base} return the (unchanged) instance of Base\r\n     */\r\n    protected draw():Base {\r\n        // placeholder method to be overridden in classes that inherit from this class\r\n        return this;\r\n    }\r\n\n\n\n    /**\r\n     * Adds an SVG g element containing an SVG rect element with which to draw a\r\n     * border around the punchcard graph.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawBox():Base {\r\n        //\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop;\n\n\n        this.svg.append('g')\n            .attr('class', 'chartbody-box')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', w)\n                .attr('height', h)\n                .attr('class', 'chartbody-box');\n\n        return this;\n    }\n\r\n\r\n\n    /**\r\n     * Appends an SVG g element containing an SVG rect, the size of which is\r\n     * determined by the size of the SVG element minus the margins on 4 sides,\r\n     * and minus the width taken up by the legend. The rect constitutes the\r\n     * background of the punchcard's axes.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawChartBody():Base {\r\n        //\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop;\n\n\n        this.svg.append('g')\n            .attr('class', 'chartbody')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', w)\n                .attr('height', h)\n                .attr('class', 'chartbody');\n\n        return this;\n    }\n\n\n\n    protected drawFooter():Base {\r\n\r\n        let dx = this.domElem.clientWidth - this.marginRight - this.legendWidth;\r\n        let dy = this.domElem.clientHeight - this.marginBottom;\r\n        this.svg.append('g')\r\n            .attr('class', 'footer')\r\n            .append('text')\r\n            .text('')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\r\n            .style('text-anchor', 'end')\r\n            .attr('x', '-5px')\r\n            .attr('y', '-5px');\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Adds an SVG g element containing an SVG text element with which to label\r\n     * the horizontal axis.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawHorizontalAxisLabel():Base {\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft + 0.5 * w;\n        let dy:number = this.marginTop + h + 0.8 * this.marginBottom;\n\n        this.svg.append('g')\n            .attr('class', 'horizontal-axis-label')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .append('text')\n            .text(this.xlabel)\n            .attr('class', 'horizontal-axis-label');\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Adds a Legend to the plot, while resizing the punchcard as necessary.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawLegend():Base {\r\n        // draw the legend\n\n        let legend:Legend = new Legend(this);\r\n        legend.draw();\n\n\n        return this;\n    }\n\r\n\r\n\r\n    /**\r\n     * Adds an SVG element to the DOM, so that other methods you can do d3\r\n     * things with it later.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawSvg():Base {\r\n\n        this.svg = d3.select(this.domElem).append('svg')\n            .attr('width', this.domElem.clientWidth)\n            .attr('height', this.domElem.clientHeight);\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Adds an SVG g element containing an SVG text element representing the\r\n     * title of the punchcard graph.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawTitle():Base {\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let dx:number = this.marginLeft + 0.5 * w;\n        let dy:number = 0.5 * this.marginTop;\n\n        this.svg.append('g')\n            .attr('class', 'title')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .append('text')\n            .text(this.title)\n            .attr('class', 'title');\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Adds an SVG g element containing a d3.linear.axis representing the hour\r\n     * of day.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawVerticalAxis():Base {\r\n        //\n        let dx:number = this.marginLeft;\n        let dy:number = this.domElem.clientHeight - this.marginBottom;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n\n\n        this.todScale = d3.scale.linear()\n            .range([-h, 0])\n            .domain([0.0, 24.0]);\n\n        let todAxis = d3.svg.axis()\n            .orient('left')\n            .scale(this.todScale)\n            .tickValues([0, 3, 6, 9, 12, 15, 18, 21, 24])\n            .innerTickSize(5)\n            .outerTickSize(0);\n\n        this.svg.append('g')\n            .attr('class', 'vertical-axis')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(todAxis);\n\n        return this;\n\n    }\n\n\n\n    /**\r\n     * Adds an SVG g element containing an SVG text element with which to label\r\n     * the vertical axis.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawVerticalAxisLabel():Base {\r\n        //\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = 0.3 * this.marginLeft;\n        let dy:number = this.marginTop + 0.5 * h;\n\n        this.svg.append('g')\n            .attr('class', 'vertical-axis-label')\n            .attr('transform', 'translate(' + dx + ',' + dy + ') rotate(-90)')\n            .append('text')\n            .text(this.ylabel)\n            .attr('class', 'vertical-axis-label');\n\n        return this;\n\n    }\n\n\r\n\r\n\r\n    protected update() {\r\n\r\n        if (this.canDraw) {\r\n            // get the div element that we want to redraw\r\n            let div = this.domElem;\r\n\r\n            // delete the contents of the div\r\n            while (div.firstChild) {\r\n                div.removeChild(div.firstChild);\r\n            }\r\n            this.draw();\r\n        }\r\n    }\r\n\n\r\n\n\n    /**\r\n     * When the window is resized, redraw the punchcard graph in its entirety.\r\n     * @return {[type]} [description]\r\n     */\r\n    protected onResize() {\r\n        this.update();\r\n    }\r\n\r\n\r\n\r\n    protected onMouseOver(d:any) {\r\n        console.log(d);\r\n    }\r\n\r\n\r\n\r\n    protected onClick(d:any) {\r\n        console.log(d);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Sets the CSS style min-height such that the body of the punchcard graph\r\n     * cannot become smaller than 100px in height, while taking into account the\r\n     * margins on the top and bottom of the graph.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    private updateMinHeight():Base {\r\n\n        let top:number = this.marginTop;\n        let bottom:number = this.marginBottom;\n\n        if (typeof top === 'undefined' || top < 0) {\n            top = 0;\n        }\n\n        if (typeof bottom === 'undefined' || bottom < 0) {\n            bottom = 0;\n        }\n\n        this.domElem.style.minHeight = (top + bottom + 100).toString() + 'px';\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Sets the CSS style min-width such that the body of the punchcard graph\r\n     * cannot become narrower than 100px, while taking into account the\r\n     * margins on the left and right of the graph.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    private updateMinWidth():Base {\r\n\n        let left:number = this.marginLeft;\n        let right:number = this.marginRight;\n\n        if (typeof left === 'undefined' || left < 0) {\n            left = 0;\n        }\n\n        if (typeof right === 'undefined' || right < 0) {\n            right = 0;\n        }\n\n        this.domElem.style.minWidth = (left + right + 100).toString() + 'px';\n\n        return this;\n    }\n\n\r\n    /**\r\n     * [marginLeft description]\r\n     * @param  {number} marginLeft [description]\r\n     * @return {[type]}            [description]\r\n     */\r\n    public set marginLeft(marginLeft:number) {\n        this._marginLeft = marginLeft;\n        this.updateMinWidth();\r\n        this.update();\r\n    }\n\r\n    /**\r\n     * [marginLeft description]\r\n     * @return {number} [description]\r\n     */\r\n    public get marginLeft():number {\n        return this._marginLeft;\n    }\n\r\n    /**\r\n     * [marginRight description]\r\n     * @param  {number} marginRight [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    public set marginRight(marginRight:number) {\n        this._marginRight = marginRight;\n        this.updateMinWidth();\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * [marginRight description]\r\n     * @return {number} [description]\r\n     */\r\n    public get marginRight():number {\r\n        return this._marginRight;\n    }\n\r\n    /**\r\n     * [marginTop description]\r\n     * @param  {number} marginTop [description]\r\n     * @return {[type]}           [description]\r\n     */\r\n    public set marginTop(marginTop:number) {\n        this._marginTop = marginTop;\n        this.updateMinHeight();\r\n        this.update();\r\n    }\n\r\n    /**\r\n     * [marginTop description]\r\n     * @return {number} [description]\r\n     */\r\n    public get marginTop():number {\n        return this._marginTop;\n    }\n\r\n    /**\r\n     * [marginBottom description]\r\n     * @param  {number} marginBottom [description]\r\n     * @return {[type]}              [description]\r\n     */\r\n    public set marginBottom(marginBottom:number) {\n        this._marginBottom = marginBottom;\n        this.updateMinHeight();\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * [marginBottom description]\r\n     * @return {number} [description]\r\n     */\r\n    public get marginBottom():number {\r\n        return this._marginBottom;\n    }\n\r\n    /**\r\n     * [legendWidth description]\r\n     * @param  {number} legendWidth [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    public set legendWidth(legendWidth:number) {\r\n        let minimumWidth:number = 50;\r\n        this._legendWidth = Math.max(legendWidth, 50);\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * [legendWidth description]\r\n     * @return {number} [description]\r\n     */\r\n    public get legendWidth():number {\r\n        return this._legendWidth;\r\n    }\r\n\r\n    public set title(title:string) {\r\n        this._title = title;\r\n        this.update();\r\n    }\r\n\r\n    public get title():string {\r\n        return this._title;\r\n    }\r\n\r\n    public set xlabel(xlabel:string) {\r\n        this._xlabel = xlabel;\r\n        this.update();\r\n    }\r\n\r\n    public get xlabel():string {\r\n        return this._xlabel;\r\n    }\r\n\r\n    public set ylabel(ylabel:string) {\r\n        this._ylabel = ylabel;\r\n        this.update();\r\n    }\r\n\r\n    public get ylabel():string {\r\n        return this._ylabel;\r\n    }\r\n\r\n\r\n\r\n}\r\n\n\n","l":{"1":1,"2":1,"5":1,"6":1,"15":1,"125":1,"128":46,"131":46,"134":46,"138":46,"141":46,"144":46,"145":46,"146":46,"147":46,"148":46,"150":46,"151":46,"153":46,"154":46,"156":46,"159":46,"160":46,"161":162,"174":1,"176":0,"186":1,"188":130,"189":130,"190":130,"191":130,"194":130,"202":130,"214":1,"216":130,"217":130,"218":130,"219":130,"222":130,"230":130,"235":1,"237":128,"238":128,"239":128,"247":128,"257":1,"259":130,"260":130,"261":130,"262":130,"264":130,"271":130,"280":1,"283":128,"284":128,"287":128,"297":1,"299":169,"303":169,"313":1,"315":130,"316":130,"317":130,"319":130,"326":130,"336":1,"338":153,"339":153,"340":153,"343":153,"347":153,"354":153,"359":153,"370":1,"372":130,"373":130,"374":130,"376":130,"383":130,"390":1,"392":637,"394":128,"397":128,"398":124,"400":128,"411":1,"412":162,"417":1,"418":0,"423":1,"424":0,"435":1,"437":107,"438":107,"440":107,"441":0,"444":107,"445":46,"448":107,"450":107,"461":1,"463":92,"464":92,"466":92,"467":0,"470":92,"471":46,"474":92,"476":92,"485":1,"486":46,"487":46,"488":46,"496":2027,"504":1,"505":46,"506":46,"507":46,"515":1046,"523":1,"524":46,"525":46,"526":46,"534":1990,"542":1,"543":61,"544":61,"545":61,"553":1753,"561":1,"562":46,"563":46,"564":46,"572":1978,"575":1,"576":92,"577":92,"581":130,"584":1,"585":46,"586":46,"590":130,"593":1,"594":46,"595":46,"599":130,"604":1}},
"src/colormap.ts":{"path":"src/colormap.ts","statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":402,"column":1}},"2":{"start":{"line":68,"column":4},"end":{"line":104,"column":5}},"3":{"start":{"line":70,"column":8},"end":{"line":70,"column":24}},"4":{"start":{"line":71,"column":8},"end":{"line":71,"column":28}},"5":{"start":{"line":73,"column":8},"end":{"line":93,"column":9}},"6":{"start":{"line":75,"column":12},"end":{"line":75,"column":28}},"7":{"start":{"line":76,"column":12},"end":{"line":76,"column":47}},"8":{"start":{"line":78,"column":15},"end":{"line":93,"column":9}},"9":{"start":{"line":80,"column":12},"end":{"line":80,"column":28}},"10":{"start":{"line":81,"column":12},"end":{"line":81,"column":54}},"11":{"start":{"line":83,"column":15},"end":{"line":93,"column":9}},"12":{"start":{"line":85,"column":12},"end":{"line":85,"column":28}},"13":{"start":{"line":86,"column":12},"end":{"line":90,"column":13}},"14":{"start":{"line":87,"column":16},"end":{"line":87,"column":44}},"15":{"start":{"line":89,"column":16},"end":{"line":89,"column":66}},"16":{"start":{"line":92,"column":12},"end":{"line":92,"column":77}},"17":{"start":{"line":97,"column":8},"end":{"line":97,"column":48}},"18":{"start":{"line":100,"column":8},"end":{"line":100,"column":45}},"19":{"start":{"line":101,"column":8},"end":{"line":101,"column":45}},"20":{"start":{"line":102,"column":8},"end":{"line":102,"column":56}},"21":{"start":{"line":119,"column":12},"end":{"line":128,"column":5}},"22":{"start":{"line":121,"column":8},"end":{"line":127,"column":9}},"23":{"start":{"line":122,"column":12},"end":{"line":122,"column":22}},"24":{"start":{"line":123,"column":15},"end":{"line":127,"column":9}},"25":{"start":{"line":124,"column":12},"end":{"line":124,"column":21}},"26":{"start":{"line":126,"column":12},"end":{"line":126,"column":21}},"27":{"start":{"line":137,"column":14},"end":{"line":299,"column":5}},"28":{"start":{"line":139,"column":8},"end":{"line":139,"column":34}},"29":{"start":{"line":141,"column":8},"end":{"line":295,"column":9}},"30":{"start":{"line":143,"column":16},"end":{"line":143,"column":56}},"31":{"start":{"line":144,"column":16},"end":{"line":144,"column":22}},"32":{"start":{"line":147,"column":16},"end":{"line":164,"column":18}},"33":{"start":{"line":165,"column":16},"end":{"line":165,"column":22}},"34":{"start":{"line":168,"column":16},"end":{"line":177,"column":18}},"35":{"start":{"line":178,"column":16},"end":{"line":178,"column":22}},"36":{"start":{"line":181,"column":16},"end":{"line":198,"column":18}},"37":{"start":{"line":199,"column":16},"end":{"line":199,"column":22}},"38":{"start":{"line":202,"column":16},"end":{"line":219,"column":18}},"39":{"start":{"line":220,"column":16},"end":{"line":220,"column":22}},"40":{"start":{"line":223,"column":16},"end":{"line":240,"column":18}},"41":{"start":{"line":241,"column":16},"end":{"line":241,"column":22}},"42":{"start":{"line":244,"column":16},"end":{"line":289,"column":18}},"43":{"start":{"line":290,"column":16},"end":{"line":290,"column":22}},"44":{"start":{"line":293,"column":16},"end":{"line":293,"column":80}},"45":{"start":{"line":297,"column":8},"end":{"line":297,"column":26}},"46":{"start":{"line":312,"column":11},"end":{"line":352,"column":5}},"47":{"start":{"line":316,"column":8},"end":{"line":319,"column":9}},"48":{"start":{"line":317,"column":12},"end":{"line":317,"column":32}},"49":{"start":{"line":318,"column":12},"end":{"line":318,"column":33}},"50":{"start":{"line":321,"column":8},"end":{"line":321,"column":75}},"51":{"start":{"line":322,"column":8},"end":{"line":322,"column":45}},"52":{"start":{"line":324,"column":8},"end":{"line":324,"column":32}},"53":{"start":{"line":325,"column":8},"end":{"line":325,"column":32}},"54":{"start":{"line":327,"column":8},"end":{"line":335,"column":9}},"55":{"start":{"line":328,"column":12},"end":{"line":328,"column":62}},"56":{"start":{"line":329,"column":12},"end":{"line":329,"column":65}},"57":{"start":{"line":330,"column":12},"end":{"line":334,"column":13}},"58":{"start":{"line":331,"column":16},"end":{"line":331,"column":47}},"59":{"start":{"line":332,"column":16},"end":{"line":332,"column":51}},"60":{"start":{"line":333,"column":16},"end":{"line":333,"column":22}},"61":{"start":{"line":337,"column":8},"end":{"line":337,"column":74}},"62":{"start":{"line":338,"column":8},"end":{"line":343,"column":10}},"63":{"start":{"line":345,"column":8},"end":{"line":349,"column":9}},"64":{"start":{"line":345,"column":13},"end":{"line":345,"column":24}},"65":{"start":{"line":346,"column":12},"end":{"line":348,"column":13}},"66":{"start":{"line":347,"column":16},"end":{"line":347,"column":67}},"67":{"start":{"line":351,"column":8},"end":{"line":351,"column":24}},"68":{"start":{"line":362,"column":11},"end":{"line":367,"column":5}},"69":{"start":{"line":364,"column":8},"end":{"line":364,"column":43}},"70":{"start":{"line":365,"column":8},"end":{"line":365,"column":34}},"71":{"start":{"line":366,"column":8},"end":{"line":366,"column":73}},"72":{"start":{"line":376,"column":11},"end":{"line":382,"column":5}},"73":{"start":{"line":378,"column":8},"end":{"line":378,"column":36}},"74":{"start":{"line":379,"column":8},"end":{"line":379,"column":61}},"75":{"start":{"line":381,"column":8},"end":{"line":381,"column":20}},"76":{"start":{"line":389,"column":11},"end":{"line":397,"column":5}},"77":{"start":{"line":391,"column":8},"end":{"line":393,"column":9}},"78":{"start":{"line":391,"column":13},"end":{"line":391,"column":21}},"79":{"start":{"line":392,"column":12},"end":{"line":392,"column":39}},"80":{"start":{"line":394,"column":8},"end":{"line":394,"column":61}},"81":{"start":{"line":396,"column":8},"end":{"line":396,"column":20}},"82":{"start":{"line":44,"column":11},"end":{"line":61,"column":6}},"83":{"start":{"line":402,"column":0},"end":{"line":402,"column":1}},"84":{"start":{"line":21,"column":13},"end":{"line":402,"column":1}}},"fnMap":{"1":{"name":"(anonymous_44)","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"ColorMap","line":68,"loc":{"start":{"line":68,"column":4},"end":{"line":68,"column":46}}},"3":{"name":"(anonymous_46)","line":119,"loc":{"start":{"line":119,"column":4},"end":{"line":119,"column":54}}},"4":{"name":"(anonymous_47)","line":137,"loc":{"start":{"line":137,"column":4},"end":{"line":137,"column":44}}},"5":{"name":"(anonymous_48)","line":312,"loc":{"start":{"line":312,"column":4},"end":{"line":312,"column":29}}},"6":{"name":"(anonymous_49)","line":362,"loc":{"start":{"line":362,"column":4},"end":{"line":362,"column":32}}},"7":{"name":"(anonymous_50)","line":376,"loc":{"start":{"line":376,"column":4},"end":{"line":376,"column":41}}},"8":{"name":"(anonymous_51)","line":389,"loc":{"start":{"line":389,"column":4},"end":{"line":389,"column":38}}}},"branchMap":{"1":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":7}},{"start":{"line":73,"column":8},"end":{"line":73,"column":7}}]},"2":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":15},"end":{"line":78,"column":14}},{"start":{"line":78,"column":15},"end":{"line":78,"column":14}}]},"3":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":15},"end":{"line":83,"column":14}},{"start":{"line":83,"column":15},"end":{"line":83,"column":14}}]},"4":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":7}},{"start":{"line":121,"column":8},"end":{"line":121,"column":7}}]},"5":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":15},"end":{"line":123,"column":14}},{"start":{"line":123,"column":15},"end":{"line":123,"column":14}}]},"6":{"line":142,"type":"switch","locations":[{"start":{"line":142,"column":12},"end":{"line":145,"column":13}},{"start":{"line":146,"column":12},"end":{"line":166,"column":13}},{"start":{"line":167,"column":12},"end":{"line":179,"column":13}},{"start":{"line":180,"column":12},"end":{"line":200,"column":13}},{"start":{"line":201,"column":12},"end":{"line":221,"column":13}},{"start":{"line":222,"column":12},"end":{"line":242,"column":13}},{"start":{"line":243,"column":12},"end":{"line":291,"column":13}},{"start":{"line":292,"column":12},"end":{"line":294,"column":13}}]},"7":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":8},"end":{"line":316,"column":7}},{"start":{"line":316,"column":8},"end":{"line":316,"column":7}}]},"8":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":12},"end":{"line":330,"column":11}},{"start":{"line":330,"column":12},"end":{"line":330,"column":11}}]},"9":{"line":330,"type":"binary-expr","locations":[{"start":{"line":330,"column":16},"end":{"line":330,"column":21}},{"start":{"line":330,"column":25},"end":{"line":330,"column":30}}]},"10":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":12},"end":{"line":346,"column":11}},{"start":{"line":346,"column":12},"end":{"line":346,"column":11}}]},"11":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":16},"end":{"line":346,"column":27}},{"start":{"line":346,"column":31},"end":{"line":346,"column":44}}]}},"s":{"1":1,"2":1,"3":101,"4":101,"5":101,"6":47,"7":47,"8":54,"9":52,"10":52,"11":2,"12":1,"13":1,"14":1,"15":0,"16":1,"17":100,"18":100,"19":100,"20":100,"21":1,"22":700,"23":3,"24":697,"25":697,"26":0,"27":1,"28":99,"29":99,"30":64,"31":64,"32":3,"33":3,"34":1,"35":1,"36":0,"37":0,"38":8,"39":8,"40":15,"41":15,"42":8,"43":8,"44":0,"45":99,"46":1,"47":26080,"48":62,"49":62,"50":26080,"51":26080,"52":26080,"53":26080,"54":26080,"55":78142,"56":78142,"57":78142,"58":26080,"59":26080,"60":26080,"61":26080,"62":26080,"63":26080,"64":104320,"65":104320,"66":0,"67":26080,"68":1,"69":26080,"70":26080,"71":26080,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":2,"79":2,"80":1,"81":1,"82":1,"83":1,"84":1},"b":{"1":[47,54],"2":[52,2],"3":[1,1],"4":[3,697],"5":[697,0],"6":[64,3,1,0,8,15,8,0],"7":[62,26018],"8":[26080,52062],"9":[78142,78142],"10":[0,104320],"11":[104320,104320]},"f":{"1":1,"2":101,"3":700,"4":99,"5":26080,"6":26080,"7":1,"8":1},"code":"\n/**\r\n * Associates a point in the domain space to a color\r\n * @type {Object}\r\n */\r\ntype ColorTableItem = {\n    at   : number;\n    color: [number, number, number];\n}\n\r\n/**\r\n * An array of ColorTableItems\r\n * @type {[type]}\r\n */\r\ntype ColorTable = Array<ColorTableItem>;\r\n\n/**\r\n * ColorMap helps you associate values from the domain to rgba color values,\r\n * where each channel is in the range [0,255]\r\n */\r\nexport class ColorMap {\r\n\r\n    /**\r\n     * Array of ColorTableItems, where each ColorTableItem associates a point\r\n     * along the domain's number line to an rgba color.\r\n     * @type {ColorTable}\r\n     */\r\n    public colortable: ColorTable;\r\n    /**\r\n     * Domain value assocatiated with the lowest color from the ColorMap.\r\n     * @type {number}\r\n     */\r\n    public cLimLow: number;\r\n    /**\r\n     * Domain value assocatiated with the highest color from the ColorMap.\r\n     * @type {number}\r\n     */\r\n    public cLimHigh: number;\r\n    /**\r\n     * if the user does not specify which ColorMap she wants to use,\r\n     * defaultColorTable is what she'll get.\r\n     * @type {ColorTable}\r\n     */\r\n    static defaultColorTable:ColorTable = [\n        {\n            at: Number.NEGATIVE_INFINITY,\n            color: [255, 255, 255, 255]\n        },\n        {\n            at: 0.0,\n            color: [8, 106, 227, 0]\n        },\n        {\n            at: 1.0,\n            color: [227, 8, 88, 0]\n        },\n        {\n            at: Number.POSITIVE_INFINITY,\n            color: [255, 255, 255, 255]\n        }\n    ];\n\n    /**\r\n     * [constructor description]\r\n     * @param  {ColorTable|string} colortable [description]\r\n     * @return {[type]}                       [description]\r\n     */\r\n    constructor (colortable?:ColorTable|string) {\n\n        let str: string;\n        let ct : ColorTable;\r\n\r\n        if (typeof colortable === 'undefined') {\r\n\r\n            str = 'default';\r\n            ct = this.expandColorTableStr(str);\n\n        } else if (typeof colortable === 'string') {\n\r\n            str = undefined;\r\n            ct = this.expandColorTableStr(colortable);\n\n        } else if (typeof colortable === 'object') {\r\n\r\n            str = undefined;\r\n            try {\r\n                ct = <ColorTable>colortable;\r\n            } catch (Error) {\r\n                throw new Error('Can\\'t cast to ColorTable type');\r\n            }\r\n        } else {\r\n            throw new Error('Undefined behavior for these input arguments.');\r\n        }\r\n\n        // use my own compare function to sort the array based on the value of\n        // each element's 'at' property:\n        this.colortable = ct.sort(this.compare);\n\n        // adjust the color limits\n        let nColors = this.colortable.length;\n        this.cLimLow = this.colortable[1].at;\n        this.cLimHigh = this.colortable[nColors - 2].at;\n\n    }\n\n\n    /**\r\n     * comparison function to help sort the ColorTableItems that make\r\n     * up a ColorTable. Basically when comparing objects, you have to specify\r\n     * which key you want to compare/sort on, which for this function is the\r\n     * value of a ColorTableItem's 'at' key.\r\n     * @param  {ColorTableItem} a the first ColorTableItem (left hand side\r\n     * member of the comparison)\r\n     * @param  {ColorTableItem} b the second ColorTableItem (right hand side\r\n     * of the comparison)\r\n     * @return {number} number identifying how a nd b compare. Returns -1 when\r\n     * a<b, 1 when a>b, or 0 when a==b\r\n     */\r\n    private compare(a:ColorTableItem, b:ColorTableItem):number {\n\n        if (a.at < b.at) {\n            return -1;\n        } else if (a.at > b.at) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n\n    /**\r\n     * Returns a ColorTable based on an input string\r\n     * @param  {string} input string, e.g. 'default', 'gray', 'empty',\r\n     * 'autumn', 'blues', 'summer', 'rainbow'\r\n     * @return {ColorTable} The ColorTable associated with the input string\r\n     */\r\n    protected expandColorTableStr(str:string):ColorTable {\r\n\n        let colortable:ColorTable;\n\n        switch (str) {\n            case 'default': {\n                colortable = ColorMap.defaultColorTable;\r\n                break;\n            }\n            case 'gray': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [0, 0, 0, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [255, 255, 255, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\r\n            }\n            case 'empty': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'autumn': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [255, 0, 0, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [255, 255, 0, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'blues': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [0, 0, 255, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [0, 255, 255, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'summer': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [8, 160, 120, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [252, 252, 42, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'rainbow': {\n                colortable = [\n                    {\n                        at:Number.NEGATIVE_INFINITY,\n                        color: [255, 255,   0,  0]\n                    },\n                    {\n                        at:0.000,\n                        color: [255, 255,   0,  0]\n                    },\n                    {\n                        at:0.125,\n                        color: [255, 255,   0,  0]\n                    },\n                    {\n                        at:0.250,\n                        color: [145, 255,   0,  0]\n                    },\n                    {\n                        at:0.375,\n                        color: [  0, 255,  54,  0]\n                    },\n                    {\n                        at:0.500,\n                        color: [  0, 179, 255,  0]\n                    },\n                    {\n                        at:0.625,\n                        color: [ 10,   0, 255,  0]\n                    },\n                    {\n                        at:0.750,\n                        color: [171,   0, 255,  0]\n                    },\n                    {\n                        at:0.875,\n                        color: [255,   0, 159,  0]\n                    },\n                    {\n                        at:1.000,\n                        color: [255,  89,   0,  0]\n                    },\n                    {\n                        at:Number.POSITIVE_INFINITY,\n                        color: [255,  89,   0,  0]\n                    }\n                ];\n                break;\n            }\n            default: {\n                throw new Error('ColorMap.expandColorTableStr(): unknown case');\n            }\n        }\n\n        return colortable;\n\n    }\n\n\n\n    /**\r\n     * Returns an rgba color array based on the current colormap (including the\r\n     * domain values at the upper and lower boundaries of the ColorMap) and an\r\n     * input domain value. The color values are determined by linear\r\n     * interpolation between the known color values, as defined by the ColorMap.\r\n     * @param  {number} at Value for which you want to know the associated color\r\n     * @return {[type]} 4-D vector containing rgba value of the color, with 0\r\n     * represetning zero intensity and 255 full intensity.\r\n     */\r\n    public getColor(at:number):[number, number, number, number] {\r\n\n        // if there is only one value in the range, lower the lower limit and\r\n        // raise the upper limit\r\n        if (this.cLimLow === this.cLimHigh) {\n            this.cLimLow -= 0.5;\n            this.cLimHigh += 0.5;\n        }\n\n        let atUnity = (at - this.cLimLow) / (this.cLimHigh - this.cLimLow);\n        let nColors = this.colortable.length;\n\n        let prev:ColorTableItem;\r\n        let next:ColorTableItem;\r\n\n        for (let iColor = 0; iColor < nColors; iColor++) {\n            let cond1 = this.colortable[iColor].at <= atUnity;\n            let cond2 = atUnity < this.colortable[iColor + 1].at;\n            if (cond1 && cond2) {\n                prev = this.colortable[iColor];\n                next = this.colortable[iColor + 1];\n                break;\n            }\n        }\n\n        let atRelative:number = (atUnity - prev.at) / (next.at - prev.at);\n        let theColor: [number, number, number, number] = [\n            Math.floor(prev.color[0] + (next.color[0] - prev.color[0]) * atRelative),\n            Math.floor(prev.color[1] + (next.color[1] - prev.color[1]) * atRelative),\n            Math.floor(prev.color[2] + (next.color[2] - prev.color[2]) * atRelative),\n            255\n        ];\n\n        for (let channel of theColor) {\n            if (channel < 0 || channel > 255) {\n                throw new Error('Calculated color out of bounds.');\n            }\n        }\n\n        return theColor;\n    }\n\n\n\n    /**\r\n     * CSS string representation of the result returned by ColorMap.getColor().\r\n     * Note that the string does not include a transparency value.\r\n     * @param  {number} at Value for which you want to know the associated color.\r\n     * @return {string} CSS string representing the rgb color.\r\n     */\r\n    public getColorRGB(at:number):string {\n\n        let color:[number, number, number];\n        color = this.getColor(at);\n        return 'rgb(' + color[0] + ',' + color[1] + ',' + color[2] + ')';\n    }\n\n\n\n    /**\r\n     * Add a ColorTableItem to the current ColorMap\r\n     * @param  {ColorTableItem} color Color to add, with linkage to domain value.\r\n     * @return {ColorMap} Updated ColorMap\r\n     */\r\n    public addColor(color: ColorTableItem): ColorMap {\r\n\n        this.colortable.push(color);\n        this.colortable = this.colortable.sort(this.compare);\n\n        return this;\n    }\n\r\n    /**\r\n     * Add multiple ColorTableItems to the ColorMap\r\n     * @param  {ColorTable} colors Colors to add to the ColorMap\r\n     * @return {ColorMap} Updated Colormap\r\n     */\r\n    public addColors(colors:ColorTable): ColorMap {\r\n\n        for (let elem of colors) {\n            this.colortable.push(elem);\n        }\n        this.colortable = this.colortable.sort(this.compare);\n\n        return this;\n    }\n\n\n\r\n\r\n}","l":{"21":1,"44":1,"68":1,"70":101,"71":101,"73":101,"75":47,"76":47,"78":54,"80":52,"81":52,"83":2,"85":1,"86":1,"87":1,"89":0,"92":1,"97":100,"100":100,"101":100,"102":100,"119":1,"121":700,"122":3,"123":697,"124":697,"126":0,"137":1,"139":99,"141":99,"143":64,"144":64,"147":3,"165":3,"168":1,"178":1,"181":0,"199":0,"202":8,"220":8,"223":15,"241":15,"244":8,"290":8,"293":0,"297":99,"312":1,"316":26080,"317":62,"318":62,"321":26080,"322":26080,"324":26080,"325":26080,"327":26080,"328":78142,"329":78142,"330":78142,"331":26080,"332":26080,"333":26080,"337":26080,"338":26080,"345":104320,"346":104320,"347":0,"351":26080,"362":1,"364":26080,"365":26080,"366":26080,"376":1,"378":1,"379":1,"381":1,"389":1,"391":2,"392":2,"394":1,"396":1,"402":1}},
"src/date-circle.ts":{"path":"src/date-circle.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":21}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":12}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"6":{"start":{"line":13,"column":0},"end":{"line":121,"column":1}},"7":{"start":{"line":13,"column":32},"end":{"line":13,"column":40}},"8":{"start":{"line":16,"column":4},"end":{"line":30,"column":5}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":38}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":61}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":29}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":40}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":48}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":33}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":60}},"17":{"start":{"line":28,"column":8},"end":{"line":28,"column":22}},"18":{"start":{"line":35,"column":14},"end":{"line":118,"column":5}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":35}},"20":{"start":{"line":40,"column":8},"end":{"line":40,"column":105}},"21":{"start":{"line":41,"column":8},"end":{"line":41,"column":87}},"22":{"start":{"line":42,"column":8},"end":{"line":42,"column":40}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":43}},"24":{"start":{"line":44,"column":8},"end":{"line":44,"column":65}},"25":{"start":{"line":45,"column":8},"end":{"line":45,"column":89}},"26":{"start":{"line":47,"column":8},"end":{"line":47,"column":85}},"27":{"start":{"line":48,"column":8},"end":{"line":48,"column":84}},"28":{"start":{"line":49,"column":8},"end":{"line":49,"column":67}},"29":{"start":{"line":54,"column":8},"end":{"line":54,"column":54}},"30":{"start":{"line":55,"column":8},"end":{"line":58,"column":11}},"31":{"start":{"line":57,"column":12},"end":{"line":57,"column":38}},"32":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"33":{"start":{"line":64,"column":8},"end":{"line":64,"column":46}},"34":{"start":{"line":65,"column":8},"end":{"line":65,"column":47}},"35":{"start":{"line":66,"column":8},"end":{"line":73,"column":9}},"36":{"start":{"line":66,"column":13},"end":{"line":66,"column":21}},"37":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"38":{"start":{"line":68,"column":16},"end":{"line":68,"column":36}},"39":{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},"40":{"start":{"line":71,"column":16},"end":{"line":71,"column":37}},"41":{"start":{"line":74,"column":8},"end":{"line":74,"column":39}},"42":{"start":{"line":75,"column":8},"end":{"line":75,"column":41}},"43":{"start":{"line":79,"column":8},"end":{"line":114,"column":23}},"44":{"start":{"line":89,"column":24},"end":{"line":89,"column":77}},"45":{"start":{"line":92,"column":24},"end":{"line":92,"column":114}},"46":{"start":{"line":95,"column":24},"end":{"line":95,"column":75}},"47":{"start":{"line":96,"column":24},"end":{"line":96,"column":90}},"48":{"start":{"line":97,"column":24},"end":{"line":101,"column":25}},"49":{"start":{"line":98,"column":28},"end":{"line":98,"column":50}},"50":{"start":{"line":100,"column":28},"end":{"line":100,"column":66}},"51":{"start":{"line":104,"column":24},"end":{"line":104,"column":66}},"52":{"start":{"line":107,"column":24},"end":{"line":107,"column":40}},"53":{"start":{"line":110,"column":24},"end":{"line":110,"column":44}},"54":{"start":{"line":113,"column":24},"end":{"line":113,"column":42}},"55":{"start":{"line":116,"column":8},"end":{"line":116,"column":20}},"56":{"start":{"line":121,"column":0},"end":{"line":121,"column":1}},"57":{"start":{"line":13,"column":13},"end":{"line":121,"column":1}}},"fnMap":{"1":{"name":"(anonymous_56)","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"DateCircle","line":16,"loc":{"start":{"line":16,"column":4},"end":{"line":16,"column":85}}},"3":{"name":"(anonymous_58)","line":35,"loc":{"start":{"line":35,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_59)","line":55,"loc":{"start":{"line":55,"column":28},"end":{"line":55,"column":42}}},"5":{"name":"(anonymous_60)","line":88,"loc":{"start":{"line":88,"column":32},"end":{"line":88,"column":46}}},"6":{"name":"(anonymous_61)","line":91,"loc":{"start":{"line":91,"column":32},"end":{"line":91,"column":46}}},"7":{"name":"(anonymous_62)","line":94,"loc":{"start":{"line":94,"column":31},"end":{"line":94,"column":45}}},"8":{"name":"(anonymous_63)","line":103,"loc":{"start":{"line":103,"column":34},"end":{"line":103,"column":48}}},"9":{"name":"(anonymous_64)","line":106,"loc":{"start":{"line":106,"column":33},"end":{"line":106,"column":47}}},"10":{"name":"(anonymous_65)","line":109,"loc":{"start":{"line":109,"column":37},"end":{"line":109,"column":51}}},"11":{"name":"(anonymous_66)","line":112,"loc":{"start":{"line":112,"column":36},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}}]},"2":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":16},"end":{"line":null,"column":-1}}]},"4":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":11}},{"start":{"line":67,"column":12},"end":{"line":67,"column":11}}]},"5":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":11}},{"start":{"line":70,"column":12},"end":{"line":70,"column":11}}]},"6":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":24},"end":{"line":97,"column":23}},{"start":{"line":97,"column":24},"end":{"line":97,"column":23}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":8,"10":8,"11":8,"12":8,"13":8,"14":8,"15":8,"16":8,"17":8,"18":1,"19":53,"20":53,"21":53,"22":53,"23":53,"24":53,"25":53,"26":53,"27":53,"28":53,"29":53,"30":53,"31":2820,"32":53,"33":53,"34":53,"35":53,"36":2820,"37":2820,"38":173,"39":2820,"40":220,"41":53,"42":53,"43":53,"44":2820,"45":2820,"46":2820,"47":2820,"48":2820,"49":26,"50":2794,"51":2820,"52":0,"53":0,"54":0,"55":53,"56":1,"57":1},"b":{"1":[1,0],"2":[1,0],"3":[1,0],"4":[173,2647],"5":[220,2600],"6":[26,2794]},"f":{"1":1,"2":8,"3":53,"4":2820,"5":2820,"6":2820,"7":2820,"8":2820,"9":0,"10":0,"11":0},"code":"import 'crossfilter';\r\nimport 'd3';\r\nimport 'moment';\r\n\r\n\r\nimport {ColorMap} from './colormap';\r\nimport {DateRect} from './date-rect';\r\n\r\n\r\n/**\r\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\r\n */\r\nexport class DateCircle extends DateRect {\r\n\n\n    constructor (cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\r\n\n        super(cf, domElemId, datekey);\r\n        // ...but reset these properties\r\n        this.domElem.classList.remove('punchcard-date-rect');\r\n        this.canDraw = false;\r\n\r\n        this.xlabel = '';\r\n        this.title = 'DateCircle title';\r\n        this.colormap = new ColorMap('rainbow');\r\n        super.defineDimensions();\r\n        this.domElem.classList.add('punchcard-date-circle');\r\n        this.update();\r\n\r\n    }\n\n\n\n\n    protected drawSymbols():DateCircle {\r\n\n        // capture the this object\n        let that:DateCircle = this;\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop + h;\n        let symbolMargin = {left:0, right: 0, top: 0, bottom: 0}; // pixels\n        let wDays:number = moment(this.dateTo).diff(moment(this.dateFrom), 'days', true);\n\n        let symbolWidth :number = w / wDays - symbolMargin.left - symbolMargin.right;\n        let symbolHeight:number = h / 24.0 - symbolMargin.top - symbolMargin.bottom;\n        let r:number = Math.min(symbolWidth, symbolHeight) / 2 - 2;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        let group = this.dim.dateAndHourOfDay.group();\n        group.all().forEach(function(d:any) {\r\n            //parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        let data:any = group.all();\n\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (let elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n\n        // draw the circles\r\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('circle.symbol')\n                .data(data)\n                .enter()\n                .append('circle')\n                    .attr('class', 'symbol')\n                    .attr('cx', function(d:any){\r\n                        return that.dateScale(new Date(d.key[that.datekey]));\r\n                        })\n                    .attr('cy', function(d:any){\r\n                        return that.todScale(parseInt(d.key.hourOfDay, 10)) + symbolMargin.top + symbolHeight / 2;\n                    })\n                    .attr('r', function(d:any) {\r\n                        let numer:number = d.value - that.colormap.cLimLow;\r\n                        let denom:number = that.colormap.cLimHigh - that.colormap.cLimLow;\r\n                        if (denom === 0) {\r\n                            return Math.max(r, 1);\r\n                        } else {\r\n                            return Math.max(r * numer / denom, 1);\r\n                        }\r\n                    })\r\n                    .attr('fill', function(d:any){\r\n                        return that.colormap.getColorRGB(d.value);\n                    })\r\n                    .on('click', function(d:any){\r\n                        that.onClick(d);\r\n                    })\r\n                    .on('mouseover', function(d:any){\r\n                        that.onMouseOver(d);\r\n                    })\r\n                    .on('mouseout', function(){\r\n                        that.onMouseOut();\r\n                    });\r\n\n        return this;\n\n    }\n\n\n}\n\n\n","l":{"1":1,"2":1,"3":1,"6":1,"7":1,"13":1,"16":1,"18":8,"20":8,"21":8,"23":8,"24":8,"25":8,"26":8,"27":8,"28":8,"35":1,"38":53,"40":53,"41":53,"42":53,"43":53,"44":53,"45":53,"47":53,"48":53,"49":53,"54":53,"55":53,"57":2820,"59":53,"64":53,"65":53,"66":2820,"67":2820,"68":173,"70":2820,"71":220,"74":53,"75":53,"79":53,"89":2820,"92":2820,"95":2820,"96":2820,"97":2820,"98":26,"100":2794,"104":2820,"107":0,"110":0,"113":0,"116":53,"121":1}},
"src/date-rect.ts":{"path":"src/date-rect.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":21}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":12}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"6":{"start":{"line":12,"column":0},"end":{"line":280,"column":1}},"7":{"start":{"line":12,"column":30},"end":{"line":12,"column":34}},"8":{"start":{"line":26,"column":4},"end":{"line":37,"column":5}},"9":{"start":{"line":28,"column":8},"end":{"line":28,"column":38}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":25}},"11":{"start":{"line":31,"column":8},"end":{"line":31,"column":38}},"12":{"start":{"line":32,"column":8},"end":{"line":32,"column":48}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":32}},"14":{"start":{"line":34,"column":8},"end":{"line":34,"column":58}},"15":{"start":{"line":35,"column":8},"end":{"line":35,"column":22}},"16":{"start":{"line":46,"column":14},"end":{"line":68,"column":5}},"17":{"start":{"line":49,"column":8},"end":{"line":49,"column":33}},"18":{"start":{"line":53,"column":8},"end":{"line":65,"column":11}},"19":{"start":{"line":54,"column":12},"end":{"line":54,"column":32}},"20":{"start":{"line":55,"column":12},"end":{"line":64,"column":13}},"21":{"start":{"line":56,"column":16},"end":{"line":56,"column":44}},"22":{"start":{"line":57,"column":16},"end":{"line":57,"column":33}},"23":{"start":{"line":58,"column":16},"end":{"line":58,"column":59}},"24":{"start":{"line":59,"column":16},"end":{"line":59,"column":45}},"25":{"start":{"line":61,"column":16},"end":{"line":61,"column":43}},"26":{"start":{"line":63,"column":16},"end":{"line":63,"column":53}},"27":{"start":{"line":66,"column":8},"end":{"line":66,"column":28}},"28":{"start":{"line":67,"column":8},"end":{"line":67,"column":20}},"29":{"start":{"line":88,"column":14},"end":{"line":111,"column":5}},"30":{"start":{"line":90,"column":8},"end":{"line":110,"column":9}},"31":{"start":{"line":92,"column":12},"end":{"line":92,"column":24}},"32":{"start":{"line":95,"column":12},"end":{"line":108,"column":13}},"33":{"start":{"line":97,"column":16},"end":{"line":97,"column":32}},"34":{"start":{"line":98,"column":16},"end":{"line":98,"column":38}},"35":{"start":{"line":99,"column":16},"end":{"line":99,"column":42}},"36":{"start":{"line":100,"column":16},"end":{"line":100,"column":48}},"37":{"start":{"line":101,"column":16},"end":{"line":101,"column":41}},"38":{"start":{"line":102,"column":16},"end":{"line":102,"column":46}},"39":{"start":{"line":103,"column":16},"end":{"line":103,"column":34}},"40":{"start":{"line":104,"column":16},"end":{"line":104,"column":35}},"41":{"start":{"line":105,"column":16},"end":{"line":105,"column":32}},"42":{"start":{"line":106,"column":16},"end":{"line":106,"column":35}},"43":{"start":{"line":107,"column":16},"end":{"line":107,"column":35}},"44":{"start":{"line":109,"column":12},"end":{"line":109,"column":24}},"45":{"start":{"line":120,"column":12},"end":{"line":170,"column":5}},"46":{"start":{"line":122,"column":8},"end":{"line":122,"column":105}},"47":{"start":{"line":123,"column":8},"end":{"line":123,"column":40}},"48":{"start":{"line":124,"column":8},"end":{"line":124,"column":70}},"49":{"start":{"line":126,"column":8},"end":{"line":126,"column":93}},"50":{"start":{"line":127,"column":8},"end":{"line":127,"column":131}},"51":{"start":{"line":129,"column":8},"end":{"line":129,"column":89}},"52":{"start":{"line":130,"column":8},"end":{"line":130,"column":131}},"53":{"start":{"line":132,"column":8},"end":{"line":132,"column":38}},"54":{"start":{"line":133,"column":8},"end":{"line":133,"column":32}},"55":{"start":{"line":134,"column":8},"end":{"line":134,"column":95}},"56":{"start":{"line":136,"column":8},"end":{"line":142,"column":9}},"57":{"start":{"line":137,"column":12},"end":{"line":137,"column":57}},"58":{"start":{"line":138,"column":12},"end":{"line":138,"column":22}},"59":{"start":{"line":140,"column":12},"end":{"line":140,"column":57}},"60":{"start":{"line":141,"column":12},"end":{"line":141,"column":33}},"61":{"start":{"line":144,"column":8},"end":{"line":147,"column":35}},"62":{"start":{"line":149,"column":8},"end":{"line":153,"column":36}},"63":{"start":{"line":155,"column":8},"end":{"line":158,"column":28}},"64":{"start":{"line":161,"column":8},"end":{"line":166,"column":45}},"65":{"start":{"line":168,"column":8},"end":{"line":168,"column":20}},"66":{"start":{"line":181,"column":14},"end":{"line":256,"column":5}},"67":{"start":{"line":184,"column":8},"end":{"line":184,"column":33}},"68":{"start":{"line":186,"column":8},"end":{"line":186,"column":105}},"69":{"start":{"line":187,"column":8},"end":{"line":187,"column":87}},"70":{"start":{"line":188,"column":8},"end":{"line":188,"column":40}},"71":{"start":{"line":189,"column":8},"end":{"line":189,"column":43}},"72":{"start":{"line":190,"column":8},"end":{"line":190,"column":65}},"73":{"start":{"line":191,"column":8},"end":{"line":191,"column":89}},"74":{"start":{"line":193,"column":8},"end":{"line":193,"column":85}},"75":{"start":{"line":194,"column":8},"end":{"line":194,"column":84}},"76":{"start":{"line":199,"column":8},"end":{"line":199,"column":54}},"77":{"start":{"line":200,"column":8},"end":{"line":203,"column":11}},"78":{"start":{"line":202,"column":12},"end":{"line":202,"column":38}},"79":{"start":{"line":204,"column":8},"end":{"line":204,"column":35}},"80":{"start":{"line":209,"column":8},"end":{"line":209,"column":46}},"81":{"start":{"line":210,"column":8},"end":{"line":210,"column":47}},"82":{"start":{"line":211,"column":8},"end":{"line":218,"column":9}},"83":{"start":{"line":211,"column":13},"end":{"line":211,"column":21}},"84":{"start":{"line":212,"column":12},"end":{"line":214,"column":13}},"85":{"start":{"line":213,"column":16},"end":{"line":213,"column":36}},"86":{"start":{"line":215,"column":12},"end":{"line":217,"column":13}},"87":{"start":{"line":216,"column":16},"end":{"line":216,"column":37}},"88":{"start":{"line":219,"column":8},"end":{"line":219,"column":39}},"89":{"start":{"line":220,"column":8},"end":{"line":220,"column":41}},"90":{"start":{"line":224,"column":8},"end":{"line":252,"column":23}},"91":{"start":{"line":234,"column":24},"end":{"line":234,"column":77}},"92":{"start":{"line":237,"column":24},"end":{"line":237,"column":76}},"93":{"start":{"line":242,"column":24},"end":{"line":242,"column":66}},"94":{"start":{"line":245,"column":24},"end":{"line":245,"column":40}},"95":{"start":{"line":248,"column":24},"end":{"line":248,"column":44}},"96":{"start":{"line":251,"column":24},"end":{"line":251,"column":42}},"97":{"start":{"line":254,"column":8},"end":{"line":254,"column":20}},"98":{"start":{"line":263,"column":14},"end":{"line":269,"column":5}},"99":{"start":{"line":264,"column":8},"end":{"line":266,"column":33}},"100":{"start":{"line":267,"column":8},"end":{"line":267,"column":61}},"101":{"start":{"line":268,"column":8},"end":{"line":268,"column":20}},"102":{"start":{"line":273,"column":14},"end":{"line":276,"column":5}},"103":{"start":{"line":274,"column":8},"end":{"line":274,"column":60}},"104":{"start":{"line":275,"column":8},"end":{"line":275,"column":20}},"105":{"start":{"line":280,"column":0},"end":{"line":280,"column":1}},"106":{"start":{"line":12,"column":13},"end":{"line":280,"column":1}}},"fnMap":{"1":{"name":"(anonymous_71)","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"DateRect","line":26,"loc":{"start":{"line":26,"column":4},"end":{"line":26,"column":85}}},"3":{"name":"(anonymous_73)","line":46,"loc":{"start":{"line":46,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_74)","line":53,"loc":{"start":{"line":53,"column":54},"end":{"line":53,"column":69}}},"5":{"name":"(anonymous_75)","line":88,"loc":{"start":{"line":88,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_76)","line":120,"loc":{"start":{"line":120,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_77)","line":181,"loc":{"start":{"line":181,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_78)","line":200,"loc":{"start":{"line":200,"column":28},"end":{"line":200,"column":42}}},"9":{"name":"(anonymous_79)","line":233,"loc":{"start":{"line":233,"column":31},"end":{"line":233,"column":45}}},"10":{"name":"(anonymous_80)","line":236,"loc":{"start":{"line":236,"column":31},"end":{"line":236,"column":45}}},"11":{"name":"(anonymous_81)","line":241,"loc":{"start":{"line":241,"column":34},"end":{"line":241,"column":48}}},"12":{"name":"(anonymous_82)","line":244,"loc":{"start":{"line":244,"column":33},"end":{"line":244,"column":47}}},"13":{"name":"(anonymous_83)","line":247,"loc":{"start":{"line":247,"column":37},"end":{"line":247,"column":51}}},"14":{"name":"(anonymous_84)","line":250,"loc":{"start":{"line":250,"column":36},"end":{"line":null,"column":-1}}},"15":{"name":"(anonymous_85)","line":263,"loc":{"start":{"line":263,"column":4},"end":{"line":263,"column":32}}},"16":{"name":"(anonymous_86)","line":273,"loc":{"start":{"line":273,"column":4},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}}]},"2":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":16},"end":{"line":null,"column":-1}}]},"4":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":11}},{"start":{"line":55,"column":12},"end":{"line":55,"column":11}}]},"5":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":7}},{"start":{"line":90,"column":8},"end":{"line":90,"column":7}}]},"6":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":95,"column":11}},{"start":{"line":95,"column":12},"end":{"line":95,"column":11}}]},"7":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":7}},{"start":{"line":136,"column":8},"end":{"line":136,"column":7}}]},"8":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":12},"end":{"line":212,"column":11}},{"start":{"line":212,"column":12},"end":{"line":212,"column":11}}]},"9":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":12},"end":{"line":215,"column":11}},{"start":{"line":215,"column":12},"end":{"line":215,"column":11}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":15,"10":15,"11":15,"12":15,"13":15,"14":15,"15":15,"16":1,"17":23,"18":23,"19":50019,"20":50019,"21":50019,"22":50019,"23":50019,"24":50019,"25":50019,"26":0,"27":23,"28":23,"29":1,"30":74,"31":0,"32":74,"33":74,"34":74,"35":74,"36":74,"37":74,"38":74,"39":74,"40":74,"41":74,"42":74,"43":74,"44":74,"45":1,"46":87,"47":87,"48":87,"49":87,"50":87,"51":87,"52":87,"53":87,"54":87,"55":87,"56":87,"57":39,"58":39,"59":48,"60":48,"61":87,"62":87,"63":87,"64":87,"65":87,"66":1,"67":33,"68":33,"69":33,"70":33,"71":33,"72":33,"73":33,"74":33,"75":33,"76":33,"77":33,"78":2522,"79":33,"80":33,"81":33,"82":33,"83":2522,"84":2522,"85":141,"86":2522,"87":182,"88":33,"89":33,"90":33,"91":2522,"92":2522,"93":2522,"94":0,"95":0,"96":0,"97":33,"98":1,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":1,"106":1},"b":{"1":[1,0],"2":[1,0],"3":[1,0],"4":[50019,0],"5":[0,74],"6":[74,0],"7":[39,48],"8":[141,2381],"9":[182,2340]},"f":{"1":1,"2":15,"3":23,"4":50019,"5":74,"6":87,"7":33,"8":2522,"9":2522,"10":2522,"11":2522,"12":0,"13":0,"14":0,"15":0,"16":0},"code":"import 'crossfilter';\r\nimport 'd3';\r\nimport 'moment';\r\n\r\n\r\nimport {Base} from './base';\r\nimport {ColorMap} from './colormap';\r\n\r\n/**\r\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\r\n */\r\nexport class DateRect extends Base {\r\n\n    protected dateScale: d3.time.Scale<any, any>;\r\n    protected dateFrom: Date;\r\n    protected dateTo: Date;\r\n\n\r\n    /**\r\n     * Constructor method for DateRect\r\n     * @param  {CrossFilter.CrossFilter<any>} cf Crossfilter object\r\n     * containing the data.\r\n     * @param  {string} domElemId name of the DOM element to draw in.\r\n     * @return {[type]} A reference to an instance of DateRect.\r\n     */\r\n    constructor (cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\r\n\n        super(cf, domElemId, datekey);\r\n\n        this.xlabel = '';\n        this.title = 'DateRect title';\r\n        this.colormap = new ColorMap('default');\r\n        this.defineDimensions();\r\n        this.domElem.classList.add('punchcard-date-rect');\r\n        this.update();\r\n\r\n    }\n\n\n\n\n    /**\r\n     * Defines the crossfilter dimensions as used by this class\r\n     * @return {Base} A reference to an instance of DateRect.\r\n     */\r\n    protected defineDimensions():DateRect {\r\n\r\n        // store a reference to the instance\r\n        let that:DateRect = this;\r\n\r\n        // based on example from\r\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\r\n        this.dim.dateAndHourOfDay = this.cf.dimension(function (d:any) {\r\n            let m:moment.Moment;\r\n            if (d.hasOwnProperty(that.datekey)) {\r\n                m = moment(d[that.datekey]);\r\n                let obj:any = {};\r\n                obj[that.datekey] = m.format('YYYY-MM-DD');\r\n                obj['hourOfDay'] =  m.hour();\r\n                //stringify() and later, parse() to get keyed objects\r\n                return JSON.stringify(obj);\r\n            } else {\r\n                throw new Error('datekey undefined');\r\n            }\r\n        });\r\n        this.canDraw = true;\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * This method defines which other methods to call in order to create\r\n     * a punchcard graph with the date on the horizontal axis and the time of\r\n     * day on the vertical axis. Mostly calls methods of the parent class, Base,\r\n     * but for example the symbols for this class are SVG rects, so it calls its\r\n     * own method .drawSymbols() for that.\r\n     *\r\n     * Successful drawing depends on whether the container is currently visible,\r\n     * and whether there is enough information in the instance to draw anything\r\n     * at all.\r\n     *\r\n     * This method overrides stub method in parent class.\r\n     *\r\n     * @return {DateRect} A reference to an instance of DateRect.\r\n     */\r\n    protected draw():DateRect {\r\n\n        if (this.domElem.classList.contains('hidden')) {\n            // div is hidden\n            return this;\n        } else {\r\n            // div is visible\r\n            if (this.canDraw) {\r\n                // dimensions have been defined\r\n                super.drawSvg();\r\n                super.drawChartBody();\r\n                this.drawHorizontalAxis();\r\n                super.drawHorizontalAxisLabel();\r\n                super.drawVerticalAxis();\r\n                super.drawVerticalAxisLabel();\r\n                super.drawTitle();\r\n                this.drawSymbols();\r\n                super.drawBox();\r\n                super.drawLegend();\r\n                super.drawFooter();\r\n            }\r\n            return this;\r\n        }\n    }\n\n\n\n    /**\r\n     * Adds an SVG g element containing a horizontal d3.time.scale axis to the\r\n     * DOM, representing the date.\r\n     * @return {DateRect} A reference to an instance of DateRect.\r\n     */\r\n    private drawHorizontalAxis():DateRect {\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let dx:number = this.marginLeft;\n        let dy:number = this.domElem.clientHeight - this.marginBottom;\n\n        let firstResultDate = new Date(this.dim.dateAndHourOfDay.bottom(1)[0][this.datekey]);\r\n        this.dateFrom = new Date(firstResultDate.getFullYear(), firstResultDate.getMonth(), firstResultDate.getDate(), 0, 0, 0, 0);\n\n        let lastResultDate = new Date(this.dim.dateAndHourOfDay.top(1)[0][this.datekey]);\r\n        this.dateTo = new Date(lastResultDate.getFullYear(), lastResultDate.getMonth(), lastResultDate.getDate(), 23, 59, 59, 999);\n\n        let tickFormat:d3.time.Format;\r\n        let ticks: number | any; // FIXME second type should be Date[] but that doesn't work somehow\r\n        let nHoursDiff: number = moment(this.dateTo).diff(moment(this.dateFrom), 'hour', true);\n\n        if (nHoursDiff > 5 * 24) {\n            tickFormat = d3.time.format('%a %b %-d, %Y');\n            ticks = 7;\n        } else {\n            tickFormat = d3.time.format('%a %b %-d, %Y');\n            ticks = d3.time.days;\r\n        };\n\n        this.dateScale = d3.time.scale()\n            .range([0, w])\n            .domain([this.dateFrom,\n                     this.dateTo]);\n\n        let dateAxis = d3.svg.axis()\n            .orient('bottom')\n            .scale(this.dateScale)\n            .ticks(ticks)\n            .tickFormat(tickFormat);\n\n        this.svg.append('g')\n            .attr('class', 'horizontal-axis')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(dateAxis);\n\n        // doing style stuff in JavaScript is considered bad practice...:\n        this.svg.select('.horizontal-axis')\n            .selectAll('text')\n                .attr('x', -10)\n                .attr('y', 0)\n                .attr('dy', '.35em')\n                .style('text-anchor', 'end');\n\n        return this;\n\n    }\r\n\r\n\n\n    /**\r\n     * This method adds an SVG g element with many SVG rects in it. Each rect\r\n     * represents the count of how many data rows fall within the area covered\r\n     * by the rect, where the horizontal boundaries dictate the date range and\r\n     * the vertical boundaries dictate the time of day range.\r\n     * @return {DateRect} A reference to the instance of DateRect.\r\n     */\r\n    protected drawSymbols():DateRect {\r\n\n        // capture the this object\n        let that:DateRect = this;\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop + h;\n        let symbolMargin = {left:0, right: 0, top: 0, bottom: 0}; // pixels\n        let wDays:number = moment(this.dateTo).diff(moment(this.dateFrom), 'days', true);\n\n        let symbolWidth :number = w / wDays - symbolMargin.left - symbolMargin.right;\n        let symbolHeight:number = h / 24.0 - symbolMargin.top - symbolMargin.bottom;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        let group = this.dim.dateAndHourOfDay.group();\n        group.all().forEach(function(d:any) {\r\n            //parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        let data:any = group.all();\n\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (let elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n\n        // draw the rects\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('rect.symbol')\n                .data(data)\n                .enter()\n                .append('rect')\n                    .attr('class', 'symbol')\n                    .attr('x', function(d:any){\r\n                        return that.dateScale(new Date(d.key[that.datekey]));\r\n                        })\n                    .attr('y', function(d:any){\r\n                        return that.todScale(parseInt(d.key.hourOfDay, 10));\n                    })\n                    .attr('width', symbolWidth)\n                    .attr('height', symbolHeight)\n                    .attr('fill', function(d:any){\r\n                        return that.colormap.getColorRGB(d.value);\n                    })\r\n                    .on('click', function(d:any){\r\n                        that.onClick(d);\r\n                    })\r\n                    .on('mouseover', function(d:any){\r\n                        that.onMouseOver(d);\r\n                    })\r\n                    .on('mouseout', function(){\r\n                        that.onMouseOut();\r\n                    });\r\n\n        return this;\n\n    }\r\n\r\n\r\n\r\n    /*\r\n     * overrides method from Base\r\n     */\r\n    protected onMouseOver(d: any): DateRect {\r\n        let str: string = 'x:' + d.key[this.datekey] +\r\n            ', y:' + d.key['hourOfDay'] +\r\n            ', count:' + d.value;\r\n        this.svg.select('g.footer').select('text').text(str);\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n    protected onMouseOut(): DateRect {\r\n        this.svg.select('g.footer').select('text').text('');\r\n        return this;\r\n    }\r\n\r\n\r\n\n}\n\n\n","l":{"1":1,"2":1,"3":1,"6":1,"7":1,"12":1,"26":1,"28":15,"30":15,"31":15,"32":15,"33":15,"34":15,"35":15,"46":1,"49":23,"53":23,"54":50019,"55":50019,"56":50019,"57":50019,"58":50019,"59":50019,"61":50019,"63":0,"66":23,"67":23,"88":1,"90":74,"92":0,"95":74,"97":74,"98":74,"99":74,"100":74,"101":74,"102":74,"103":74,"104":74,"105":74,"106":74,"107":74,"109":74,"120":1,"122":87,"123":87,"124":87,"126":87,"127":87,"129":87,"130":87,"132":87,"133":87,"134":87,"136":87,"137":39,"138":39,"140":48,"141":48,"144":87,"149":87,"155":87,"161":87,"168":87,"181":1,"184":33,"186":33,"187":33,"188":33,"189":33,"190":33,"191":33,"193":33,"194":33,"199":33,"200":33,"202":2522,"204":33,"209":33,"210":33,"211":2522,"212":2522,"213":141,"215":2522,"216":182,"219":33,"220":33,"224":33,"234":2522,"237":2522,"242":2522,"245":0,"248":0,"251":0,"254":33,"263":1,"264":0,"267":0,"268":0,"273":1,"274":0,"275":0,"280":1}},
"src/legend.ts":{"path":"src/legend.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":12}},"2":{"start":{"line":20,"column":0},"end":{"line":389,"column":1}},"3":{"start":{"line":84,"column":4},"end":{"line":100,"column":5}},"4":{"start":{"line":86,"column":8},"end":{"line":86,"column":31}},"5":{"start":{"line":89,"column":8},"end":{"line":89,"column":28}},"6":{"start":{"line":90,"column":8},"end":{"line":90,"column":30}},"7":{"start":{"line":91,"column":8},"end":{"line":91,"column":48}},"8":{"start":{"line":92,"column":8},"end":{"line":92,"column":54}},"9":{"start":{"line":94,"column":8},"end":{"line":94,"column":83}},"10":{"start":{"line":95,"column":8},"end":{"line":95,"column":93}},"11":{"start":{"line":97,"column":8},"end":{"line":97,"column":24}},"12":{"start":{"line":98,"column":8},"end":{"line":98,"column":25}},"13":{"start":{"line":109,"column":11},"end":{"line":121,"column":5}},"14":{"start":{"line":112,"column":8},"end":{"line":112,"column":30}},"15":{"start":{"line":113,"column":8},"end":{"line":113,"column":34}},"16":{"start":{"line":114,"column":8},"end":{"line":114,"column":32}},"17":{"start":{"line":115,"column":8},"end":{"line":115,"column":37}},"18":{"start":{"line":116,"column":8},"end":{"line":116,"column":25}},"19":{"start":{"line":117,"column":8},"end":{"line":117,"column":27}},"20":{"start":{"line":118,"column":8},"end":{"line":118,"column":23}},"21":{"start":{"line":120,"column":8},"end":{"line":120,"column":20}},"22":{"start":{"line":129,"column":14},"end":{"line":144,"column":5}},"23":{"start":{"line":132,"column":8},"end":{"line":132,"column":102}},"24":{"start":{"line":133,"column":8},"end":{"line":133,"column":39}},"25":{"start":{"line":135,"column":8},"end":{"line":141,"column":56}},"26":{"start":{"line":143,"column":8},"end":{"line":143,"column":20}},"27":{"start":{"line":152,"column":12},"end":{"line":168,"column":5}},"28":{"start":{"line":154,"column":8},"end":{"line":154,"column":102}},"29":{"start":{"line":155,"column":8},"end":{"line":155,"column":78}},"30":{"start":{"line":157,"column":8},"end":{"line":160,"column":22}},"31":{"start":{"line":162,"column":8},"end":{"line":164,"column":68}},"32":{"start":{"line":166,"column":8},"end":{"line":166,"column":20}},"33":{"start":{"line":176,"column":14},"end":{"line":191,"column":5}},"34":{"start":{"line":178,"column":8},"end":{"line":178,"column":102}},"35":{"start":{"line":179,"column":8},"end":{"line":179,"column":92}},"36":{"start":{"line":182,"column":8},"end":{"line":188,"column":52}},"37":{"start":{"line":190,"column":8},"end":{"line":190,"column":20}},"38":{"start":{"line":200,"column":14},"end":{"line":240,"column":5}},"39":{"start":{"line":203,"column":8},"end":{"line":203,"column":31}},"40":{"start":{"line":205,"column":8},"end":{"line":205,"column":102}},"41":{"start":{"line":206,"column":8},"end":{"line":206,"column":78}},"42":{"start":{"line":208,"column":8},"end":{"line":208,"column":27}},"43":{"start":{"line":209,"column":8},"end":{"line":209,"column":32}},"44":{"start":{"line":210,"column":8},"end":{"line":215,"column":9}},"45":{"start":{"line":211,"column":12},"end":{"line":214,"column":19}},"46":{"start":{"line":217,"column":8},"end":{"line":217,"column":56}},"47":{"start":{"line":220,"column":8},"end":{"line":237,"column":23}},"48":{"start":{"line":231,"column":24},"end":{"line":231,"column":80}},"49":{"start":{"line":236,"column":24},"end":{"line":236,"column":74}},"50":{"start":{"line":239,"column":8},"end":{"line":239,"column":20}},"51":{"start":{"line":248,"column":14},"end":{"line":261,"column":5}},"52":{"start":{"line":250,"column":8},"end":{"line":250,"column":121}},"53":{"start":{"line":251,"column":8},"end":{"line":251,"column":44}},"54":{"start":{"line":253,"column":8},"end":{"line":258,"column":36}},"55":{"start":{"line":260,"column":8},"end":{"line":260,"column":20}},"56":{"start":{"line":270,"column":14},"end":{"line":294,"column":5}},"57":{"start":{"line":272,"column":8},"end":{"line":272,"column":86}},"58":{"start":{"line":273,"column":8},"end":{"line":273,"column":95}},"59":{"start":{"line":274,"column":8},"end":{"line":274,"column":106}},"60":{"start":{"line":275,"column":8},"end":{"line":275,"column":78}},"61":{"start":{"line":277,"column":8},"end":{"line":279,"column":85}},"62":{"start":{"line":281,"column":8},"end":{"line":285,"column":30}},"63":{"start":{"line":287,"column":8},"end":{"line":290,"column":32}},"64":{"start":{"line":292,"column":8},"end":{"line":292,"column":20}},"65":{"start":{"line":302,"column":14},"end":{"line":317,"column":5}},"66":{"start":{"line":304,"column":8},"end":{"line":304,"column":95}},"67":{"start":{"line":305,"column":8},"end":{"line":305,"column":81}},"68":{"start":{"line":306,"column":8},"end":{"line":306,"column":49}},"69":{"start":{"line":308,"column":8},"end":{"line":313,"column":57}},"70":{"start":{"line":315,"column":8},"end":{"line":315,"column":20}},"71":{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},"72":{"start":{"line":335,"column":8},"end":{"line":335,"column":32}},"73":{"start":{"line":327,"column":8},"end":{"line":327,"column":51}},"74":{"start":{"line":343,"column":4},"end":{"line":345,"column":5}},"75":{"start":{"line":352,"column":8},"end":{"line":352,"column":33}},"76":{"start":{"line":344,"column":8},"end":{"line":344,"column":53}},"77":{"start":{"line":360,"column":4},"end":{"line":362,"column":5}},"78":{"start":{"line":369,"column":8},"end":{"line":369,"column":31}},"79":{"start":{"line":361,"column":8},"end":{"line":361,"column":70}},"80":{"start":{"line":377,"column":4},"end":{"line":379,"column":5}},"81":{"start":{"line":386,"column":8},"end":{"line":386,"column":34}},"82":{"start":{"line":378,"column":8},"end":{"line":378,"column":79}},"83":{"start":{"line":389,"column":0},"end":{"line":389,"column":1}},"84":{"start":{"line":20,"column":13},"end":{"line":389,"column":1}}},"fnMap":{"1":{"name":"(anonymous_89)","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Legend","line":84,"loc":{"start":{"line":84,"column":4},"end":{"line":84,"column":47}}},"3":{"name":"(anonymous_91)","line":109,"loc":{"start":{"line":109,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_92)","line":129,"loc":{"start":{"line":129,"column":4},"end":{"line":null,"column":-1}}},"5":{"name":"(anonymous_93)","line":152,"loc":{"start":{"line":152,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_94)","line":176,"loc":{"start":{"line":176,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_95)","line":200,"loc":{"start":{"line":200,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_96)","line":230,"loc":{"start":{"line":230,"column":31},"end":{"line":230,"column":45}}},"9":{"name":"(anonymous_97)","line":235,"loc":{"start":{"line":235,"column":34},"end":{"line":235,"column":48}}},"10":{"name":"(anonymous_98)","line":248,"loc":{"start":{"line":248,"column":4},"end":{"line":null,"column":-1}}},"11":{"name":"(anonymous_99)","line":270,"loc":{"start":{"line":270,"column":4},"end":{"line":null,"column":-1}}},"12":{"name":"(anonymous_100)","line":302,"loc":{"start":{"line":302,"column":4},"end":{"line":null,"column":-1}}},"13":{"name":"(anonymous_101)","line":334,"loc":{"start":{"line":334,"column":4},"end":{"line":null,"column":-1}}},"14":{"name":"(anonymous_102)","line":326,"loc":{"start":{"line":326,"column":4},"end":{"line":326,"column":46}}},"15":{"name":"(anonymous_103)","line":351,"loc":{"start":{"line":351,"column":4},"end":{"line":null,"column":-1}}},"16":{"name":"(anonymous_104)","line":343,"loc":{"start":{"line":343,"column":4},"end":{"line":343,"column":48}}},"17":{"name":"(anonymous_105)","line":368,"loc":{"start":{"line":368,"column":4},"end":{"line":null,"column":-1}}},"18":{"name":"(anonymous_106)","line":360,"loc":{"start":{"line":360,"column":4},"end":{"line":360,"column":44}}},"19":{"name":"(anonymous_107)","line":385,"loc":{"start":{"line":385,"column":4},"end":{"line":null,"column":-1}}},"20":{"name":"(anonymous_108)","line":377,"loc":{"start":{"line":377,"column":4},"end":{"line":377,"column":50}}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}}]}},"s":{"1":1,"2":1,"3":1,"4":128,"5":128,"6":128,"7":128,"8":128,"9":128,"10":128,"11":128,"12":128,"13":1,"14":128,"15":128,"16":128,"17":128,"18":128,"19":128,"20":128,"21":128,"22":1,"23":128,"24":128,"25":128,"26":128,"27":1,"28":128,"29":128,"30":128,"31":128,"32":128,"33":1,"34":128,"35":128,"36":128,"37":128,"38":1,"39":128,"40":128,"41":128,"42":128,"43":128,"44":128,"45":16384,"46":128,"47":128,"48":16384,"49":16384,"50":128,"51":1,"52":128,"53":128,"54":128,"55":128,"56":1,"57":128,"58":128,"59":128,"60":128,"61":128,"62":128,"63":128,"64":128,"65":1,"66":128,"67":128,"68":128,"69":128,"70":128,"71":1,"72":1024,"73":128,"74":1,"75":384,"76":128,"77":1,"78":768,"79":128,"80":1,"81":896,"82":128,"83":1,"84":1},"b":{"1":[1,0]},"f":{"1":1,"2":128,"3":128,"4":128,"5":128,"6":128,"7":128,"8":16384,"9":16384,"10":128,"11":128,"12":128,"13":1024,"14":128,"15":384,"16":128,"17":768,"18":128,"19":896,"20":128},"code":"\r\nimport 'd3';\r\n\r\nimport {Base} from './base';\r\nimport {DateCircle} from './date-circle';\r\nimport {DateRect} from './date-rect';\r\nimport {WeekdayCircle} from './weekday-circle';\r\nimport {WeekdayRect} from './weekday-rect';\r\n\r\n/**\r\n * Convenience type/collection of various punchcards\r\n  */\r\ntype PunchcardVisualization = Base|DateCircle|DateRect|\r\n                                    WeekdayCircle|WeekdayRect;\r\n\n/**\r\n * Legend adds a legend to an existing PunchcardVisualization, indicating which\r\n * color represents which domain value.\r\n */\r\nexport class Legend {\r\n\r\n    /**\r\n     * Margin in pixels to the left of the legend\r\n     * @type {number}\r\n     */\r\n    private _marginLeft: number;\r\n    /**\r\n     * Margin in pixels to the right of the legend\r\n     * @type {number}\r\n     */\r\n    private _marginRight: number;\r\n    /**\r\n     * Margin in pixels to the top of the legend\r\n     * @type {number}\r\n     */\r\n    private _marginTop: number;\r\n    /**\r\n     * Margin in pixels to the bottom of the legend\r\n     * @type {number}\r\n     */\r\n    private _marginBottom: number;\r\n    /**\r\n     * The Legend's sibling, i.e. the object that the legend is associated with.\r\n     * @type {PunchcardVisualization}\r\n     */\r\n    protected sibling: PunchcardVisualization;\r\n    /**\r\n     * The title of the Legend\r\n     * @type {string}\r\n     */\r\n    protected title: string;\r\n    /**\r\n     * Text to label the Legend's vertical axis\r\n     * @type {string}\r\n     */\r\n    protected ylabel: string;\r\n    /**\r\n     * The legend's horizontal axis scale\r\n     * @type {any}\r\n     */\r\n    protected horizontalScale: any;\r\n    /**\r\n     * The Legend's vertical axis scale\r\n     * @type {any}\r\n     */\r\n    protected verticalScale: any;\r\n    /**\r\n     * The Legend's width in pixels\r\n     * @type {number}\r\n     */\r\n    protected width: number;\r\n    /**\r\n     * The Legend's height in pixels\r\n     * @type {number}\r\n     */\r\n    protected height: number;\r\n\r\n    /**\r\n     * Adds a legend to an existing PunchcardVisualization.\r\n     * @param  {PunchcardVisualization} sibling The sibling element, for which\r\n     * a legend needs to be constructed\r\n     * @return {[type]} A reference to the instance of Legend\r\n     */\r\n    constructor (sibling:PunchcardVisualization) {\n\n        this.sibling = sibling;\n\n        // the margins around the legend body\n        this.marginLeft = 0;\n        this.marginRight = 60;\n        this.marginTop = this.sibling.marginTop;\n        this.marginBottom = this.sibling.marginBottom;\n\n        this.width = this.sibling.legendWidth - this.marginLeft - this.marginRight;\n        this.height = this.sibling.domElem.clientHeight - this.marginTop - this.marginBottom;\n\n        this.title = '';\n        this.ylabel = '';\n\n    }\n\n\n\n    /**\r\n     * This method calls the other methods in a predefined succession, so that\r\n     * the whole legend gets drawn\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    public draw(): Legend {\r\n        // draw the legend\n\n        this.drawLegendBody();\n        this.drawHorizontalAxis();\n        this.drawVerticalAxis();\n        this.drawVerticalAxisLabel();\n        this.drawTitle();\n        this.drawSymbols();\n        this.drawBox();\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Draws the box around the legend\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawBox():Legend {\r\n        // draw box\n\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        let dy:number = this.marginTop;\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend legendbody-box')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('class', 'legend legendbody-box');\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Draws the Legend's horizontal axis\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    private drawHorizontalAxis():Legend {\r\n\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        let dy:number = this.sibling.domElem.clientHeight - this.marginBottom;\n\n        let horizontalAxis = d3.svg.axis()\n            .orient('bottom')\n            .scale(this.horizontalScale)\n            .ticks(0);\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend horizontal-axis')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' );\n\n        return this;\n\n    }\n\n\n\n    /**\r\n     * Draws the Legend's body (but not the colored symbols on it)\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawLegendBody():Legend {\r\n        //\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        let dy:number = this.sibling.domElem.clientHeight - this.marginBottom - this.height;\n\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend legendbody')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('class', 'legend legendbody');\r\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Draws the Legend's colored symbols, each of which is associated with a\r\n     * certain domain value.\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawSymbols():Legend {\r\n        // pass\n\n        let that:Legend = this;\r\n\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        let dy:number = this.sibling.domElem.clientHeight - this.marginBottom;\n\n        let data: any = [];\n        let nRects:number = 128;\n        for (let iRect = 0; iRect < nRects; iRect += 1) {\n            data.push({\n                    value: this.sibling.colormap.cLimLow +\n                            ((iRect + 0.5) / nRects) * (this.sibling.colormap.cLimHigh - this.sibling.colormap.cLimLow)\n                });\n        }\n\n        let symbolHeight: number = this.height / nRects;\n\n        // draw the rects\n        this.sibling.svg\n            .append('g')\n            .attr('class', 'punchcard-legend symbol')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('rect.symbol')\n                .data(data)\n                .enter()\n                .append('rect')\n                    .attr('class', 'symbol')\n                    .attr('x', 0)\n                    .attr('y', function(d:any){\r\n                        return that.verticalScale(d.value) - 0.5 * symbolHeight;\n                    })\n                    .attr('width', this.width)\n                    .attr('height', symbolHeight)\n                    .attr('fill', function(d:any){\r\n                        return that.sibling.colormap.getColorRGB(d.value);\n                    });\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Draws the Legend's title\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawTitle():Legend {\r\n\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft + 0.5 * this.width;\n        let dy:number = this.marginTop - 20;\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend title')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .append('text')\n            .text(this.title)\n            .attr('class', 'title');\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Draws the Legend's vertical axis, that is used to read the domain value\r\n     * associated with a certain color.\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawVerticalAxis():Legend {\r\n        //\n        let w :number = this.sibling.legendWidth - this.marginLeft - this.marginRight;\n        let h :number = this.sibling.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft + w;\n        let dy:number = this.sibling.domElem.clientHeight - this.marginBottom;\n\n        this.verticalScale = d3.scale.linear()\n            .range([0, -h])\n            .domain([this.sibling.colormap.cLimLow, this.sibling.colormap.cLimHigh]);\n\n        let verticalAxis = d3.svg.axis()\n            .orient('right')\n            .scale(this.verticalScale)\n            .innerTickSize(5)\n            .outerTickSize(5);\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend vertical-axis')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(verticalAxis);\n\n        return this;\n\n    }\n\n\n\n    /**\r\n     * Draws the Legend's vertical axis text label\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawVerticalAxisLabel():Legend {\r\n        //\n        let h :number = this.sibling.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.sibling.domElem.clientWidth - this.marginRight + 40;\n        let dy:number = this.marginTop + 0.5 * h;\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend vertical-axis-label')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ') rotate(-90)')\n            .append('text')\n            .text(this.ylabel)\n            .attr('class', 'legend vertical-axis-label');\n\n        return this;\n\n    }\n\n\n\n    /**\r\n     * [marginLeft description]\r\n     * @param  {number} marginLeft [description]\r\n     * @return {[type]}            [description]\r\n     */\r\n    protected set marginLeft(marginLeft:number) {\n        this._marginLeft = Math.max(marginLeft, 0);\n    }\n\r\n    /**\r\n     * [marginLeft description]\r\n     * @return {number} [description]\r\n     */\r\n    protected get marginLeft():number {\n        return this._marginLeft;\n    }\n\r\n    /**\r\n     * [marginRight description]\r\n     * @param  {number} marginRight [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    protected set marginRight(marginRight:number) {\n        this._marginRight = Math.max(marginRight, 0);\n    }\n\r\n    /**\r\n     * [marginRight description]\r\n     * @return {number} [description]\r\n     */\r\n    protected get marginRight():number {\n        return this._marginRight;\n    }\n\r\n    /**\r\n     * [marginTop description]\r\n     * @param  {number} marginTop [description]\r\n     * @return {[type]}           [description]\r\n     */\r\n    protected set marginTop(marginTop:number) {\n        this._marginTop = Math.max(marginTop, this.sibling.marginTop);\n    }\n\r\n    /**\r\n     * [marginTop description]\r\n     * @return {number} [description]\r\n     */\r\n    protected get marginTop():number {\n        return this._marginTop;\n    }\n\r\n    /**\r\n     * [marginBottom description]\r\n     * @param  {number} marginBottom [description]\r\n     * @return {[type]}              [description]\r\n     */\r\n    protected set marginBottom(marginBottom:number) {\n        this._marginBottom = Math.max(marginBottom, this.sibling.marginBottom);\n    }\n\r\n    /**\r\n     * [marginBottom description]\r\n     * @return {number} [description]\r\n     */\r\n    protected get marginBottom():number {\n        return this._marginBottom;\n    }\n\r\n}\r\n\n","l":{"2":1,"20":1,"84":1,"86":128,"89":128,"90":128,"91":128,"92":128,"94":128,"95":128,"97":128,"98":128,"109":1,"112":128,"113":128,"114":128,"115":128,"116":128,"117":128,"118":128,"120":128,"129":1,"132":128,"133":128,"135":128,"143":128,"152":1,"154":128,"155":128,"157":128,"162":128,"166":128,"176":1,"178":128,"179":128,"182":128,"190":128,"200":1,"203":128,"205":128,"206":128,"208":128,"209":128,"210":128,"211":16384,"217":128,"220":128,"231":16384,"236":16384,"239":128,"248":1,"250":128,"251":128,"253":128,"260":128,"270":1,"272":128,"273":128,"274":128,"275":128,"277":128,"281":128,"287":128,"292":128,"302":1,"304":128,"305":128,"306":128,"308":128,"315":128,"326":1,"327":128,"335":1024,"343":1,"344":128,"352":384,"360":1,"361":128,"369":768,"377":1,"378":128,"386":896,"389":1}},
"src/punchcards.ts":{"path":"src/punchcards.ts","statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"2":{"start":{"line":5,"column":8},"end":{"line":5,"column":28}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"4":{"start":{"line":6,"column":8},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":41}},"6":{"start":{"line":7,"column":8},"end":{"line":7,"column":41}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"8":{"start":{"line":8,"column":8},"end":{"line":8,"column":37}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"10":{"start":{"line":9,"column":8},"end":{"line":9,"column":32}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"12":{"start":{"line":10,"column":8},"end":{"line":10,"column":47}},"13":{"start":{"line":11,"column":0},"end":{"line":11,"column":43}},"14":{"start":{"line":11,"column":8},"end":{"line":11,"column":43}}},"fnMap":{},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{},"f":{},"code":"\r\n/**\r\n * This is the Punchcards module\r\n */\r\nexport {Base} from './base';\r\nexport {ColorMap} from './colormap';\r\nexport {DateCircle} from './date-circle';\r\nexport {DateRect} from './date-rect';\r\nexport {Legend} from './legend';\r\nexport {WeekdayCircle} from './weekday-circle';\r\nexport {WeekdayRect} from './weekday-rect';\r\n\r\n","l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1}},
"src/weekday-circle.ts":{"path":"src/weekday-circle.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":21}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":12}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":124,"column":1}},"6":{"start":{"line":12,"column":35},"end":{"line":12,"column":46}},"7":{"start":{"line":14,"column":4},"end":{"line":27,"column":5}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":38}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":64}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":36}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":43}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":46}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":33}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":63}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":22}},"17":{"start":{"line":38,"column":14},"end":{"line":120,"column":5}},"18":{"start":{"line":41,"column":8},"end":{"line":41,"column":38}},"19":{"start":{"line":43,"column":8},"end":{"line":43,"column":105}},"20":{"start":{"line":44,"column":8},"end":{"line":44,"column":87}},"21":{"start":{"line":45,"column":8},"end":{"line":45,"column":40}},"22":{"start":{"line":46,"column":8},"end":{"line":46,"column":43}},"23":{"start":{"line":47,"column":8},"end":{"line":47,"column":65}},"24":{"start":{"line":48,"column":8},"end":{"line":48,"column":81}},"25":{"start":{"line":49,"column":8},"end":{"line":49,"column":82}},"26":{"start":{"line":51,"column":8},"end":{"line":51,"column":67}},"27":{"start":{"line":56,"column":8},"end":{"line":56,"column":57}},"28":{"start":{"line":57,"column":8},"end":{"line":60,"column":11}},"29":{"start":{"line":59,"column":12},"end":{"line":59,"column":38}},"30":{"start":{"line":61,"column":8},"end":{"line":61,"column":35}},"31":{"start":{"line":66,"column":8},"end":{"line":66,"column":46}},"32":{"start":{"line":67,"column":8},"end":{"line":67,"column":47}},"33":{"start":{"line":68,"column":8},"end":{"line":75,"column":9}},"34":{"start":{"line":68,"column":13},"end":{"line":68,"column":21}},"35":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"36":{"start":{"line":70,"column":16},"end":{"line":70,"column":36}},"37":{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},"38":{"start":{"line":73,"column":16},"end":{"line":73,"column":37}},"39":{"start":{"line":76,"column":8},"end":{"line":76,"column":39}},"40":{"start":{"line":77,"column":8},"end":{"line":77,"column":41}},"41":{"start":{"line":81,"column":8},"end":{"line":116,"column":23}},"42":{"start":{"line":91,"column":24},"end":{"line":91,"column":89}},"43":{"start":{"line":94,"column":24},"end":{"line":94,"column":103}},"44":{"start":{"line":97,"column":24},"end":{"line":97,"column":75}},"45":{"start":{"line":98,"column":24},"end":{"line":98,"column":90}},"46":{"start":{"line":99,"column":24},"end":{"line":103,"column":25}},"47":{"start":{"line":100,"column":28},"end":{"line":100,"column":50}},"48":{"start":{"line":102,"column":28},"end":{"line":102,"column":66}},"49":{"start":{"line":106,"column":24},"end":{"line":106,"column":66}},"50":{"start":{"line":109,"column":24},"end":{"line":109,"column":40}},"51":{"start":{"line":112,"column":24},"end":{"line":112,"column":44}},"52":{"start":{"line":115,"column":24},"end":{"line":115,"column":42}},"53":{"start":{"line":119,"column":8},"end":{"line":119,"column":20}},"54":{"start":{"line":124,"column":0},"end":{"line":124,"column":1}},"55":{"start":{"line":12,"column":13},"end":{"line":124,"column":1}}},"fnMap":{"1":{"name":"(anonymous_114)","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"WeekdayCircle","line":14,"loc":{"start":{"line":14,"column":4},"end":{"line":14,"column":85}}},"3":{"name":"(anonymous_116)","line":38,"loc":{"start":{"line":38,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_117)","line":57,"loc":{"start":{"line":57,"column":28},"end":{"line":57,"column":42}}},"5":{"name":"(anonymous_118)","line":90,"loc":{"start":{"line":90,"column":32},"end":{"line":90,"column":46}}},"6":{"name":"(anonymous_119)","line":93,"loc":{"start":{"line":93,"column":32},"end":{"line":93,"column":46}}},"7":{"name":"(anonymous_120)","line":96,"loc":{"start":{"line":96,"column":31},"end":{"line":96,"column":45}}},"8":{"name":"(anonymous_121)","line":105,"loc":{"start":{"line":105,"column":34},"end":{"line":105,"column":48}}},"9":{"name":"(anonymous_122)","line":108,"loc":{"start":{"line":108,"column":33},"end":{"line":108,"column":47}}},"10":{"name":"(anonymous_123)","line":111,"loc":{"start":{"line":111,"column":37},"end":{"line":111,"column":51}}},"11":{"name":"(anonymous_124)","line":114,"loc":{"start":{"line":114,"column":36},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":21},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":21},"end":{"line":null,"column":-1}}]},"2":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":12},"end":{"line":null,"column":-1}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":11}},{"start":{"line":69,"column":12},"end":{"line":69,"column":11}}]},"4":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":11}},{"start":{"line":72,"column":12},"end":{"line":72,"column":11}}]},"5":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":24},"end":{"line":99,"column":23}},{"start":{"line":99,"column":24},"end":{"line":99,"column":23}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":8,"9":8,"10":8,"11":8,"12":8,"13":8,"14":8,"15":8,"16":8,"17":1,"18":43,"19":43,"20":43,"21":43,"22":43,"23":43,"24":43,"25":43,"26":43,"27":43,"28":43,"29":2395,"30":43,"31":43,"32":43,"33":43,"34":2395,"35":2395,"36":168,"37":2395,"38":128,"39":43,"40":43,"41":43,"42":2395,"43":2395,"44":2395,"45":2395,"46":2395,"47":20,"48":2375,"49":2395,"50":0,"51":0,"52":0,"53":43,"54":1,"55":1},"b":{"1":[1,0],"2":[1,0],"3":[168,2227],"4":[128,2267],"5":[20,2375]},"f":{"1":1,"2":8,"3":43,"4":2395,"5":2395,"6":2395,"7":2395,"8":2395,"9":0,"10":0,"11":0},"code":"\r\nimport 'crossfilter';\r\nimport 'd3';\r\n\r\nimport {ColorMap} from './colormap';\r\nimport {WeekdayRect} from './weekday-rect';\r\n\r\n\r\n/**\r\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\r\n */\r\nexport class WeekdayCircle extends WeekdayRect {\r\n\n    constructor (cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\r\n\n        super(cf, domElemId, datekey);\r\n        // ...but reset these properties\r\n        this.domElem.classList.remove('punchcard-weekday-rect');\r\n        this.canDraw = false;\r\n\r\n        this.xlabel = 'Day of week';\r\n        this.title = 'WeekdayCircle title';\r\n        this.colormap = new ColorMap('blues');\r\n        super.defineDimensions();\r\n        this.domElem.classList.add('punchcard-weekday-circle');\r\n        this.update();\r\n    }\n\n\n\n    /**\r\n     * This method adds an SVG g element containing many SVG circle elements,\r\n     * i.e. the 'symbols', to the DOM. Each symbol represents the count of how\r\n     * many rows from the data fall on a given day/time-of-day combination.\r\n     * @return {WeekdayCircle} Returns a reference to the instance of\r\n     * WeekdayCircle\r\n     */\r\n    protected drawSymbols():WeekdayCircle {\r\n\n        // capture the this object\n        let that:WeekdayCircle = this;\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop + h;\n        let symbolMargin = {left:2, right: 2, top: 2, bottom: 2}; // pixels\n        let symbolWidth :number = w / 7 - symbolMargin.left - symbolMargin.right;\n        let symbolHeight:number = h / 24 - symbolMargin.top - symbolMargin.bottom;\n\n        let r:number = Math.min(symbolWidth, symbolHeight) / 2 - 2;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        let group = this.dim.weekdayAndHourOfDay.group();\n        group.all().forEach(function(d:any) {\r\n            //parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        let data:any = group.all();\n\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (let elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n\n        // draw the circles\r\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('circle.symbol')\n                .data(data)\n                .enter()\n                .append('circle')\n                    .attr('class', 'symbol')\n                    .attr('cx', function(d:any){\r\n                        return that.dayOfWeekScale(d.key['weekday']) + symbolMargin.left;\n                    })\n                    .attr('cy', function(d:any){\r\n                        return that.todScale(d.key['hourOfDay']) + symbolHeight / 2 + symbolMargin.top;\n                    })\n                    .attr('r', function(d:any){\r\n                        let numer:number = d.value - that.colormap.cLimLow;\r\n                        let denom:number = that.colormap.cLimHigh - that.colormap.cLimLow;\r\n                        if (denom === 0) {\r\n                            return Math.max(r, 1);\r\n                        } else {\r\n                            return Math.max(r * numer / denom, 1);\r\n                        }\r\n                    })\r\n                    .attr('fill', function(d:any){\r\n                        return that.colormap.getColorRGB(d.value);\n                    })\r\n                    .on('click', function(d:any){\r\n                        that.onClick(d);\r\n                    })\r\n                    .on('mouseover', function(d:any){\r\n                        that.onMouseOver(d);\r\n                    })\r\n                    .on('mouseout', function(){\r\n                        that.onMouseOut();\r\n                    });\r\n\r\n\n        return this;\n    }\n\n\n\n}\n\n\n","l":{"2":1,"3":1,"5":1,"6":1,"12":1,"14":1,"16":8,"18":8,"19":8,"21":8,"22":8,"23":8,"24":8,"25":8,"26":8,"38":1,"41":43,"43":43,"44":43,"45":43,"46":43,"47":43,"48":43,"49":43,"51":43,"56":43,"57":43,"59":2395,"61":43,"66":43,"67":43,"68":2395,"69":2395,"70":168,"72":2395,"73":128,"76":43,"77":43,"81":43,"91":2395,"94":2395,"97":2395,"98":2395,"99":2395,"100":20,"102":2375,"106":2395,"109":0,"112":0,"115":0,"119":43,"124":1}},
"src/weekday-rect.ts":{"path":"src/weekday-rect.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":21}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":12}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":16}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"6":{"start":{"line":12,"column":0},"end":{"line":265,"column":1}},"7":{"start":{"line":12,"column":33},"end":{"line":12,"column":37}},"8":{"start":{"line":28,"column":4},"end":{"line":40,"column":5}},"9":{"start":{"line":30,"column":8},"end":{"line":30,"column":38}},"10":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"11":{"start":{"line":33,"column":8},"end":{"line":33,"column":36}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":41}},"13":{"start":{"line":35,"column":8},"end":{"line":35,"column":47}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":32}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":61}},"16":{"start":{"line":38,"column":8},"end":{"line":38,"column":22}},"17":{"start":{"line":49,"column":14},"end":{"line":73,"column":5}},"18":{"start":{"line":52,"column":8},"end":{"line":52,"column":36}},"19":{"start":{"line":57,"column":8},"end":{"line":69,"column":11}},"20":{"start":{"line":59,"column":12},"end":{"line":59,"column":32}},"21":{"start":{"line":60,"column":12},"end":{"line":68,"column":13}},"22":{"start":{"line":61,"column":16},"end":{"line":61,"column":44}},"23":{"start":{"line":62,"column":16},"end":{"line":62,"column":33}},"24":{"start":{"line":63,"column":16},"end":{"line":63,"column":49}},"25":{"start":{"line":64,"column":16},"end":{"line":64,"column":44}},"26":{"start":{"line":65,"column":16},"end":{"line":65,"column":43}},"27":{"start":{"line":67,"column":16},"end":{"line":67,"column":53}},"28":{"start":{"line":70,"column":8},"end":{"line":70,"column":28}},"29":{"start":{"line":72,"column":8},"end":{"line":72,"column":20}},"30":{"start":{"line":93,"column":14},"end":{"line":117,"column":5}},"31":{"start":{"line":95,"column":8},"end":{"line":116,"column":9}},"32":{"start":{"line":97,"column":12},"end":{"line":97,"column":24}},"33":{"start":{"line":100,"column":12},"end":{"line":113,"column":13}},"34":{"start":{"line":102,"column":16},"end":{"line":102,"column":32}},"35":{"start":{"line":103,"column":16},"end":{"line":103,"column":38}},"36":{"start":{"line":104,"column":16},"end":{"line":104,"column":42}},"37":{"start":{"line":105,"column":16},"end":{"line":105,"column":48}},"38":{"start":{"line":106,"column":16},"end":{"line":106,"column":41}},"39":{"start":{"line":107,"column":16},"end":{"line":107,"column":46}},"40":{"start":{"line":108,"column":16},"end":{"line":108,"column":34}},"41":{"start":{"line":109,"column":16},"end":{"line":109,"column":35}},"42":{"start":{"line":110,"column":16},"end":{"line":110,"column":32}},"43":{"start":{"line":111,"column":16},"end":{"line":111,"column":35}},"44":{"start":{"line":112,"column":16},"end":{"line":112,"column":35}},"45":{"start":{"line":115,"column":12},"end":{"line":115,"column":24}},"46":{"start":{"line":127,"column":12},"end":{"line":157,"column":5}},"47":{"start":{"line":129,"column":8},"end":{"line":129,"column":105}},"48":{"start":{"line":130,"column":8},"end":{"line":130,"column":40}},"49":{"start":{"line":131,"column":8},"end":{"line":131,"column":70}},"50":{"start":{"line":133,"column":8},"end":{"line":133,"column":37}},"51":{"start":{"line":134,"column":8},"end":{"line":134,"column":31}},"52":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"53":{"start":{"line":135,"column":13},"end":{"line":135,"column":18}},"54":{"start":{"line":136,"column":12},"end":{"line":136,"column":38}},"55":{"start":{"line":139,"column":8},"end":{"line":141,"column":79}},"56":{"start":{"line":143,"column":8},"end":{"line":148,"column":30}},"57":{"start":{"line":150,"column":8},"end":{"line":153,"column":25}},"58":{"start":{"line":155,"column":8},"end":{"line":155,"column":20}},"59":{"start":{"line":168,"column":14},"end":{"line":240,"column":5}},"60":{"start":{"line":171,"column":8},"end":{"line":171,"column":36}},"61":{"start":{"line":173,"column":8},"end":{"line":173,"column":105}},"62":{"start":{"line":174,"column":8},"end":{"line":174,"column":87}},"63":{"start":{"line":175,"column":8},"end":{"line":175,"column":40}},"64":{"start":{"line":176,"column":8},"end":{"line":176,"column":43}},"65":{"start":{"line":177,"column":8},"end":{"line":177,"column":65}},"66":{"start":{"line":178,"column":8},"end":{"line":178,"column":81}},"67":{"start":{"line":179,"column":8},"end":{"line":179,"column":82}},"68":{"start":{"line":184,"column":8},"end":{"line":184,"column":57}},"69":{"start":{"line":185,"column":8},"end":{"line":188,"column":11}},"70":{"start":{"line":187,"column":12},"end":{"line":187,"column":38}},"71":{"start":{"line":189,"column":8},"end":{"line":189,"column":35}},"72":{"start":{"line":194,"column":8},"end":{"line":194,"column":46}},"73":{"start":{"line":195,"column":8},"end":{"line":195,"column":47}},"74":{"start":{"line":196,"column":8},"end":{"line":203,"column":9}},"75":{"start":{"line":196,"column":13},"end":{"line":196,"column":21}},"76":{"start":{"line":197,"column":12},"end":{"line":199,"column":13}},"77":{"start":{"line":198,"column":16},"end":{"line":198,"column":36}},"78":{"start":{"line":200,"column":12},"end":{"line":202,"column":13}},"79":{"start":{"line":201,"column":16},"end":{"line":201,"column":37}},"80":{"start":{"line":204,"column":8},"end":{"line":204,"column":39}},"81":{"start":{"line":205,"column":8},"end":{"line":205,"column":41}},"82":{"start":{"line":209,"column":8},"end":{"line":237,"column":23}},"83":{"start":{"line":219,"column":24},"end":{"line":219,"column":87}},"84":{"start":{"line":222,"column":24},"end":{"line":222,"column":65}},"85":{"start":{"line":227,"column":24},"end":{"line":227,"column":66}},"86":{"start":{"line":230,"column":24},"end":{"line":230,"column":40}},"87":{"start":{"line":233,"column":24},"end":{"line":233,"column":44}},"88":{"start":{"line":236,"column":24},"end":{"line":236,"column":42}},"89":{"start":{"line":239,"column":8},"end":{"line":239,"column":20}},"90":{"start":{"line":247,"column":14},"end":{"line":254,"column":5}},"91":{"start":{"line":249,"column":8},"end":{"line":251,"column":33}},"92":{"start":{"line":252,"column":8},"end":{"line":252,"column":61}},"93":{"start":{"line":253,"column":8},"end":{"line":253,"column":20}},"94":{"start":{"line":258,"column":14},"end":{"line":261,"column":5}},"95":{"start":{"line":259,"column":8},"end":{"line":259,"column":60}},"96":{"start":{"line":260,"column":8},"end":{"line":260,"column":20}},"97":{"start":{"line":265,"column":0},"end":{"line":265,"column":1}},"98":{"start":{"line":12,"column":13},"end":{"line":265,"column":1}}},"fnMap":{"1":{"name":"(anonymous_129)","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"WeekdayRect","line":28,"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":85}}},"3":{"name":"(anonymous_131)","line":49,"loc":{"start":{"line":49,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_132)","line":57,"loc":{"start":{"line":57,"column":57},"end":{"line":57,"column":72}}},"5":{"name":"(anonymous_133)","line":93,"loc":{"start":{"line":93,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_134)","line":127,"loc":{"start":{"line":127,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_135)","line":168,"loc":{"start":{"line":168,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_136)","line":185,"loc":{"start":{"line":185,"column":28},"end":{"line":185,"column":42}}},"9":{"name":"(anonymous_137)","line":218,"loc":{"start":{"line":218,"column":31},"end":{"line":218,"column":45}}},"10":{"name":"(anonymous_138)","line":221,"loc":{"start":{"line":221,"column":31},"end":{"line":221,"column":45}}},"11":{"name":"(anonymous_139)","line":226,"loc":{"start":{"line":226,"column":34},"end":{"line":226,"column":48}}},"12":{"name":"(anonymous_140)","line":229,"loc":{"start":{"line":229,"column":33},"end":{"line":229,"column":47}}},"13":{"name":"(anonymous_141)","line":232,"loc":{"start":{"line":232,"column":37},"end":{"line":232,"column":51}}},"14":{"name":"(anonymous_142)","line":235,"loc":{"start":{"line":235,"column":36},"end":{"line":null,"column":-1}}},"15":{"name":"(anonymous_143)","line":247,"loc":{"start":{"line":247,"column":4},"end":{"line":247,"column":32}}},"16":{"name":"(anonymous_144)","line":258,"loc":{"start":{"line":258,"column":4},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":21},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":21},"end":{"line":null,"column":-1}}]},"2":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":12},"end":{"line":null,"column":-1}}]},"3":{"line":4,"type":"cond-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":null,"column":-1}},{"start":{"line":4,"column":16},"end":{"line":null,"column":-1}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":11}},{"start":{"line":60,"column":12},"end":{"line":60,"column":11}}]},"5":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":7}},{"start":{"line":95,"column":8},"end":{"line":95,"column":7}}]},"6":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":11}},{"start":{"line":100,"column":12},"end":{"line":100,"column":11}}]},"7":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":12},"end":{"line":197,"column":11}},{"start":{"line":197,"column":12},"end":{"line":197,"column":11}}]},"8":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":12},"end":{"line":200,"column":11}},{"start":{"line":200,"column":12},"end":{"line":200,"column":11}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":15,"10":15,"11":15,"12":15,"13":15,"14":15,"15":15,"16":15,"17":1,"18":23,"19":23,"20":50019,"21":50019,"22":50019,"23":50019,"24":50019,"25":50019,"26":50019,"27":0,"28":23,"29":23,"30":1,"31":54,"32":0,"33":54,"34":54,"35":54,"36":54,"37":54,"38":54,"39":54,"40":54,"41":54,"42":54,"43":54,"44":54,"45":54,"46":1,"47":67,"48":67,"49":67,"50":67,"51":67,"52":67,"53":603,"54":603,"55":67,"56":67,"57":67,"58":67,"59":1,"60":23,"61":23,"62":23,"63":23,"64":23,"65":23,"66":23,"67":23,"68":23,"69":23,"70":1958,"71":23,"72":23,"73":23,"74":23,"75":1958,"76":1958,"77":124,"78":1958,"79":93,"80":23,"81":23,"82":23,"83":1958,"84":1958,"85":1958,"86":0,"87":0,"88":0,"89":23,"90":1,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":1,"98":1},"b":{"1":[1,0],"2":[1,0],"3":[1,0],"4":[50019,0],"5":[0,54],"6":[54,0],"7":[124,1834],"8":[93,1865]},"f":{"1":1,"2":15,"3":23,"4":50019,"5":54,"6":67,"7":23,"8":1958,"9":1958,"10":1958,"11":1958,"12":0,"13":0,"14":0,"15":0,"16":0},"code":"\r\nimport 'crossfilter';\r\nimport 'd3';\r\nimport 'moment';\r\n\r\nimport {Base} from './base';\r\nimport {ColorMap} from './colormap';\r\n\r\n/**\r\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\r\n */\r\nexport class WeekdayRect extends Base {\r\n\n    protected dayOfWeekScale: d3.scale.Ordinal<any, any>;\r\n    protected xFrom         : number;\r\n    protected xTo           : number;\r\n\n    /**\r\n     * Constructor method for making a punchcard visualization with the day of\r\n     * week on the horizontal axis, and hour of day on the vertical axis, using\r\n     * rectangular symbols to represent how many rows from the input data fall\r\n     * within the area covered by each rectangle.\r\n     * @param  {CrossFilter.CrossFilter<any>} cf Crossfilter object\r\n     * containing the data.\r\n     * @param  {string} domElemId Name of the DOM element in which to draw.\r\n     * @return {[type]} A reference to the instance of WeekdayRect.\r\n     */\r\n    constructor (cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\r\n\n        super(cf, domElemId, datekey);\r\n\n        this.marginBottom = 50;\n        this.xlabel = 'Day of week';\n        this.title = 'WeekdayRect title';\r\n        this.colormap = new ColorMap('summer');\r\n        this.defineDimensions();\r\n        this.domElem.classList.add('punchcard-weekday-rect');\r\n        this.update();\r\n\r\n    }\n\n\n\n\n    /**\r\n     * define the crossfilter dimensions as used by this class\r\n     * @return {WeekdayRect} A reference to the instance of WeekdayRect\r\n     */\r\n    protected defineDimensions():WeekdayRect {\r\n\r\n        // store a reference to the instance\r\n        let that:WeekdayRect = this;\r\n\r\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n\n        this.dim.weekdayAndHourOfDay = this.cf.dimension(function (d:any) {\r\n            //stringify() and later, parse() to get keyed objects\n            let m:moment.Moment;\r\n            if (d.hasOwnProperty(that.datekey)) {\r\n                m = moment(d[that.datekey]);\r\n                let obj:any = {};\r\n                obj['weekday'] = m.format('ddd');\r\n                obj['hourOfDay'] = m.hour();\r\n                return JSON.stringify(obj);\r\n            } else {\r\n                throw new Error('datekey undefined');\r\n            }\r\n        });\r\n        this.canDraw = true;\r\n\n        return this;\n    }\n\n\n\n\n    /**\r\n     * This method defines which other methods to call in order to create\r\n     * a punchcard graph with the day of week on the horizontal axis and the\r\n     * time of day on the vertical axis. Mostly calls methods of the parent\r\n     * class, Base, but for example the symbols for this class are SVG rects,\r\n     * so it calls its own method .drawSymbols() for that.\r\n     *\r\n     * Successful drawing depends on whether the container is currently visible,\r\n     * and whether there is enough information in the instance to draw anything\r\n     * at all.\r\n     *\r\n     * This method overrides stub method in parent class.\r\n     *\r\n     * @return {WeekdayRect} A reference to an instance of WeekdayRect.\r\n     */\r\n    protected draw():WeekdayRect {\r\n\n        if (this.domElem.classList.contains('hidden')) {\n            // div is hidden\n            return this;\n        } else {\r\n            // div is visible\r\n            if (this.canDraw) {\r\n                // dimensions have been defined\r\n                super.drawSvg();\r\n                super.drawChartBody();\r\n                this.drawHorizontalAxis();\r\n                super.drawHorizontalAxisLabel();\r\n                super.drawVerticalAxis();\r\n                super.drawVerticalAxisLabel();\r\n                super.drawTitle();\r\n                this.drawSymbols();\r\n                super.drawBox();\r\n                super.drawLegend();\r\n                super.drawFooter();\r\n            }\r\n\n            return this;\n        }\n    }\n\n\n\n\n    /**\r\n     * Adds an SVG g element containing a d3.scale.ordinal for plotting\r\n     * the day of the week on the horizontal axis of the punchcard graph.\r\n     * @return {WeekdayRect} A reference to the instance of WeekdayRect.\r\n     */\r\n    private drawHorizontalAxis():WeekdayRect {\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let dx:number = this.marginLeft;\n        let dy:number = this.domElem.clientHeight - this.marginBottom;\n\n        let range:Array<number> = [];\n        let ndays:number = 7.0;\n        for (let r of [0, 0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.0]) {\n            range.push(w * r / ndays);\n        }\n\n        this.dayOfWeekScale = d3.scale.ordinal()\n            .range(range)\n            .domain(['', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun', '']);\n\n        let xAxis = d3.svg.axis()\n            .orient('bottom')\n            .scale(this.dayOfWeekScale)\n            .tickValues(['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'])\n            .innerTickSize(5)\n            .outerTickSize(0);\n\n        this.svg.append('g')\n            .attr('class', 'horizontal-axis')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(xAxis);\n\n        return this;\n\n    }\n\n\n\n    /**\r\n     * This method adds an SVG g element with many SVG rects in it. Each rect\r\n     * represents the count of how many data rows fall within the area covered\r\n     * by the rect, where the horizontal boundaries dictate the day-of-week and\r\n     * the vertical boundaries dictate the time of day range.\r\n     * @return {WeekdayRect} A reference to the instance of WeekdayRect.\r\n     */\r\n    protected drawSymbols():WeekdayRect {\r\n\n        // capture the this object\n        let that:WeekdayRect = this;\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop + h;\n        let symbolMargin = {left:0, right: 0, top: 0, bottom: 0}; // pixels\n        let symbolWidth :number = w / 7 - symbolMargin.left - symbolMargin.right;\n        let symbolHeight:number = h / 24 - symbolMargin.top - symbolMargin.bottom;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        let group = this.dim.weekdayAndHourOfDay.group();\n        group.all().forEach(function(d:any) {\r\n            //parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        let data:any = group.all();\n\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (let elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n\n        // draw the rects\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('rect.symbol')\n                .data(data)\n                .enter()\n                .append('rect')\n                    .attr('class', 'symbol')\n                    .attr('x', function(d:any){\r\n                        return that.dayOfWeekScale(d.key['weekday']) - symbolWidth / 2;\n                    })\n                    .attr('y', function(d:any){\r\n                        return that.todScale(d.key['hourOfDay']);\n                    })\n                    .attr('width', symbolWidth)\n                    .attr('height', symbolHeight)\n                    .attr('fill', function(d:any){\r\n                        return that.colormap.getColorRGB(d.value);\n                    })\r\n                    .on('click', function(d:any){\r\n                        that.onClick(d);\r\n                    })\r\n                    .on('mouseover', function(d:any){\r\n                        that.onMouseOver(d);\r\n                    })\r\n                    .on('mouseout', function(){\r\n                        that.onMouseOut();\r\n                    });\r\n\r\n        return this;\n    }\r\n\r\n\r\n\r\n    /*\r\n     * overrides method from Base\r\n     */\r\n    protected onMouseOver(d: any): WeekdayRect {\r\n\r\n        let str: string = 'x:' + d.key['weekday'] +\r\n            ', y:' + d.key['hourOfDay'] +\r\n            ', count:' + d.value;\r\n        this.svg.select('g.footer').select('text').text(str);\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n    protected onMouseOut(): WeekdayRect {\r\n        this.svg.select('g.footer').select('text').text('');\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n}\n\n\n","l":{"2":1,"3":1,"4":1,"6":1,"7":1,"12":1,"28":1,"30":15,"32":15,"33":15,"34":15,"35":15,"36":15,"37":15,"38":15,"49":1,"52":23,"57":23,"59":50019,"60":50019,"61":50019,"62":50019,"63":50019,"64":50019,"65":50019,"67":0,"70":23,"72":23,"93":1,"95":54,"97":0,"100":54,"102":54,"103":54,"104":54,"105":54,"106":54,"107":54,"108":54,"109":54,"110":54,"111":54,"112":54,"115":54,"127":1,"129":67,"130":67,"131":67,"133":67,"134":67,"135":603,"136":603,"139":67,"143":67,"150":67,"155":67,"168":1,"171":23,"173":23,"174":23,"175":23,"176":23,"177":23,"178":23,"179":23,"184":23,"185":23,"187":1958,"189":23,"194":23,"195":23,"196":1958,"197":1958,"198":124,"200":1958,"201":93,"204":23,"205":23,"209":23,"219":1958,"222":1958,"227":1958,"230":0,"233":0,"236":0,"239":23,"247":1,"249":0,"252":0,"253":0,"258":1,"259":0,"260":0,"265":1}}}

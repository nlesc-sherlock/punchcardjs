{
"node_modules/browser-pack/_prelude.js":{"path":"node_modules/browser-pack/_prelude.js","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":1,"type":"if","locations":[{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}]}},"s":{"1":108},"b":{"1":[29,21]},"f":{"1":40},"code":"(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","l":{"1":108}},
"src/Base.ts":{"path":"src/Base.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"4":{"start":{"line":13,"column":0},"end":{"line":557,"column":1}},"5":{"start":{"line":123,"column":4},"end":{"line":160,"column":5}},"6":{"start":{"line":126,"column":8},"end":{"line":126,"column":21}},"7":{"start":{"line":129,"column":8},"end":{"line":129,"column":35}},"8":{"start":{"line":132,"column":8},"end":{"line":132,"column":63}},"9":{"start":{"line":136,"column":8},"end":{"line":136,"column":22}},"10":{"start":{"line":139,"column":8},"end":{"line":139,"column":29}},"11":{"start":{"line":142,"column":8},"end":{"line":142,"column":29}},"12":{"start":{"line":143,"column":8},"end":{"line":143,"column":30}},"13":{"start":{"line":144,"column":8},"end":{"line":144,"column":28}},"14":{"start":{"line":145,"column":8},"end":{"line":145,"column":32}},"15":{"start":{"line":146,"column":8},"end":{"line":146,"column":30}},"16":{"start":{"line":148,"column":8},"end":{"line":148,"column":36}},"17":{"start":{"line":149,"column":8},"end":{"line":149,"column":24}},"18":{"start":{"line":151,"column":8},"end":{"line":151,"column":44}},"19":{"start":{"line":152,"column":8},"end":{"line":152,"column":39}},"20":{"start":{"line":154,"column":8},"end":{"line":154,"column":55}},"21":{"start":{"line":156,"column":8},"end":{"line":158,"column":11}},"22":{"start":{"line":157,"column":12},"end":{"line":157,"column":28}},"23":{"start":{"line":167,"column":14},"end":{"line":170,"column":5}},"24":{"start":{"line":169,"column":8},"end":{"line":169,"column":20}},"25":{"start":{"line":176,"column":14},"end":{"line":192,"column":5}},"26":{"start":{"line":178,"column":8},"end":{"line":178,"column":107}},"27":{"start":{"line":179,"column":8},"end":{"line":179,"column":89}},"28":{"start":{"line":180,"column":8},"end":{"line":180,"column":43}},"29":{"start":{"line":181,"column":8},"end":{"line":181,"column":42}},"30":{"start":{"line":183,"column":8},"end":{"line":189,"column":48}},"31":{"start":{"line":191,"column":8},"end":{"line":191,"column":20}},"32":{"start":{"line":201,"column":14},"end":{"line":217,"column":5}},"33":{"start":{"line":203,"column":8},"end":{"line":203,"column":107}},"34":{"start":{"line":204,"column":8},"end":{"line":204,"column":89}},"35":{"start":{"line":205,"column":8},"end":{"line":205,"column":43}},"36":{"start":{"line":206,"column":8},"end":{"line":206,"column":42}},"37":{"start":{"line":208,"column":8},"end":{"line":214,"column":44}},"38":{"start":{"line":216,"column":8},"end":{"line":216,"column":20}},"39":{"start":{"line":219,"column":14},"end":{"line":232,"column":5}},"40":{"start":{"line":221,"column":8},"end":{"line":221,"column":90}},"41":{"start":{"line":222,"column":8},"end":{"line":222,"column":73}},"42":{"start":{"line":223,"column":8},"end":{"line":230,"column":31}},"43":{"start":{"line":231,"column":8},"end":{"line":231,"column":20}},"44":{"start":{"line":239,"column":14},"end":{"line":254,"column":5}},"45":{"start":{"line":241,"column":8},"end":{"line":241,"column":107}},"46":{"start":{"line":242,"column":8},"end":{"line":242,"column":89}},"47":{"start":{"line":243,"column":8},"end":{"line":243,"column":53}},"48":{"start":{"line":244,"column":8},"end":{"line":244,"column":72}},"49":{"start":{"line":246,"column":8},"end":{"line":251,"column":52}},"50":{"start":{"line":253,"column":8},"end":{"line":253,"column":20}},"51":{"start":{"line":260,"column":14},"end":{"line":267,"column":5}},"52":{"start":{"line":263,"column":8},"end":{"line":263,"column":48}},"53":{"start":{"line":264,"column":8},"end":{"line":264,"column":22}},"54":{"start":{"line":266,"column":8},"end":{"line":266,"column":20}},"55":{"start":{"line":274,"column":14},"end":{"line":281,"column":5}},"56":{"start":{"line":276,"column":8},"end":{"line":278,"column":55}},"57":{"start":{"line":280,"column":8},"end":{"line":280,"column":20}},"58":{"start":{"line":288,"column":14},"end":{"line":302,"column":5}},"59":{"start":{"line":290,"column":8},"end":{"line":290,"column":107}},"60":{"start":{"line":291,"column":8},"end":{"line":291,"column":53}},"61":{"start":{"line":292,"column":8},"end":{"line":292,"column":48}},"62":{"start":{"line":294,"column":8},"end":{"line":299,"column":36}},"63":{"start":{"line":301,"column":8},"end":{"line":301,"column":20}},"64":{"start":{"line":309,"column":14},"end":{"line":333,"column":5}},"65":{"start":{"line":311,"column":8},"end":{"line":311,"column":43}},"66":{"start":{"line":312,"column":8},"end":{"line":312,"column":73}},"67":{"start":{"line":313,"column":8},"end":{"line":313,"column":89}},"68":{"start":{"line":315,"column":8},"end":{"line":317,"column":33}},"69":{"start":{"line":319,"column":8},"end":{"line":324,"column":30}},"70":{"start":{"line":326,"column":8},"end":{"line":329,"column":27}},"71":{"start":{"line":331,"column":8},"end":{"line":331,"column":20}},"72":{"start":{"line":340,"column":14},"end":{"line":355,"column":5}},"73":{"start":{"line":342,"column":8},"end":{"line":342,"column":89}},"74":{"start":{"line":343,"column":8},"end":{"line":343,"column":49}},"75":{"start":{"line":344,"column":8},"end":{"line":344,"column":52}},"76":{"start":{"line":346,"column":8},"end":{"line":351,"column":50}},"77":{"start":{"line":353,"column":8},"end":{"line":353,"column":20}},"78":{"start":{"line":357,"column":14},"end":{"line":369,"column":5}},"79":{"start":{"line":359,"column":8},"end":{"line":368,"column":9}},"80":{"start":{"line":361,"column":12},"end":{"line":361,"column":37}},"81":{"start":{"line":364,"column":12},"end":{"line":366,"column":13}},"82":{"start":{"line":365,"column":16},"end":{"line":365,"column":48}},"83":{"start":{"line":367,"column":12},"end":{"line":367,"column":24}},"84":{"start":{"line":375,"column":14},"end":{"line":377,"column":5}},"85":{"start":{"line":376,"column":8},"end":{"line":376,"column":22}},"86":{"start":{"line":379,"column":14},"end":{"line":381,"column":5}},"87":{"start":{"line":380,"column":8},"end":{"line":380,"column":23}},"88":{"start":{"line":383,"column":14},"end":{"line":385,"column":5}},"89":{"start":{"line":384,"column":8},"end":{"line":384,"column":23}},"90":{"start":{"line":393,"column":12},"end":{"line":409,"column":5}},"91":{"start":{"line":395,"column":8},"end":{"line":395,"column":41}},"92":{"start":{"line":396,"column":8},"end":{"line":396,"column":47}},"93":{"start":{"line":398,"column":8},"end":{"line":400,"column":9}},"94":{"start":{"line":399,"column":12},"end":{"line":399,"column":20}},"95":{"start":{"line":402,"column":8},"end":{"line":404,"column":9}},"96":{"start":{"line":403,"column":12},"end":{"line":403,"column":23}},"97":{"start":{"line":406,"column":8},"end":{"line":406,"column":78}},"98":{"start":{"line":408,"column":8},"end":{"line":408,"column":20}},"99":{"start":{"line":417,"column":12},"end":{"line":433,"column":5}},"100":{"start":{"line":419,"column":8},"end":{"line":419,"column":43}},"101":{"start":{"line":420,"column":8},"end":{"line":420,"column":45}},"102":{"start":{"line":422,"column":8},"end":{"line":424,"column":9}},"103":{"start":{"line":423,"column":12},"end":{"line":423,"column":21}},"104":{"start":{"line":426,"column":8},"end":{"line":428,"column":9}},"105":{"start":{"line":427,"column":12},"end":{"line":427,"column":22}},"106":{"start":{"line":430,"column":8},"end":{"line":430,"column":77}},"107":{"start":{"line":432,"column":8},"end":{"line":432,"column":20}},"108":{"start":{"line":440,"column":4},"end":{"line":444,"column":5}},"109":{"start":{"line":451,"column":8},"end":{"line":451,"column":32}},"110":{"start":{"line":441,"column":8},"end":{"line":441,"column":38}},"111":{"start":{"line":442,"column":8},"end":{"line":442,"column":30}},"112":{"start":{"line":443,"column":8},"end":{"line":443,"column":22}},"113":{"start":{"line":459,"column":4},"end":{"line":463,"column":5}},"114":{"start":{"line":470,"column":8},"end":{"line":470,"column":33}},"115":{"start":{"line":460,"column":8},"end":{"line":460,"column":40}},"116":{"start":{"line":461,"column":8},"end":{"line":461,"column":30}},"117":{"start":{"line":462,"column":8},"end":{"line":462,"column":22}},"118":{"start":{"line":478,"column":4},"end":{"line":482,"column":5}},"119":{"start":{"line":489,"column":8},"end":{"line":489,"column":31}},"120":{"start":{"line":479,"column":8},"end":{"line":479,"column":36}},"121":{"start":{"line":480,"column":8},"end":{"line":480,"column":31}},"122":{"start":{"line":481,"column":8},"end":{"line":481,"column":22}},"123":{"start":{"line":497,"column":4},"end":{"line":501,"column":5}},"124":{"start":{"line":508,"column":8},"end":{"line":508,"column":34}},"125":{"start":{"line":498,"column":8},"end":{"line":498,"column":42}},"126":{"start":{"line":499,"column":8},"end":{"line":499,"column":31}},"127":{"start":{"line":500,"column":8},"end":{"line":500,"column":22}},"128":{"start":{"line":516,"column":4},"end":{"line":520,"column":5}},"129":{"start":{"line":527,"column":8},"end":{"line":527,"column":33}},"130":{"start":{"line":517,"column":8},"end":{"line":517,"column":40}},"131":{"start":{"line":518,"column":8},"end":{"line":518,"column":64}},"132":{"start":{"line":519,"column":8},"end":{"line":519,"column":22}},"133":{"start":{"line":530,"column":4},"end":{"line":533,"column":5}},"134":{"start":{"line":536,"column":8},"end":{"line":536,"column":27}},"135":{"start":{"line":531,"column":8},"end":{"line":531,"column":28}},"136":{"start":{"line":532,"column":8},"end":{"line":532,"column":22}},"137":{"start":{"line":539,"column":4},"end":{"line":542,"column":5}},"138":{"start":{"line":545,"column":8},"end":{"line":545,"column":28}},"139":{"start":{"line":540,"column":8},"end":{"line":540,"column":30}},"140":{"start":{"line":541,"column":8},"end":{"line":541,"column":22}},"141":{"start":{"line":548,"column":4},"end":{"line":551,"column":5}},"142":{"start":{"line":554,"column":8},"end":{"line":554,"column":28}},"143":{"start":{"line":549,"column":8},"end":{"line":549,"column":30}},"144":{"start":{"line":550,"column":8},"end":{"line":550,"column":22}},"145":{"start":{"line":557,"column":0},"end":{"line":557,"column":1}},"146":{"start":{"line":13,"column":13},"end":{"line":13,"column":17}}},"fnMap":{"1":{"name":"(anonymous_8)","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Base","line":123,"loc":{"start":{"line":123,"column":4},"end":{"line":123,"column":84}}},"3":{"name":"(anonymous_10)","line":156,"loc":{"start":{"line":156,"column":42},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_11)","line":167,"loc":{"start":{"line":167,"column":4},"end":{"line":null,"column":-1}}},"5":{"name":"(anonymous_12)","line":176,"loc":{"start":{"line":176,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_13)","line":201,"loc":{"start":{"line":201,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_14)","line":219,"loc":{"start":{"line":219,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_15)","line":239,"loc":{"start":{"line":239,"column":4},"end":{"line":null,"column":-1}}},"9":{"name":"(anonymous_16)","line":260,"loc":{"start":{"line":260,"column":4},"end":{"line":null,"column":-1}}},"10":{"name":"(anonymous_17)","line":274,"loc":{"start":{"line":274,"column":4},"end":{"line":null,"column":-1}}},"11":{"name":"(anonymous_18)","line":288,"loc":{"start":{"line":288,"column":4},"end":{"line":null,"column":-1}}},"12":{"name":"(anonymous_19)","line":309,"loc":{"start":{"line":309,"column":4},"end":{"line":null,"column":-1}}},"13":{"name":"(anonymous_20)","line":340,"loc":{"start":{"line":340,"column":4},"end":{"line":null,"column":-1}}},"14":{"name":"(anonymous_21)","line":357,"loc":{"start":{"line":357,"column":4},"end":{"line":null,"column":-1}}},"15":{"name":"(anonymous_22)","line":375,"loc":{"start":{"line":375,"column":4},"end":{"line":null,"column":-1}}},"16":{"name":"(anonymous_23)","line":379,"loc":{"start":{"line":379,"column":4},"end":{"line":379,"column":32}}},"17":{"name":"(anonymous_24)","line":383,"loc":{"start":{"line":383,"column":4},"end":{"line":383,"column":28}}},"18":{"name":"(anonymous_25)","line":393,"loc":{"start":{"line":393,"column":4},"end":{"line":null,"column":-1}}},"19":{"name":"(anonymous_26)","line":417,"loc":{"start":{"line":417,"column":4},"end":{"line":null,"column":-1}}},"20":{"name":"(anonymous_27)","line":450,"loc":{"start":{"line":450,"column":4},"end":{"line":null,"column":-1}}},"21":{"name":"(anonymous_28)","line":440,"loc":{"start":{"line":440,"column":4},"end":{"line":440,"column":44}}},"22":{"name":"(anonymous_29)","line":469,"loc":{"start":{"line":469,"column":4},"end":{"line":null,"column":-1}}},"23":{"name":"(anonymous_30)","line":459,"loc":{"start":{"line":459,"column":4},"end":{"line":459,"column":46}}},"24":{"name":"(anonymous_31)","line":488,"loc":{"start":{"line":488,"column":4},"end":{"line":null,"column":-1}}},"25":{"name":"(anonymous_32)","line":478,"loc":{"start":{"line":478,"column":4},"end":{"line":478,"column":42}}},"26":{"name":"(anonymous_33)","line":507,"loc":{"start":{"line":507,"column":4},"end":{"line":null,"column":-1}}},"27":{"name":"(anonymous_34)","line":497,"loc":{"start":{"line":497,"column":4},"end":{"line":497,"column":48}}},"28":{"name":"(anonymous_35)","line":526,"loc":{"start":{"line":526,"column":4},"end":{"line":null,"column":-1}}},"29":{"name":"(anonymous_36)","line":516,"loc":{"start":{"line":516,"column":4},"end":{"line":516,"column":46}}},"30":{"name":"(anonymous_37)","line":535,"loc":{"start":{"line":535,"column":4},"end":{"line":null,"column":-1}}},"31":{"name":"(anonymous_38)","line":530,"loc":{"start":{"line":530,"column":4},"end":{"line":530,"column":34}}},"32":{"name":"(anonymous_39)","line":544,"loc":{"start":{"line":544,"column":4},"end":{"line":null,"column":-1}}},"33":{"name":"(anonymous_40)","line":539,"loc":{"start":{"line":539,"column":4},"end":{"line":539,"column":36}}},"34":{"name":"(anonymous_41)","line":553,"loc":{"start":{"line":553,"column":4},"end":{"line":null,"column":-1}}},"35":{"name":"(anonymous_42)","line":548,"loc":{"start":{"line":548,"column":4},"end":{"line":548,"column":36}}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":25},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":25},"end":{"line":null,"column":-1}}]},"2":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":23},"end":{"line":151,"column":30}},{"start":{"line":151,"column":34},"end":{"line":151,"column":43}}]},"3":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":8},"end":{"line":359,"column":7}},{"start":{"line":359,"column":8},"end":{"line":359,"column":7}}]},"4":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":8},"end":{"line":398,"column":7}},{"start":{"line":398,"column":8},"end":{"line":398,"column":7}}]},"5":{"line":398,"type":"binary-expr","locations":[{"start":{"line":398,"column":12},"end":{"line":398,"column":29}},{"start":{"line":398,"column":33},"end":{"line":398,"column":40}}]},"6":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":8},"end":{"line":402,"column":7}},{"start":{"line":402,"column":8},"end":{"line":402,"column":7}}]},"7":{"line":402,"type":"binary-expr","locations":[{"start":{"line":402,"column":12},"end":{"line":402,"column":32}},{"start":{"line":402,"column":36},"end":{"line":402,"column":46}}]},"8":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":8},"end":{"line":422,"column":7}},{"start":{"line":422,"column":8},"end":{"line":422,"column":7}}]},"9":{"line":422,"type":"binary-expr","locations":[{"start":{"line":422,"column":12},"end":{"line":422,"column":30}},{"start":{"line":422,"column":34},"end":{"line":422,"column":42}}]},"10":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":8},"end":{"line":426,"column":7}},{"start":{"line":426,"column":8},"end":{"line":426,"column":7}}]},"11":{"line":426,"type":"binary-expr","locations":[{"start":{"line":426,"column":12},"end":{"line":426,"column":31}},{"start":{"line":426,"column":35},"end":{"line":426,"column":44}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":47,"6":46,"7":46,"8":46,"9":46,"10":46,"11":46,"12":46,"13":46,"14":46,"15":46,"16":46,"17":46,"18":46,"19":46,"20":46,"21":46,"22":162,"23":1,"24":0,"25":1,"26":130,"27":130,"28":130,"29":130,"30":130,"31":130,"32":1,"33":130,"34":130,"35":130,"36":130,"37":130,"38":130,"39":1,"40":128,"41":128,"42":128,"43":128,"44":1,"45":130,"46":130,"47":130,"48":130,"49":130,"50":130,"51":1,"52":128,"53":128,"54":128,"55":1,"56":169,"57":169,"58":1,"59":130,"60":130,"61":130,"62":130,"63":130,"64":1,"65":153,"66":153,"67":153,"68":153,"69":153,"70":153,"71":153,"72":1,"73":130,"74":130,"75":130,"76":130,"77":130,"78":1,"79":637,"80":128,"81":128,"82":124,"83":128,"84":1,"85":162,"86":1,"87":0,"88":1,"89":0,"90":1,"91":107,"92":107,"93":107,"94":0,"95":107,"96":46,"97":107,"98":107,"99":1,"100":92,"101":92,"102":92,"103":0,"104":92,"105":46,"106":92,"107":92,"108":1,"109":2027,"110":46,"111":46,"112":46,"113":1,"114":1046,"115":46,"116":46,"117":46,"118":1,"119":1990,"120":46,"121":46,"122":46,"123":1,"124":1753,"125":61,"126":61,"127":61,"128":1,"129":1978,"130":46,"131":46,"132":46,"133":1,"134":130,"135":92,"136":92,"137":1,"138":130,"139":46,"140":46,"141":1,"142":130,"143":46,"144":46,"145":1,"146":1},"b":{"1":[1,0],"2":[46,40],"3":[128,509],"4":[0,107],"5":[107,107],"6":[46,61],"7":[107,61],"8":[0,92],"9":[92,92],"10":[46,46],"11":[92,46]},"f":{"1":1,"2":46,"3":162,"4":0,"5":130,"6":130,"7":128,"8":130,"9":128,"10":169,"11":130,"12":153,"13":130,"14":637,"15":162,"16":0,"17":0,"18":107,"19":92,"20":2027,"21":46,"22":1046,"23":46,"24":1990,"25":46,"26":1753,"27":61,"28":1978,"29":46,"30":130,"31":92,"32":130,"33":46,"34":130,"35":46},"code":"import * as CrossFilter from 'crossfilter';\nimport * as d3 from 'd3';\n\nimport {ColorMap} from './colormap';\nimport {Legend} from './legend';\n\n/**\n * This is the base class for all punchcards. It provides the methods that are\n * shared between all punchcards, such as drawing of the vertical axis (which is\n * always hour of day), drawing of the background box, generation of the SVG DOM\n * element, and so on.\n */\nexport class Base {\n\n    /**\n     * The crossfilter that contains the data which needs to be visualized.\n     * @type {CrossFilter.CrossFilter<any>}\n     */\n    public colormap: ColorMap;\n    /**\n     * The user-defined dimensions that are used to manipulate the crossfilter\n     * data.\n     * @type {any}\n     */\n    public domElem: HTMLElement;\n    /**\n     * The element ID of the this._domElem object.\n     * @type {string}\n     */\n    public svg: any;\n    /**\n     * Whether or not there is enough data defined to be able to draw anything.\n     * @type {boolean}\n     */\n    public canDraw: boolean;\n    protected cf: CrossFilter.CrossFilter<any>;\n    /**\n     * The colormap: i.e. the element that determines what color is used to\n     * display a certain value.\n     * @type {ColorMap}\n     */\n    protected dim: any;\n    /**\n     * The element of the DOM where the punchcard should be visualized.\n     * @type {HTMLElement}\n     */\n    protected domElemId: string;\n    /**\n     * The SVG DOM element that is used to draw a punchcard in.\n     * @type {any}\n     */\n    /**\n     * Text to use as title for the graph\n     * @type {string}\n     */\n    protected _title: string;\n    /**\n     * Text to use as label for the horizontal axis\n     * @type {string}\n     */\n    protected _xlabel: string;\n    /**\n     * Text to use as label for the vertical axis\n     * @type {string}\n     */\n    protected _ylabel: string;\n    /**\n     * d3 time scale for the vertical axis\n     * @type {d3.scale.Linear<any, any>}\n     */\n    protected todScale: d3.scale.Linear<any, any>;\n    /**\n     * height of the axis\n     * @type {number}\n     */\n    protected height: number;\n    /**\n     * Defines which key of your input data contains the datetime information\n     * based on which you want to create the symbols in the punchcard's body.\n     * The default value is 'datestr'\n     * @type {string}\n     */\n    protected datekey: string;\n    /**\n     * The space in pixels between the left side of the axis background and\n     * edge of the SVG element.\n     * @type {number}\n     */\n    private _marginLeft: number;\n    /**\n     * The space in pixels between the right side of the  axis background and\n     * edge of the SVG element.\n     * @type {number}\n     */\n    private _marginRight: number;\n    /**\n     * The space in pixels between the top side of axis background and edge of\n     * the SVG element.\n     * @type {number}\n     */\n    private _marginTop: number;\n    /**\n     * The space in pixels between the bottom side of axis background and edge\n     * of the SVG element.\n     * @type {number}\n     */\n    private _marginBottom: number;\n    /**\n     * width in pixels that is occupied by the legend\n     * @type {number}\n     */\n    private _legendWidth: number;\n\n    /**\n     * Constructs an instance of Base when given a crossfilter object and the\n     * name of a DOM element to draw in.\n     * @param  {CrossFilter.CrossFilter<any>} cf Crossfilter object\n     * containing the data\n     * @param  {string} domElemId DOM element identifier for the div in which to\n     * draw the punchcard graph\n     * @return {[type]} Returns an instance of Base class\n     */\n    constructor(cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\n\n        // the crossfilter object\n        this.cf = cf;\n\n        // the name of the DOM element\n        this.domElemId = domElemId;\n\n        // the DOM element by ID\n        this.domElem = document.getElementById(this.domElemId);\n\n        // all the dimensions are collected into one object, dim, which is\n        // initialized here:\n        this.dim = {};\n\n        // can only draw stuff after user has defined some dimensions\n        this.canDraw = false;\n\n        // the margins around the graph body\n        this.marginLeft = 70;\n        this.marginRight = 30;\n        this.marginTop = 50;\n        this.marginBottom = 110;\n        this.legendWidth = 80;\n\n        this.ylabel = 'Time of day';\n        this.title = '';\n\n        this.datekey = datekey || 'datestr';\n        this.colormap = new ColorMap();\n\n        this.domElem.classList.add('punchcard-common');\n\n        window.addEventListener('resize', () => {\n            this.onResize();\n        });\n\n    }\n\n    /**\n     * Placeholder method that does not do anything but needs to be here because\n     * it's called by .update().\n     * @return {Base} return the (unchanged) instance of Base\n     */\n    protected draw(): Base {\n        // placeholder method to be overridden in classes that inherit from this class\n        return this;\n    }\n    /**\n     * Adds an SVG g element containing an SVG rect element with which to draw a\n     * border around the punchcard graph.\n     * @return {Base} returns a reference to the instance of Base\n     */\n    protected drawBox(): Base {\n        //\n        const w: number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        const h: number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        const dx: number = this.marginLeft;\n        const dy: number = this.marginTop;\n\n        this.svg.append('g')\n            .attr('class', 'chartbody-box')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', w)\n                .attr('height', h)\n                .attr('class', 'chartbody-box');\n\n        return this;\n    }\n\n    /**\n     * Appends an SVG g element containing an SVG rect, the size of which is\n     * determined by the size of the SVG element minus the margins on 4 sides,\n     * and minus the width taken up by the legend. The rect constitutes the\n     * background of the punchcard's axes.\n     * @return {Base} returns a reference to the instance of Base\n     */\n    protected drawChartBody(): Base {\n        //\n        const w: number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        const h: number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        const dx: number = this.marginLeft;\n        const dy: number = this.marginTop;\n\n        this.svg.append('g')\n            .attr('class', 'chartbody')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', w)\n                .attr('height', h)\n                .attr('class', 'chartbody');\n\n        return this;\n    }\n\n    protected drawFooter(): Base {\n\n        const dx: number = this.domElem.clientWidth - this.marginRight - this.legendWidth;\n        const dy: number = this.domElem.clientHeight - this.marginBottom;\n        this.svg.append('g')\n            .attr('class', 'footer')\n            .append('text')\n            .text('')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .style('text-anchor', 'end')\n            .attr('x', '-5px')\n            .attr('y', '-5px');\n        return this;\n    }\n\n    /**\n     * Adds an SVG g element containing an SVG text element with which to label\n     * the horizontal axis.\n     * @return {Base} returns a reference to the instance of Base\n     */\n    protected drawHorizontalAxisLabel(): Base {\n\n        const w: number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        const h: number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        const dx: number = this.marginLeft + 0.5 * w;\n        const dy: number = this.marginTop + h + 0.8 * this.marginBottom;\n\n        this.svg.append('g')\n            .attr('class', 'horizontal-axis-label')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .append('text')\n            .text(this.xlabel)\n            .attr('class', 'horizontal-axis-label');\n\n        return this;\n    }\n\n    /**\n     * Adds a Legend to the plot, while resizing the punchcard as necessary.\n     * @return {Base} returns a reference to the instance of Base\n     */\n    protected drawLegend(): Base {\n        // draw the legend\n\n        const legend: Legend = new Legend(this);\n        legend.draw();\n\n        return this;\n    }\n\n    /**\n     * Adds an SVG element to the DOM, so that other methods you can do d3\n     * things with it later.\n     * @return {Base} returns a reference to the instance of Base\n     */\n    protected drawSvg(): Base {\n\n        this.svg = d3.select(this.domElem).append('svg')\n            .attr('width', this.domElem.clientWidth)\n            .attr('height', this.domElem.clientHeight);\n\n        return this;\n    }\n\n    /**\n     * Adds an SVG g element containing an SVG text element representing the\n     * title of the punchcard graph.\n     * @return {Base} returns a reference to the instance of Base\n     */\n    protected drawTitle(): Base {\n\n        const w: number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        const dx: number = this.marginLeft + 0.5 * w;\n        const dy: number = 0.5 * this.marginTop;\n\n        this.svg.append('g')\n            .attr('class', 'title')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .append('text')\n            .text(this.title)\n            .attr('class', 'title');\n\n        return this;\n    }\n\n    /**\n     * Adds an SVG g element containing a d3.linear.axis representing the hour\n     * of day.\n     * @return {Base} returns a reference to the instance of Base\n     */\n    protected drawVerticalAxis(): Base {\n        //\n        const dx: number = this.marginLeft;\n        const dy: number = this.domElem.clientHeight - this.marginBottom;\n        const h: number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n\n        this.todScale = d3.scale.linear()\n            .range([-h, 0])\n            .domain([0.0, 24.0]);\n\n        const todAxis = d3.svg.axis()\n            .orient('left')\n            .scale(this.todScale)\n            .tickValues([0, 3, 6, 9, 12, 15, 18, 21, 24])\n            .innerTickSize(5)\n            .outerTickSize(0);\n\n        this.svg.append('g')\n            .attr('class', 'vertical-axis')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(todAxis);\n\n        return this;\n\n    }\n\n    /**\n     * Adds an SVG g element containing an SVG text element with which to label\n     * the vertical axis.\n     * @return {Base} returns a reference to the instance of Base\n     */\n    protected drawVerticalAxisLabel(): Base {\n        //\n        const h: number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        const dx: number = 0.3 * this.marginLeft;\n        const dy: number = this.marginTop + 0.5 * h;\n\n        this.svg.append('g')\n            .attr('class', 'vertical-axis-label')\n            .attr('transform', 'translate(' + dx + ',' + dy + ') rotate(-90)')\n            .append('text')\n            .text(this.ylabel)\n            .attr('class', 'vertical-axis-label');\n\n        return this;\n\n    }\n\n    protected update() {\n\n        if (this.canDraw) {\n            // get the div element that we want to redraw\n            const div = this.domElem;\n\n            // delete the contents of the div\n            while (div.firstChild) {\n                div.removeChild(div.firstChild);\n            }\n            this.draw();\n        }\n    }\n\n    /**\n     * When the window is resized, redraw the punchcard graph in its entirety.\n     * @return {[type]} [description]\n     */\n    protected onResize() {\n        this.update();\n    }\n\n    protected onMouseOver(d: any) {\n        console.log(d);\n    }\n\n    protected onClick(d: any) {\n        console.log(d);\n    }\n\n    /**\n     * Sets the CSS style min-height such that the body of the punchcard graph\n     * cannot become smaller than 100px in height, while taking into account the\n     * margins on the top and bottom of the graph.\n     * @return {Base} returns a reference to the instance of Base\n     */\n    private updateMinHeight(): Base {\n\n        let top: number = this.marginTop;\n        let bottom: number = this.marginBottom;\n\n        if (top === undefined || top < 0) {\n            top = 0;\n        }\n\n        if (bottom === undefined || bottom < 0) {\n            bottom = 0;\n        }\n\n        this.domElem.style.minHeight = (top + bottom + 100).toString() + 'px';\n\n        return this;\n    }\n\n    /**\n     * Sets the CSS style min-width such that the body of the punchcard graph\n     * cannot become narrower than 100px, while taking into account the\n     * margins on the left and right of the graph.\n     * @return {Base} returns a reference to the instance of Base\n     */\n    private updateMinWidth(): Base {\n\n        let left: number = this.marginLeft;\n        let right: number = this.marginRight;\n\n        if (left === undefined || left < 0) {\n            left = 0;\n        }\n\n        if (right === undefined || right < 0) {\n            right = 0;\n        }\n\n        this.domElem.style.minWidth = (left + right + 100).toString() + 'px';\n\n        return this;\n    }\n\n    /**\n     * [marginLeft description]\n     * @param  {number} marginLeft [description]\n     * @return {[type]}            [description]\n     */\n    public set marginLeft(marginLeft: number) {\n        this._marginLeft = marginLeft;\n        this.updateMinWidth();\n        this.update();\n    }\n\n    /**\n     * [marginLeft description]\n     * @return {number} [description]\n     */\n    public get marginLeft(): number {\n        return this._marginLeft;\n    }\n\n    /**\n     * [marginRight description]\n     * @param  {number} marginRight [description]\n     * @return {[type]}             [description]\n     */\n    public set marginRight(marginRight: number) {\n        this._marginRight = marginRight;\n        this.updateMinWidth();\n        this.update();\n    }\n\n    /**\n     * [marginRight description]\n     * @return {number} [description]\n     */\n    public get marginRight(): number {\n        return this._marginRight;\n    }\n\n    /**\n     * [marginTop description]\n     * @param  {number} marginTop [description]\n     * @return {[type]}           [description]\n     */\n    public set marginTop(marginTop: number) {\n        this._marginTop = marginTop;\n        this.updateMinHeight();\n        this.update();\n    }\n\n    /**\n     * [marginTop description]\n     * @return {number} [description]\n     */\n    public get marginTop(): number {\n        return this._marginTop;\n    }\n\n    /**\n     * [marginBottom description]\n     * @param  {number} marginBottom [description]\n     * @return {[type]}              [description]\n     */\n    public set marginBottom(marginBottom: number) {\n        this._marginBottom = marginBottom;\n        this.updateMinHeight();\n        this.update();\n    }\n\n    /**\n     * [marginBottom description]\n     * @return {number} [description]\n     */\n    public get marginBottom(): number {\n        return this._marginBottom;\n    }\n\n    /**\n     * [legendWidth description]\n     * @param  {number} legendWidth [description]\n     * @return {[type]}             [description]\n     */\n    public set legendWidth(legendWidth: number) {\n        const minimumWidth: number = 50;\n        this._legendWidth = Math.max(legendWidth, minimumWidth);\n        this.update();\n    }\n\n    /**\n     * [legendWidth description]\n     * @return {number} [description]\n     */\n    public get legendWidth(): number {\n        return this._legendWidth;\n    }\n\n    public set title(title: string) {\n        this._title = title;\n        this.update();\n    }\n\n    public get title(): string {\n        return this._title;\n    }\n\n    public set xlabel(xlabel: string) {\n        this._xlabel = xlabel;\n        this.update();\n    }\n\n    public get xlabel(): string {\n        return this._xlabel;\n    }\n\n    public set ylabel(ylabel: string) {\n        this._ylabel = ylabel;\n        this.update();\n    }\n\n    public get ylabel(): string {\n        return this._ylabel;\n    }\n\n}\n","l":{"2":1,"4":1,"5":1,"13":1,"123":47,"126":46,"129":46,"132":46,"136":46,"139":46,"142":46,"143":46,"144":46,"145":46,"146":46,"148":46,"149":46,"151":46,"152":46,"154":46,"156":46,"157":162,"167":1,"169":0,"176":1,"178":130,"179":130,"180":130,"181":130,"183":130,"191":130,"201":1,"203":130,"204":130,"205":130,"206":130,"208":130,"216":130,"219":1,"221":128,"222":128,"223":128,"231":128,"239":1,"241":130,"242":130,"243":130,"244":130,"246":130,"253":130,"260":1,"263":128,"264":128,"266":128,"274":1,"276":169,"280":169,"288":1,"290":130,"291":130,"292":130,"294":130,"301":130,"309":1,"311":153,"312":153,"313":153,"315":153,"319":153,"326":153,"331":153,"340":1,"342":130,"343":130,"344":130,"346":130,"353":130,"357":1,"359":637,"361":128,"364":128,"365":124,"367":128,"375":1,"376":162,"379":1,"380":0,"383":1,"384":0,"393":1,"395":107,"396":107,"398":107,"399":0,"402":107,"403":46,"406":107,"408":107,"417":1,"419":92,"420":92,"422":92,"423":0,"426":92,"427":46,"430":92,"432":92,"440":1,"441":46,"442":46,"443":46,"451":2027,"459":1,"460":46,"461":46,"462":46,"470":1046,"478":1,"479":46,"480":46,"481":46,"489":1990,"497":1,"498":61,"499":61,"500":61,"508":1753,"516":1,"517":46,"518":46,"519":46,"527":1978,"530":1,"531":92,"532":92,"536":130,"539":1,"540":46,"541":46,"545":130,"548":1,"549":46,"550":46,"554":130,"557":1}},
"src/DateCircle.ts":{"path":"src/DateCircle.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"4":{"start":{"line":10,"column":0},"end":{"line":108,"column":1}},"5":{"start":{"line":10,"column":32},"end":{"line":10,"column":40}},"6":{"start":{"line":12,"column":4},"end":{"line":26,"column":5}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":61}},"8":{"start":{"line":17,"column":8},"end":{"line":17,"column":29}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":40}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":48}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":60}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":22}},"15":{"start":{"line":28,"column":14},"end":{"line":106,"column":5}},"16":{"start":{"line":28,"column":4},"end":{"line":106,"column":5}},"17":{"start":{"line":30,"column":8},"end":{"line":30,"column":107}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":89}},"19":{"start":{"line":32,"column":8},"end":{"line":32,"column":43}},"20":{"start":{"line":33,"column":8},"end":{"line":33,"column":46}},"21":{"start":{"line":34,"column":8},"end":{"line":34,"column":68}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":92}},"23":{"start":{"line":37,"column":8},"end":{"line":37,"column":87}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":87}},"25":{"start":{"line":39,"column":8},"end":{"line":39,"column":70}},"26":{"start":{"line":44,"column":8},"end":{"line":44,"column":56}},"27":{"start":{"line":45,"column":8},"end":{"line":48,"column":11}},"28":{"start":{"line":47,"column":12},"end":{"line":47,"column":38}},"29":{"start":{"line":49,"column":8},"end":{"line":49,"column":38}},"30":{"start":{"line":53,"column":8},"end":{"line":53,"column":46}},"31":{"start":{"line":54,"column":8},"end":{"line":54,"column":47}},"32":{"start":{"line":55,"column":8},"end":{"line":62,"column":9}},"33":{"start":{"line":55,"column":13},"end":{"line":55,"column":23}},"34":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"35":{"start":{"line":57,"column":16},"end":{"line":57,"column":36}},"36":{"start":{"line":59,"column":12},"end":{"line":61,"column":13}},"37":{"start":{"line":60,"column":16},"end":{"line":60,"column":37}},"38":{"start":{"line":63,"column":8},"end":{"line":63,"column":39}},"39":{"start":{"line":64,"column":8},"end":{"line":64,"column":41}},"40":{"start":{"line":67,"column":8},"end":{"line":102,"column":23}},"41":{"start":{"line":77,"column":24},"end":{"line":77,"column":77}},"42":{"start":{"line":80,"column":24},"end":{"line":80,"column":114}},"43":{"start":{"line":83,"column":24},"end":{"line":83,"column":78}},"44":{"start":{"line":84,"column":24},"end":{"line":84,"column":93}},"45":{"start":{"line":85,"column":24},"end":{"line":89,"column":25}},"46":{"start":{"line":86,"column":28},"end":{"line":86,"column":50}},"47":{"start":{"line":88,"column":28},"end":{"line":88,"column":66}},"48":{"start":{"line":92,"column":24},"end":{"line":92,"column":66}},"49":{"start":{"line":95,"column":24},"end":{"line":95,"column":40}},"50":{"start":{"line":98,"column":24},"end":{"line":98,"column":44}},"51":{"start":{"line":101,"column":24},"end":{"line":101,"column":42}},"52":{"start":{"line":104,"column":8},"end":{"line":104,"column":20}},"53":{"start":{"line":108,"column":0},"end":{"line":108,"column":1}},"54":{"start":{"line":10,"column":13},"end":{"line":10,"column":23}}},"fnMap":{"1":{"name":"(anonymous_50)","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"DateCircle","line":12,"loc":{"start":{"line":12,"column":4},"end":{"line":12,"column":84}}},"3":{"name":"(anonymous_52)","line":28,"loc":{"start":{"line":28,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_53)","line":45,"loc":{"start":{"line":45,"column":28},"end":{"line":45,"column":35}}},"5":{"name":"(anonymous_54)","line":76,"loc":{"start":{"line":76,"column":32},"end":{"line":76,"column":39}}},"6":{"name":"(anonymous_55)","line":79,"loc":{"start":{"line":79,"column":32},"end":{"line":79,"column":39}}},"7":{"name":"(anonymous_56)","line":82,"loc":{"start":{"line":82,"column":31},"end":{"line":82,"column":38}}},"8":{"name":"(anonymous_57)","line":91,"loc":{"start":{"line":91,"column":34},"end":{"line":91,"column":41}}},"9":{"name":"(anonymous_58)","line":94,"loc":{"start":{"line":94,"column":33},"end":{"line":94,"column":40}}},"10":{"name":"(anonymous_59)","line":97,"loc":{"start":{"line":97,"column":37},"end":{"line":97,"column":44}}},"11":{"name":"(anonymous_60)","line":100,"loc":{"start":{"line":100,"column":36},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":33},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":33},"end":{"line":null,"column":-1}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":37}},{"start":{"line":14,"column":37},"end":{"line":26,"column":4}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":11}},{"start":{"line":56,"column":12},"end":{"line":56,"column":11}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":11}},{"start":{"line":59,"column":12},"end":{"line":59,"column":11}}]},"5":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":24},"end":{"line":85,"column":23}},{"start":{"line":85,"column":24},"end":{"line":85,"column":23}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":9,"7":8,"8":8,"9":8,"10":8,"11":8,"12":8,"13":8,"14":8,"15":1,"16":53,"17":53,"18":53,"19":53,"20":53,"21":53,"22":53,"23":53,"24":53,"25":53,"26":53,"27":53,"28":2820,"29":53,"30":53,"31":53,"32":53,"33":2820,"34":2820,"35":173,"36":2820,"37":220,"38":53,"39":53,"40":53,"41":2820,"42":2820,"43":2820,"44":2820,"45":2820,"46":26,"47":2794,"48":2820,"49":0,"50":0,"51":0,"52":53,"53":1,"54":1},"b":{"1":[1,0],"2":[8,0],"3":[173,2647],"4":[220,2600],"5":[26,2794]},"f":{"1":1,"2":8,"3":53,"4":2820,"5":2820,"6":2820,"7":2820,"8":2820,"9":0,"10":0,"11":0},"code":"import * as CrossFilter from 'crossfilter';\nimport * as moment from 'moment';\n\nimport {ColorMap} from './colormap';\nimport {DateRect} from './DateRect';\n\n/**\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\n */\nexport class DateCircle extends DateRect {\n\n    constructor(cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\n\n        super(cf, domElemId, datekey);\n        // ...but reset these properties\n        this.domElem.classList.remove('punchcard-date-rect');\n        this.canDraw = false;\n\n        this.xlabel = '';\n        this.title = 'DateCircle title';\n        this.colormap = new ColorMap('rainbow');\n        super.defineDimensions();\n        this.domElem.classList.add('punchcard-date-circle');\n        this.update();\n\n    }\n\n    protected drawSymbols(): DateCircle {\n\n        const w: number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        const h: number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        const dx: number = this.marginLeft;\n        const dy: number = this.marginTop + h;\n        const symbolMargin = {left: 0, right: 0, top: 0, bottom: 0}; // pixels\n        const wDays: number = moment(this.dateTo).diff(moment(this.dateFrom), 'days', true);\n\n        const symbolWidth: number = w / wDays - symbolMargin.left - symbolMargin.right;\n        const symbolHeight: number = h / 24.0 - symbolMargin.top - symbolMargin.bottom;\n        const r: number = Math.min(symbolWidth, symbolHeight) / 2 - 2;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        const group = this.dim.dateAndHourOfDay.group();\n        group.all().forEach((d: any) => {\n            // parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        const data: any = group.all();\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (const elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n        // draw the circles\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('circle.symbol')\n                .data(data)\n                .enter()\n                .append('circle')\n                    .attr('class', 'symbol')\n                    .attr('cx', (d: any) => {\n                        return this.dateScale(new Date(d.key[this.datekey]));\n                        })\n                    .attr('cy', (d: any) => {\n                        return this.todScale(parseInt(d.key.hourOfDay, 10)) + symbolMargin.top + symbolHeight / 2;\n                    })\n                    .attr('r', (d: any) => {\n                        const numer: number = d.value - this.colormap.cLimLow;\n                        const denom: number = this.colormap.cLimHigh - this.colormap.cLimLow;\n                        if (denom === 0) {\n                            return Math.max(r, 1);\n                        } else {\n                            return Math.max(r * numer / denom, 1);\n                        }\n                    })\n                    .attr('fill', (d: any) => {\n                        return this.colormap.getColorRGB(d.value);\n                    })\n                    .on('click', (d: any) => {\n                        this.onClick(d);\n                    })\n                    .on('mouseover', (d: any) => {\n                        this.onMouseOver(d);\n                    })\n                    .on('mouseout', () => {\n                        this.onMouseOut();\n                    });\n\n        return this;\n\n    }\n\n}\n","l":{"2":1,"4":1,"5":1,"10":1,"12":9,"16":8,"17":8,"19":8,"20":8,"21":8,"22":8,"23":8,"24":8,"28":53,"30":53,"31":53,"32":53,"33":53,"34":53,"35":53,"37":53,"38":53,"39":53,"44":53,"45":53,"47":2820,"49":53,"53":53,"54":53,"55":2820,"56":2820,"57":173,"59":2820,"60":220,"63":53,"64":53,"67":53,"77":2820,"80":2820,"83":2820,"84":2820,"85":2820,"86":26,"88":2794,"92":2820,"95":0,"98":0,"101":0,"104":53,"108":1}},
"src/DateRect.ts":{"path":"src/DateRect.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"5":{"start":{"line":11,"column":0},"end":{"line":255,"column":1}},"6":{"start":{"line":11,"column":30},"end":{"line":11,"column":34}},"7":{"start":{"line":24,"column":4},"end":{"line":35,"column":5}},"8":{"start":{"line":28,"column":8},"end":{"line":28,"column":25}},"9":{"start":{"line":29,"column":8},"end":{"line":29,"column":38}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":48}},"11":{"start":{"line":31,"column":8},"end":{"line":31,"column":32}},"12":{"start":{"line":32,"column":8},"end":{"line":32,"column":58}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":22}},"14":{"start":{"line":41,"column":14},"end":{"line":60,"column":5}},"15":{"start":{"line":41,"column":4},"end":{"line":60,"column":5}},"16":{"start":{"line":45,"column":8},"end":{"line":57,"column":11}},"17":{"start":{"line":46,"column":12},"end":{"line":46,"column":33}},"18":{"start":{"line":47,"column":12},"end":{"line":56,"column":13}},"19":{"start":{"line":48,"column":16},"end":{"line":48,"column":44}},"20":{"start":{"line":49,"column":16},"end":{"line":49,"column":36}},"21":{"start":{"line":50,"column":16},"end":{"line":50,"column":59}},"22":{"start":{"line":51,"column":16},"end":{"line":51,"column":42}},"23":{"start":{"line":53,"column":16},"end":{"line":53,"column":43}},"24":{"start":{"line":55,"column":16},"end":{"line":55,"column":53}},"25":{"start":{"line":58,"column":8},"end":{"line":58,"column":28}},"26":{"start":{"line":59,"column":8},"end":{"line":59,"column":20}},"27":{"start":{"line":77,"column":14},"end":{"line":100,"column":5}},"28":{"start":{"line":79,"column":8},"end":{"line":99,"column":9}},"29":{"start":{"line":81,"column":12},"end":{"line":81,"column":24}},"30":{"start":{"line":84,"column":12},"end":{"line":97,"column":13}},"31":{"start":{"line":86,"column":16},"end":{"line":86,"column":32}},"32":{"start":{"line":87,"column":16},"end":{"line":87,"column":38}},"33":{"start":{"line":88,"column":16},"end":{"line":88,"column":42}},"34":{"start":{"line":89,"column":16},"end":{"line":89,"column":48}},"35":{"start":{"line":90,"column":16},"end":{"line":90,"column":41}},"36":{"start":{"line":91,"column":16},"end":{"line":91,"column":46}},"37":{"start":{"line":92,"column":16},"end":{"line":92,"column":34}},"38":{"start":{"line":93,"column":16},"end":{"line":93,"column":35}},"39":{"start":{"line":94,"column":16},"end":{"line":94,"column":32}},"40":{"start":{"line":95,"column":16},"end":{"line":95,"column":35}},"41":{"start":{"line":96,"column":16},"end":{"line":96,"column":35}},"42":{"start":{"line":98,"column":12},"end":{"line":98,"column":24}},"43":{"start":{"line":109,"column":14},"end":{"line":179,"column":5}},"44":{"start":{"line":109,"column":4},"end":{"line":179,"column":5}},"45":{"start":{"line":111,"column":8},"end":{"line":111,"column":107}},"46":{"start":{"line":112,"column":8},"end":{"line":112,"column":89}},"47":{"start":{"line":113,"column":8},"end":{"line":113,"column":43}},"48":{"start":{"line":114,"column":8},"end":{"line":114,"column":46}},"49":{"start":{"line":115,"column":8},"end":{"line":115,"column":68}},"50":{"start":{"line":116,"column":8},"end":{"line":116,"column":92}},"51":{"start":{"line":118,"column":8},"end":{"line":118,"column":87}},"52":{"start":{"line":119,"column":8},"end":{"line":119,"column":87}},"53":{"start":{"line":124,"column":8},"end":{"line":124,"column":56}},"54":{"start":{"line":125,"column":8},"end":{"line":128,"column":11}},"55":{"start":{"line":127,"column":12},"end":{"line":127,"column":38}},"56":{"start":{"line":129,"column":8},"end":{"line":129,"column":38}},"57":{"start":{"line":133,"column":8},"end":{"line":133,"column":46}},"58":{"start":{"line":134,"column":8},"end":{"line":134,"column":47}},"59":{"start":{"line":135,"column":8},"end":{"line":142,"column":9}},"60":{"start":{"line":135,"column":13},"end":{"line":135,"column":23}},"61":{"start":{"line":136,"column":12},"end":{"line":138,"column":13}},"62":{"start":{"line":137,"column":16},"end":{"line":137,"column":36}},"63":{"start":{"line":139,"column":12},"end":{"line":141,"column":13}},"64":{"start":{"line":140,"column":16},"end":{"line":140,"column":37}},"65":{"start":{"line":143,"column":8},"end":{"line":143,"column":39}},"66":{"start":{"line":144,"column":8},"end":{"line":144,"column":41}},"67":{"start":{"line":147,"column":8},"end":{"line":175,"column":23}},"68":{"start":{"line":157,"column":24},"end":{"line":157,"column":77}},"69":{"start":{"line":160,"column":24},"end":{"line":160,"column":76}},"70":{"start":{"line":165,"column":24},"end":{"line":165,"column":66}},"71":{"start":{"line":168,"column":24},"end":{"line":168,"column":40}},"72":{"start":{"line":171,"column":24},"end":{"line":171,"column":44}},"73":{"start":{"line":174,"column":24},"end":{"line":174,"column":42}},"74":{"start":{"line":177,"column":8},"end":{"line":177,"column":20}},"75":{"start":{"line":184,"column":14},"end":{"line":190,"column":5}},"76":{"start":{"line":185,"column":8},"end":{"line":187,"column":33}},"77":{"start":{"line":188,"column":8},"end":{"line":188,"column":61}},"78":{"start":{"line":189,"column":8},"end":{"line":189,"column":20}},"79":{"start":{"line":192,"column":14},"end":{"line":195,"column":5}},"80":{"start":{"line":193,"column":8},"end":{"line":193,"column":60}},"81":{"start":{"line":194,"column":8},"end":{"line":194,"column":20}},"82":{"start":{"line":202,"column":12},"end":{"line":254,"column":5}},"83":{"start":{"line":204,"column":8},"end":{"line":204,"column":107}},"84":{"start":{"line":205,"column":8},"end":{"line":205,"column":43}},"85":{"start":{"line":206,"column":8},"end":{"line":206,"column":73}},"86":{"start":{"line":208,"column":8},"end":{"line":208,"column":95}},"87":{"start":{"line":209,"column":8},"end":{"line":210,"column":79}},"88":{"start":{"line":212,"column":8},"end":{"line":212,"column":91}},"89":{"start":{"line":213,"column":8},"end":{"line":214,"column":82}},"90":{"start":{"line":216,"column":8},"end":{"line":216,"column":39}},"91":{"start":{"line":217,"column":8},"end":{"line":217,"column":32}},"92":{"start":{"line":218,"column":8},"end":{"line":218,"column":97}},"93":{"start":{"line":220,"column":8},"end":{"line":226,"column":9}},"94":{"start":{"line":221,"column":12},"end":{"line":221,"column":57}},"95":{"start":{"line":222,"column":12},"end":{"line":222,"column":22}},"96":{"start":{"line":224,"column":12},"end":{"line":224,"column":57}},"97":{"start":{"line":225,"column":12},"end":{"line":225,"column":33}},"98":{"start":{"line":228,"column":8},"end":{"line":231,"column":35}},"99":{"start":{"line":233,"column":8},"end":{"line":237,"column":36}},"100":{"start":{"line":239,"column":8},"end":{"line":242,"column":28}},"101":{"start":{"line":245,"column":8},"end":{"line":250,"column":45}},"102":{"start":{"line":252,"column":8},"end":{"line":252,"column":20}},"103":{"start":{"line":255,"column":0},"end":{"line":255,"column":1}},"104":{"start":{"line":11,"column":13},"end":{"line":11,"column":21}}},"fnMap":{"1":{"name":"(anonymous_68)","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"DateRect","line":24,"loc":{"start":{"line":24,"column":4},"end":{"line":24,"column":84}}},"3":{"name":"(anonymous_70)","line":41,"loc":{"start":{"line":41,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_71)","line":45,"loc":{"start":{"line":45,"column":54},"end":{"line":45,"column":61}}},"5":{"name":"(anonymous_72)","line":77,"loc":{"start":{"line":77,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_73)","line":109,"loc":{"start":{"line":109,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_74)","line":125,"loc":{"start":{"line":125,"column":28},"end":{"line":125,"column":35}}},"8":{"name":"(anonymous_75)","line":156,"loc":{"start":{"line":156,"column":31},"end":{"line":156,"column":38}}},"9":{"name":"(anonymous_76)","line":159,"loc":{"start":{"line":159,"column":31},"end":{"line":159,"column":38}}},"10":{"name":"(anonymous_77)","line":164,"loc":{"start":{"line":164,"column":34},"end":{"line":164,"column":41}}},"11":{"name":"(anonymous_78)","line":167,"loc":{"start":{"line":167,"column":33},"end":{"line":167,"column":40}}},"12":{"name":"(anonymous_79)","line":170,"loc":{"start":{"line":170,"column":37},"end":{"line":170,"column":44}}},"13":{"name":"(anonymous_80)","line":173,"loc":{"start":{"line":173,"column":36},"end":{"line":null,"column":-1}}},"14":{"name":"(anonymous_81)","line":184,"loc":{"start":{"line":184,"column":4},"end":{"line":184,"column":32}}},"15":{"name":"(anonymous_82)","line":192,"loc":{"start":{"line":192,"column":4},"end":{"line":null,"column":-1}}},"16":{"name":"(anonymous_83)","line":202,"loc":{"start":{"line":202,"column":4},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":25},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":25},"end":{"line":null,"column":-1}}]},"2":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":33},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":33},"end":{"line":null,"column":-1}}]},"3":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":37}},{"start":{"line":26,"column":37},"end":{"line":35,"column":4}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":11}},{"start":{"line":47,"column":12},"end":{"line":47,"column":11}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":7}},{"start":{"line":79,"column":8},"end":{"line":79,"column":7}}]},"6":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":12},"end":{"line":84,"column":11}},{"start":{"line":84,"column":12},"end":{"line":84,"column":11}}]},"7":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":12},"end":{"line":136,"column":11}},{"start":{"line":136,"column":12},"end":{"line":136,"column":11}}]},"8":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":12},"end":{"line":139,"column":11}},{"start":{"line":139,"column":12},"end":{"line":139,"column":11}}]},"9":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":220,"column":7}},{"start":{"line":220,"column":8},"end":{"line":220,"column":7}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":16,"8":15,"9":15,"10":15,"11":15,"12":15,"13":15,"14":1,"15":23,"16":23,"17":50019,"18":50019,"19":50019,"20":50019,"21":50019,"22":50019,"23":50019,"24":0,"25":23,"26":23,"27":1,"28":74,"29":0,"30":74,"31":74,"32":74,"33":74,"34":74,"35":74,"36":74,"37":74,"38":74,"39":74,"40":74,"41":74,"42":74,"43":1,"44":33,"45":33,"46":33,"47":33,"48":33,"49":33,"50":33,"51":33,"52":33,"53":33,"54":33,"55":2522,"56":33,"57":33,"58":33,"59":33,"60":2522,"61":2522,"62":141,"63":2522,"64":182,"65":33,"66":33,"67":33,"68":2522,"69":2522,"70":2522,"71":0,"72":0,"73":0,"74":33,"75":1,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":1,"83":87,"84":87,"85":87,"86":87,"87":87,"88":87,"89":87,"90":87,"91":87,"92":87,"93":87,"94":39,"95":39,"96":48,"97":48,"98":87,"99":87,"100":87,"101":87,"102":87,"103":1,"104":1},"b":{"1":[1,0],"2":[1,0],"3":[15,15],"4":[50019,0],"5":[0,74],"6":[74,0],"7":[141,2381],"8":[182,2340],"9":[39,48]},"f":{"1":1,"2":15,"3":23,"4":50019,"5":74,"6":33,"7":2522,"8":2522,"9":2522,"10":2522,"11":0,"12":0,"13":0,"14":0,"15":0,"16":87},"code":"import * as CrossFilter from 'crossfilter';\nimport * as d3 from 'd3';\nimport * as moment from 'moment';\n\nimport {Base} from './Base';\nimport {ColorMap} from './colormap';\n\n/**\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\n */\nexport class DateRect extends Base {\n\n    protected dateScale: d3.time.Scale<any, any>;\n    protected dateFrom: Date;\n    protected dateTo: Date;\n\n    /**\n     * Constructor method for DateRect\n     * @param  {CrossFilter.CrossFilter<any>} cf Crossfilter object\n     * containing the data.\n     * @param  {string} domElemId name of the DOM element to draw in.\n     * @return {[type]} A reference to an instance of DateRect.\n     */\n    constructor(cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\n\n        super(cf, domElemId, datekey);\n\n        this.xlabel = '';\n        this.title = 'DateRect title';\n        this.colormap = new ColorMap('default');\n        this.defineDimensions();\n        this.domElem.classList.add('punchcard-date-rect');\n        this.update();\n\n    }\n\n    /**\n     * Defines the crossfilter dimensions as used by this class\n     * @return {Base} A reference to an instance of DateRect.\n     */\n    protected defineDimensions(): DateRect {\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        this.dim.dateAndHourOfDay = this.cf.dimension((d: any) => {\n            let m: moment.Moment;\n            if (d.hasOwnProperty(this.datekey)) {\n                m = moment(d[this.datekey]);\n                const obj: any = {};\n                obj[this.datekey] = m.format('YYYY-MM-DD');\n                obj.hourOfDay =  m.hour();\n                // stringify() and later, parse() to get keyed objects\n                return JSON.stringify(obj);\n            } else {\n                throw new Error('datekey undefined');\n            }\n        });\n        this.canDraw = true;\n        return this;\n    }\n\n    /**\n     * This method defines which other methods to call in order to create\n     * a punchcard graph with the date on the horizontal axis and the time of\n     * day on the vertical axis. Mostly calls methods of the parent class, Base,\n     * but for example the symbols for this class are SVG rects, so it calls its\n     * own method .drawSymbols() for that.\n     *\n     * Successful drawing depends on whether the container is currently visible,\n     * and whether there is enough information in the instance to draw anything\n     * at all.\n     *\n     * This method overrides stub method in parent class.\n     *\n     * @return {DateRect} A reference to an instance of DateRect.\n     */\n    protected draw(): DateRect {\n\n        if (this.domElem.classList.contains('hidden')) {\n            // div is hidden\n            return this;\n        } else {\n            // div is visible\n            if (this.canDraw) {\n                // dimensions have been defined\n                super.drawSvg();\n                super.drawChartBody();\n                this.drawHorizontalAxis();\n                super.drawHorizontalAxisLabel();\n                super.drawVerticalAxis();\n                super.drawVerticalAxisLabel();\n                super.drawTitle();\n                this.drawSymbols();\n                super.drawBox();\n                super.drawLegend();\n                super.drawFooter();\n            }\n            return this;\n        }\n    }\n\n    /**\n     * This method adds an SVG g element with many SVG rects in it. Each rect\n     * represents the count of how many data rows fall within the area covered\n     * by the rect, where the horizontal boundaries dictate the date range and\n     * the vertical boundaries dictate the time of day range.\n     * @return {DateRect} A reference to the instance of DateRect.\n     */\n    protected drawSymbols(): DateRect {\n\n        const w: number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        const h: number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        const dx: number = this.marginLeft;\n        const dy: number = this.marginTop + h;\n        const symbolMargin = {left: 0, right: 0, top: 0, bottom: 0}; // pixels\n        const wDays: number = moment(this.dateTo).diff(moment(this.dateFrom), 'days', true);\n\n        const symbolWidth: number = w / wDays - symbolMargin.left - symbolMargin.right;\n        const symbolHeight: number = h / 24.0 - symbolMargin.top - symbolMargin.bottom;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        const group = this.dim.dateAndHourOfDay.group();\n        group.all().forEach((d: any) => {\n            // parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        const data: any = group.all();\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (const elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n        // draw the rects\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('rect.symbol')\n                .data(data)\n                .enter()\n                .append('rect')\n                    .attr('class', 'symbol')\n                    .attr('x', (d: any) => {\n                        return this.dateScale(new Date(d.key[this.datekey]));\n                        })\n                    .attr('y', (d: any) => {\n                        return this.todScale(parseInt(d.key.hourOfDay, 10));\n                    })\n                    .attr('width', symbolWidth)\n                    .attr('height', symbolHeight)\n                    .attr('fill', (d: any) => {\n                        return this.colormap.getColorRGB(d.value);\n                    })\n                    .on('click', (d: any) => {\n                        this.onClick(d);\n                    })\n                    .on('mouseover', (d: any) => {\n                        this.onMouseOver(d);\n                    })\n                    .on('mouseout', () => {\n                        this.onMouseOut();\n                    });\n\n        return this;\n\n    }\n\n    /*\n     * overrides method from Base\n     */\n    protected onMouseOver(d: any): DateRect {\n        const str: string = 'x:' + d.key[this.datekey] +\n            ', y:' + d.key.hourOfDay +\n            ', count:' + d.value;\n        this.svg.select('g.footer').select('text').text(str);\n        return this;\n    }\n\n    protected onMouseOut(): DateRect {\n        this.svg.select('g.footer').select('text').text('');\n        return this;\n    }\n\n    /**\n     * Adds an SVG g element containing a horizontal d3.time.scale axis to the\n     * DOM, representing the date.\n     * @return {DateRect} A reference to an instance of DateRect.\n     */\n    private drawHorizontalAxis(): DateRect {\n\n        const w: number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        const dx: number = this.marginLeft;\n        const dy: number = this.domElem.clientHeight - this.marginBottom;\n\n        const firstResultDate = new Date(this.dim.dateAndHourOfDay.bottom(1)[0][this.datekey]);\n        this.dateFrom = new Date(firstResultDate.getFullYear(),\n            firstResultDate.getMonth(), firstResultDate.getDate(), 0, 0, 0, 0);\n\n        const lastResultDate = new Date(this.dim.dateAndHourOfDay.top(1)[0][this.datekey]);\n        this.dateTo = new Date(lastResultDate.getFullYear(),\n            lastResultDate.getMonth(), lastResultDate.getDate(), 23, 59, 59, 999);\n\n        let tickFormat: d3.time.Format;\n        let ticks: number | any; // FIXME second type should be Date[] but that doesn't work somehow\n        const nHoursDiff: number = moment(this.dateTo).diff(moment(this.dateFrom), 'hour', true);\n\n        if (nHoursDiff > 5 * 24) {\n            tickFormat = d3.time.format('%a %b %-d, %Y');\n            ticks = 7;\n        } else {\n            tickFormat = d3.time.format('%a %b %-d, %Y');\n            ticks = d3.time.days;\n        }\n\n        this.dateScale = d3.time.scale()\n            .range([0, w])\n            .domain([this.dateFrom,\n                     this.dateTo]);\n\n        const dateAxis = d3.svg.axis()\n            .orient('bottom')\n            .scale(this.dateScale)\n            .ticks(ticks)\n            .tickFormat(tickFormat);\n\n        this.svg.append('g')\n            .attr('class', 'horizontal-axis')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(dateAxis);\n\n        // doing style stuff in JavaScript is considered bad practice...:\n        this.svg.select('.horizontal-axis')\n            .selectAll('text')\n                .attr('x', -10)\n                .attr('y', 0)\n                .attr('dy', '.35em')\n                .style('text-anchor', 'end');\n\n        return this;\n\n    }\n}\n","l":{"2":1,"3":1,"5":1,"6":1,"11":1,"24":16,"28":15,"29":15,"30":15,"31":15,"32":15,"33":15,"41":23,"45":23,"46":50019,"47":50019,"48":50019,"49":50019,"50":50019,"51":50019,"53":50019,"55":0,"58":23,"59":23,"77":1,"79":74,"81":0,"84":74,"86":74,"87":74,"88":74,"89":74,"90":74,"91":74,"92":74,"93":74,"94":74,"95":74,"96":74,"98":74,"109":33,"111":33,"112":33,"113":33,"114":33,"115":33,"116":33,"118":33,"119":33,"124":33,"125":33,"127":2522,"129":33,"133":33,"134":33,"135":2522,"136":2522,"137":141,"139":2522,"140":182,"143":33,"144":33,"147":33,"157":2522,"160":2522,"165":2522,"168":0,"171":0,"174":0,"177":33,"184":1,"185":0,"188":0,"189":0,"192":1,"193":0,"194":0,"202":1,"204":87,"205":87,"206":87,"208":87,"209":87,"212":87,"213":87,"216":87,"217":87,"218":87,"220":87,"221":39,"222":39,"224":48,"225":48,"228":87,"233":87,"239":87,"245":87,"252":87,"255":1}},
"src/WeekdayCircle.ts":{"path":"src/WeekdayCircle.ts","statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"3":{"start":{"line":10,"column":0},"end":{"line":112,"column":1}},"4":{"start":{"line":10,"column":35},"end":{"line":10,"column":46}},"5":{"start":{"line":12,"column":4},"end":{"line":25,"column":5}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":64}},"7":{"start":{"line":17,"column":8},"end":{"line":17,"column":29}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":36}},"9":{"start":{"line":20,"column":8},"end":{"line":20,"column":43}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":46}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":63}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":22}},"14":{"start":{"line":34,"column":14},"end":{"line":110,"column":5}},"15":{"start":{"line":34,"column":4},"end":{"line":110,"column":5}},"16":{"start":{"line":36,"column":8},"end":{"line":36,"column":107}},"17":{"start":{"line":37,"column":8},"end":{"line":37,"column":89}},"18":{"start":{"line":38,"column":8},"end":{"line":38,"column":43}},"19":{"start":{"line":39,"column":8},"end":{"line":39,"column":46}},"20":{"start":{"line":40,"column":8},"end":{"line":40,"column":68}},"21":{"start":{"line":41,"column":8},"end":{"line":41,"column":83}},"22":{"start":{"line":42,"column":8},"end":{"line":42,"column":85}},"23":{"start":{"line":44,"column":8},"end":{"line":44,"column":70}},"24":{"start":{"line":49,"column":8},"end":{"line":49,"column":59}},"25":{"start":{"line":50,"column":8},"end":{"line":53,"column":11}},"26":{"start":{"line":52,"column":12},"end":{"line":52,"column":38}},"27":{"start":{"line":54,"column":8},"end":{"line":54,"column":38}},"28":{"start":{"line":58,"column":8},"end":{"line":58,"column":46}},"29":{"start":{"line":59,"column":8},"end":{"line":59,"column":47}},"30":{"start":{"line":60,"column":8},"end":{"line":67,"column":9}},"31":{"start":{"line":60,"column":13},"end":{"line":60,"column":23}},"32":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"33":{"start":{"line":62,"column":16},"end":{"line":62,"column":36}},"34":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"35":{"start":{"line":65,"column":16},"end":{"line":65,"column":37}},"36":{"start":{"line":68,"column":8},"end":{"line":68,"column":39}},"37":{"start":{"line":69,"column":8},"end":{"line":69,"column":41}},"38":{"start":{"line":72,"column":8},"end":{"line":107,"column":23}},"39":{"start":{"line":82,"column":24},"end":{"line":82,"column":86}},"40":{"start":{"line":85,"column":24},"end":{"line":85,"column":100}},"41":{"start":{"line":88,"column":24},"end":{"line":88,"column":78}},"42":{"start":{"line":89,"column":24},"end":{"line":89,"column":93}},"43":{"start":{"line":90,"column":24},"end":{"line":94,"column":25}},"44":{"start":{"line":91,"column":28},"end":{"line":91,"column":50}},"45":{"start":{"line":93,"column":28},"end":{"line":93,"column":66}},"46":{"start":{"line":97,"column":24},"end":{"line":97,"column":66}},"47":{"start":{"line":100,"column":24},"end":{"line":100,"column":40}},"48":{"start":{"line":103,"column":24},"end":{"line":103,"column":44}},"49":{"start":{"line":106,"column":24},"end":{"line":106,"column":42}},"50":{"start":{"line":109,"column":8},"end":{"line":109,"column":20}},"51":{"start":{"line":112,"column":0},"end":{"line":112,"column":1}},"52":{"start":{"line":10,"column":13},"end":{"line":10,"column":26}}},"fnMap":{"1":{"name":"(anonymous_90)","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"WeekdayCircle","line":12,"loc":{"start":{"line":12,"column":4},"end":{"line":12,"column":84}}},"3":{"name":"(anonymous_92)","line":34,"loc":{"start":{"line":34,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_93)","line":50,"loc":{"start":{"line":50,"column":28},"end":{"line":50,"column":35}}},"5":{"name":"(anonymous_94)","line":81,"loc":{"start":{"line":81,"column":32},"end":{"line":81,"column":39}}},"6":{"name":"(anonymous_95)","line":84,"loc":{"start":{"line":84,"column":32},"end":{"line":84,"column":39}}},"7":{"name":"(anonymous_96)","line":87,"loc":{"start":{"line":87,"column":31},"end":{"line":87,"column":38}}},"8":{"name":"(anonymous_97)","line":96,"loc":{"start":{"line":96,"column":34},"end":{"line":96,"column":41}}},"9":{"name":"(anonymous_98)","line":99,"loc":{"start":{"line":99,"column":33},"end":{"line":99,"column":40}}},"10":{"name":"(anonymous_99)","line":102,"loc":{"start":{"line":102,"column":37},"end":{"line":102,"column":44}}},"11":{"name":"(anonymous_100)","line":105,"loc":{"start":{"line":105,"column":36},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":37}},{"start":{"line":14,"column":37},"end":{"line":25,"column":4}}]},"2":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":11}},{"start":{"line":61,"column":12},"end":{"line":61,"column":11}}]},"3":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":11}},{"start":{"line":64,"column":12},"end":{"line":64,"column":11}}]},"4":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":24},"end":{"line":90,"column":23}},{"start":{"line":90,"column":24},"end":{"line":90,"column":23}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":9,"6":8,"7":8,"8":8,"9":8,"10":8,"11":8,"12":8,"13":8,"14":1,"15":43,"16":43,"17":43,"18":43,"19":43,"20":43,"21":43,"22":43,"23":43,"24":43,"25":43,"26":2395,"27":43,"28":43,"29":43,"30":43,"31":2395,"32":2395,"33":168,"34":2395,"35":128,"36":43,"37":43,"38":43,"39":2395,"40":2395,"41":2395,"42":2395,"43":2395,"44":20,"45":2375,"46":2395,"47":0,"48":0,"49":0,"50":43,"51":1,"52":1},"b":{"1":[8,0],"2":[168,2227],"3":[128,2267],"4":[20,2375]},"f":{"1":1,"2":8,"3":43,"4":2395,"5":2395,"6":2395,"7":2395,"8":2395,"9":0,"10":0,"11":0},"code":"\nimport * as CrossFilter from 'crossfilter';\n\nimport {ColorMap} from './colormap';\nimport {WeekdayRect} from './WeekdayRect';\n\n/**\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\n */\nexport class WeekdayCircle extends WeekdayRect {\n\n    constructor(cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\n\n        super(cf, domElemId, datekey);\n        // ...but reset these properties\n        this.domElem.classList.remove('punchcard-weekday-rect');\n        this.canDraw = false;\n\n        this.xlabel = 'Day of week';\n        this.title = 'WeekdayCircle title';\n        this.colormap = new ColorMap('blues');\n        super.defineDimensions();\n        this.domElem.classList.add('punchcard-weekday-circle');\n        this.update();\n    }\n\n    /**\n     * This method adds an SVG g element containing many SVG circle elements,\n     * i.e. the 'symbols', to the DOM. Each symbol represents the count of how\n     * many rows from the data fall on a given day/time-of-day combination.\n     * @return {WeekdayCircle} Returns a reference to the instance of\n     * WeekdayCircle\n     */\n    protected drawSymbols(): WeekdayCircle {\n\n        const w: number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        const h: number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        const dx: number = this.marginLeft;\n        const dy: number = this.marginTop + h;\n        const symbolMargin = {left: 2, right: 2, top: 2, bottom: 2}; // pixels\n        const symbolWidth: number = w / 7 - symbolMargin.left - symbolMargin.right;\n        const symbolHeight: number = h / 24 - symbolMargin.top - symbolMargin.bottom;\n\n        const r: number = Math.min(symbolWidth, symbolHeight) / 2 - 2;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        const group = this.dim.weekdayAndHourOfDay.group();\n        group.all().forEach((d: any) => {\n            // parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        const data: any = group.all();\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (const elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n        // draw the circles\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('circle.symbol')\n                .data(data)\n                .enter()\n                .append('circle')\n                    .attr('class', 'symbol')\n                    .attr('cx', (d: any) => {\n                        return this.dayOfWeekScale(d.key.weekday) + symbolMargin.left;\n                    })\n                    .attr('cy', (d: any) => {\n                        return this.todScale(d.key.hourOfDay) + symbolHeight / 2 + symbolMargin.top;\n                    })\n                    .attr('r', (d: any) => {\n                        const numer: number = d.value - this.colormap.cLimLow;\n                        const denom: number = this.colormap.cLimHigh - this.colormap.cLimLow;\n                        if (denom === 0) {\n                            return Math.max(r, 1);\n                        } else {\n                            return Math.max(r * numer / denom, 1);\n                        }\n                    })\n                    .attr('fill', (d: any) => {\n                        return this.colormap.getColorRGB(d.value);\n                    })\n                    .on('click', (d: any) => {\n                        this.onClick(d);\n                    })\n                    .on('mouseover', (d: any) => {\n                        this.onMouseOver(d);\n                    })\n                    .on('mouseout', () => {\n                        this.onMouseOut();\n                    });\n\n        return this;\n    }\n\n}\n","l":{"4":1,"5":1,"10":1,"12":9,"16":8,"17":8,"19":8,"20":8,"21":8,"22":8,"23":8,"24":8,"34":43,"36":43,"37":43,"38":43,"39":43,"40":43,"41":43,"42":43,"44":43,"49":43,"50":43,"52":2395,"54":43,"58":43,"59":43,"60":2395,"61":2395,"62":168,"64":2395,"65":128,"68":43,"69":43,"72":43,"82":2395,"85":2395,"88":2395,"89":2395,"90":2395,"91":20,"93":2375,"97":2395,"100":0,"103":0,"106":0,"109":43,"112":1}},
"src/WeekdayRect.ts":{"path":"src/WeekdayRect.ts","statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"5":{"start":{"line":12,"column":0},"end":{"line":240,"column":1}},"6":{"start":{"line":12,"column":33},"end":{"line":12,"column":37}},"7":{"start":{"line":28,"column":4},"end":{"line":40,"column":5}},"8":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"9":{"start":{"line":33,"column":8},"end":{"line":33,"column":36}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":41}},"11":{"start":{"line":35,"column":8},"end":{"line":35,"column":47}},"12":{"start":{"line":36,"column":8},"end":{"line":36,"column":32}},"13":{"start":{"line":37,"column":8},"end":{"line":37,"column":61}},"14":{"start":{"line":38,"column":8},"end":{"line":38,"column":22}},"15":{"start":{"line":46,"column":14},"end":{"line":67,"column":5}},"16":{"start":{"line":46,"column":4},"end":{"line":67,"column":5}},"17":{"start":{"line":51,"column":8},"end":{"line":63,"column":11}},"18":{"start":{"line":53,"column":12},"end":{"line":53,"column":33}},"19":{"start":{"line":54,"column":12},"end":{"line":62,"column":13}},"20":{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},"21":{"start":{"line":56,"column":16},"end":{"line":56,"column":36}},"22":{"start":{"line":57,"column":16},"end":{"line":57,"column":46}},"23":{"start":{"line":58,"column":16},"end":{"line":58,"column":41}},"24":{"start":{"line":59,"column":16},"end":{"line":59,"column":43}},"25":{"start":{"line":61,"column":16},"end":{"line":61,"column":53}},"26":{"start":{"line":64,"column":8},"end":{"line":64,"column":28}},"27":{"start":{"line":66,"column":8},"end":{"line":66,"column":20}},"28":{"start":{"line":84,"column":14},"end":{"line":108,"column":5}},"29":{"start":{"line":86,"column":8},"end":{"line":107,"column":9}},"30":{"start":{"line":88,"column":12},"end":{"line":88,"column":24}},"31":{"start":{"line":91,"column":12},"end":{"line":104,"column":13}},"32":{"start":{"line":93,"column":16},"end":{"line":93,"column":32}},"33":{"start":{"line":94,"column":16},"end":{"line":94,"column":38}},"34":{"start":{"line":95,"column":16},"end":{"line":95,"column":42}},"35":{"start":{"line":96,"column":16},"end":{"line":96,"column":48}},"36":{"start":{"line":97,"column":16},"end":{"line":97,"column":41}},"37":{"start":{"line":98,"column":16},"end":{"line":98,"column":46}},"38":{"start":{"line":99,"column":16},"end":{"line":99,"column":34}},"39":{"start":{"line":100,"column":16},"end":{"line":100,"column":35}},"40":{"start":{"line":101,"column":16},"end":{"line":101,"column":32}},"41":{"start":{"line":102,"column":16},"end":{"line":102,"column":35}},"42":{"start":{"line":103,"column":16},"end":{"line":103,"column":35}},"43":{"start":{"line":106,"column":12},"end":{"line":106,"column":24}},"44":{"start":{"line":117,"column":14},"end":{"line":184,"column":5}},"45":{"start":{"line":117,"column":4},"end":{"line":184,"column":5}},"46":{"start":{"line":119,"column":8},"end":{"line":119,"column":107}},"47":{"start":{"line":120,"column":8},"end":{"line":120,"column":89}},"48":{"start":{"line":121,"column":8},"end":{"line":121,"column":43}},"49":{"start":{"line":122,"column":8},"end":{"line":122,"column":46}},"50":{"start":{"line":123,"column":8},"end":{"line":123,"column":68}},"51":{"start":{"line":124,"column":8},"end":{"line":124,"column":83}},"52":{"start":{"line":125,"column":8},"end":{"line":125,"column":85}},"53":{"start":{"line":130,"column":8},"end":{"line":130,"column":59}},"54":{"start":{"line":131,"column":8},"end":{"line":134,"column":11}},"55":{"start":{"line":133,"column":12},"end":{"line":133,"column":38}},"56":{"start":{"line":135,"column":8},"end":{"line":135,"column":38}},"57":{"start":{"line":139,"column":8},"end":{"line":139,"column":46}},"58":{"start":{"line":140,"column":8},"end":{"line":140,"column":47}},"59":{"start":{"line":141,"column":8},"end":{"line":148,"column":9}},"60":{"start":{"line":141,"column":13},"end":{"line":141,"column":23}},"61":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"62":{"start":{"line":143,"column":16},"end":{"line":143,"column":36}},"63":{"start":{"line":145,"column":12},"end":{"line":147,"column":13}},"64":{"start":{"line":146,"column":16},"end":{"line":146,"column":37}},"65":{"start":{"line":149,"column":8},"end":{"line":149,"column":39}},"66":{"start":{"line":150,"column":8},"end":{"line":150,"column":41}},"67":{"start":{"line":153,"column":8},"end":{"line":181,"column":23}},"68":{"start":{"line":163,"column":24},"end":{"line":163,"column":84}},"69":{"start":{"line":166,"column":24},"end":{"line":166,"column":62}},"70":{"start":{"line":171,"column":24},"end":{"line":171,"column":66}},"71":{"start":{"line":174,"column":24},"end":{"line":174,"column":40}},"72":{"start":{"line":177,"column":24},"end":{"line":177,"column":44}},"73":{"start":{"line":180,"column":24},"end":{"line":180,"column":42}},"74":{"start":{"line":183,"column":8},"end":{"line":183,"column":20}},"75":{"start":{"line":189,"column":14},"end":{"line":196,"column":5}},"76":{"start":{"line":191,"column":8},"end":{"line":193,"column":33}},"77":{"start":{"line":194,"column":8},"end":{"line":194,"column":61}},"78":{"start":{"line":195,"column":8},"end":{"line":195,"column":20}},"79":{"start":{"line":198,"column":14},"end":{"line":201,"column":5}},"80":{"start":{"line":199,"column":8},"end":{"line":199,"column":60}},"81":{"start":{"line":200,"column":8},"end":{"line":200,"column":20}},"82":{"start":{"line":208,"column":12},"end":{"line":238,"column":5}},"83":{"start":{"line":210,"column":8},"end":{"line":210,"column":107}},"84":{"start":{"line":211,"column":8},"end":{"line":211,"column":43}},"85":{"start":{"line":212,"column":8},"end":{"line":212,"column":73}},"86":{"start":{"line":214,"column":8},"end":{"line":214,"column":35}},"87":{"start":{"line":215,"column":8},"end":{"line":215,"column":34}},"88":{"start":{"line":216,"column":8},"end":{"line":218,"column":9}},"89":{"start":{"line":216,"column":13},"end":{"line":216,"column":20}},"90":{"start":{"line":217,"column":12},"end":{"line":217,"column":38}},"91":{"start":{"line":220,"column":8},"end":{"line":222,"column":79}},"92":{"start":{"line":224,"column":8},"end":{"line":229,"column":30}},"93":{"start":{"line":231,"column":8},"end":{"line":234,"column":25}},"94":{"start":{"line":236,"column":8},"end":{"line":236,"column":20}},"95":{"start":{"line":240,"column":0},"end":{"line":240,"column":1}},"96":{"start":{"line":12,"column":13},"end":{"line":12,"column":24}}},"fnMap":{"1":{"name":"(anonymous_108)","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"WeekdayRect","line":28,"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":84}}},"3":{"name":"(anonymous_110)","line":46,"loc":{"start":{"line":46,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_111)","line":51,"loc":{"start":{"line":51,"column":57},"end":{"line":51,"column":64}}},"5":{"name":"(anonymous_112)","line":84,"loc":{"start":{"line":84,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_113)","line":117,"loc":{"start":{"line":117,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_114)","line":131,"loc":{"start":{"line":131,"column":28},"end":{"line":131,"column":35}}},"8":{"name":"(anonymous_115)","line":162,"loc":{"start":{"line":162,"column":31},"end":{"line":162,"column":38}}},"9":{"name":"(anonymous_116)","line":165,"loc":{"start":{"line":165,"column":31},"end":{"line":165,"column":38}}},"10":{"name":"(anonymous_117)","line":170,"loc":{"start":{"line":170,"column":34},"end":{"line":170,"column":41}}},"11":{"name":"(anonymous_118)","line":173,"loc":{"start":{"line":173,"column":33},"end":{"line":173,"column":40}}},"12":{"name":"(anonymous_119)","line":176,"loc":{"start":{"line":176,"column":37},"end":{"line":176,"column":44}}},"13":{"name":"(anonymous_120)","line":179,"loc":{"start":{"line":179,"column":36},"end":{"line":null,"column":-1}}},"14":{"name":"(anonymous_121)","line":189,"loc":{"start":{"line":189,"column":4},"end":{"line":189,"column":32}}},"15":{"name":"(anonymous_122)","line":198,"loc":{"start":{"line":198,"column":4},"end":{"line":null,"column":-1}}},"16":{"name":"(anonymous_123)","line":208,"loc":{"start":{"line":208,"column":4},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":25},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":25},"end":{"line":null,"column":-1}}]},"2":{"line":4,"type":"cond-expr","locations":[{"start":{"line":4,"column":33},"end":{"line":null,"column":-1}},{"start":{"line":4,"column":33},"end":{"line":null,"column":-1}}]},"3":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":37}},{"start":{"line":30,"column":37},"end":{"line":40,"column":4}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":11}},{"start":{"line":54,"column":12},"end":{"line":54,"column":11}}]},"5":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":7}},{"start":{"line":86,"column":8},"end":{"line":86,"column":7}}]},"6":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":91,"column":11}},{"start":{"line":91,"column":12},"end":{"line":91,"column":11}}]},"7":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":142,"column":11}},{"start":{"line":142,"column":12},"end":{"line":142,"column":11}}]},"8":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":12},"end":{"line":145,"column":11}},{"start":{"line":145,"column":12},"end":{"line":145,"column":11}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":16,"8":15,"9":15,"10":15,"11":15,"12":15,"13":15,"14":15,"15":1,"16":23,"17":23,"18":50019,"19":50019,"20":50019,"21":50019,"22":50019,"23":50019,"24":50019,"25":0,"26":23,"27":23,"28":1,"29":54,"30":0,"31":54,"32":54,"33":54,"34":54,"35":54,"36":54,"37":54,"38":54,"39":54,"40":54,"41":54,"42":54,"43":54,"44":1,"45":23,"46":23,"47":23,"48":23,"49":23,"50":23,"51":23,"52":23,"53":23,"54":23,"55":1958,"56":23,"57":23,"58":23,"59":23,"60":1958,"61":1958,"62":124,"63":1958,"64":93,"65":23,"66":23,"67":23,"68":1958,"69":1958,"70":1958,"71":0,"72":0,"73":0,"74":23,"75":1,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":1,"83":67,"84":67,"85":67,"86":67,"87":67,"88":67,"89":603,"90":603,"91":67,"92":67,"93":67,"94":67,"95":1,"96":1},"b":{"1":[1,0],"2":[1,0],"3":[15,15],"4":[50019,0],"5":[0,54],"6":[54,0],"7":[124,1834],"8":[93,1865]},"f":{"1":1,"2":15,"3":23,"4":50019,"5":54,"6":23,"7":1958,"8":1958,"9":1958,"10":1958,"11":0,"12":0,"13":0,"14":0,"15":0,"16":67},"code":"\nimport * as CrossFilter from 'crossfilter';\nimport * as d3 from 'd3';\nimport * as moment from 'moment';\n\nimport {Base} from './Base';\nimport {ColorMap} from './colormap';\n\n/**\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\n */\nexport class WeekdayRect extends Base {\n\n    protected dayOfWeekScale: d3.scale.Ordinal<any, any>;\n    protected xFrom: number;\n    protected xTo: number;\n\n    /**\n     * Constructor method for making a punchcard visualization with the day of\n     * week on the horizontal axis, and hour of day on the vertical axis, using\n     * rectangular symbols to represent how many rows from the input data fall\n     * within the area covered by each rectangle.\n     * @param  {CrossFilter.CrossFilter<any>} cf Crossfilter object\n     * containing the data.\n     * @param  {string} domElemId Name of the DOM element in which to draw.\n     * @return {[type]} A reference to the instance of WeekdayRect.\n     */\n    constructor(cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\n\n        super(cf, domElemId, datekey);\n\n        this.marginBottom = 50;\n        this.xlabel = 'Day of week';\n        this.title = 'WeekdayRect title';\n        this.colormap = new ColorMap('summer');\n        this.defineDimensions();\n        this.domElem.classList.add('punchcard-weekday-rect');\n        this.update();\n\n    }\n\n    /**\n     * define the crossfilter dimensions as used by this class\n     * @return {WeekdayRect} A reference to the instance of WeekdayRect\n     */\n    protected defineDimensions(): WeekdayRect {\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n\n        this.dim.weekdayAndHourOfDay = this.cf.dimension((d: any) => {\n            // stringify() and later, parse() to get keyed objects\n            let m: moment.Moment;\n            if (d.hasOwnProperty(this.datekey)) {\n                m = moment(d[this.datekey]);\n                const obj: any = {};\n                obj.weekday = m.format('ddd');\n                obj.hourOfDay = m.hour();\n                return JSON.stringify(obj);\n            } else {\n                throw new Error('datekey undefined');\n            }\n        });\n        this.canDraw = true;\n\n        return this;\n    }\n\n    /**\n     * This method defines which other methods to call in order to create\n     * a punchcard graph with the day of week on the horizontal axis and the\n     * time of day on the vertical axis. Mostly calls methods of the parent\n     * class, Base, but for example the symbols for this class are SVG rects,\n     * so it calls its own method .drawSymbols() for that.\n     *\n     * Successful drawing depends on whether the container is currently visible,\n     * and whether there is enough information in the instance to draw anything\n     * at all.\n     *\n     * This method overrides stub method in parent class.\n     *\n     * @return {WeekdayRect} A reference to an instance of WeekdayRect.\n     */\n    protected draw(): WeekdayRect {\n\n        if (this.domElem.classList.contains('hidden')) {\n            // div is hidden\n            return this;\n        } else {\n            // div is visible\n            if (this.canDraw) {\n                // dimensions have been defined\n                super.drawSvg();\n                super.drawChartBody();\n                this.drawHorizontalAxis();\n                super.drawHorizontalAxisLabel();\n                super.drawVerticalAxis();\n                super.drawVerticalAxisLabel();\n                super.drawTitle();\n                this.drawSymbols();\n                super.drawBox();\n                super.drawLegend();\n                super.drawFooter();\n            }\n\n            return this;\n        }\n    }\n\n    /**\n     * This method adds an SVG g element with many SVG rects in it. Each rect\n     * represents the count of how many data rows fall within the area covered\n     * by the rect, where the horizontal boundaries dictate the day-of-week and\n     * the vertical boundaries dictate the time of day range.\n     * @return {WeekdayRect} A reference to the instance of WeekdayRect.\n     */\n    protected drawSymbols(): WeekdayRect {\n\n        const w: number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        const h: number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        const dx: number = this.marginLeft;\n        const dy: number = this.marginTop + h;\n        const symbolMargin = {left: 0, right: 0, top: 0, bottom: 0}; // pixels\n        const symbolWidth: number = w / 7 - symbolMargin.left - symbolMargin.right;\n        const symbolHeight: number = h / 24 - symbolMargin.top - symbolMargin.bottom;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        const group = this.dim.weekdayAndHourOfDay.group();\n        group.all().forEach((d: any) => {\n            // parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        const data: any = group.all();\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (const elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n        // draw the rects\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('rect.symbol')\n                .data(data)\n                .enter()\n                .append('rect')\n                    .attr('class', 'symbol')\n                    .attr('x', (d: any) => {\n                        return this.dayOfWeekScale(d.key.weekday) - symbolWidth / 2;\n                    })\n                    .attr('y', (d: any) => {\n                        return this.todScale(d.key.hourOfDay);\n                    })\n                    .attr('width', symbolWidth)\n                    .attr('height', symbolHeight)\n                    .attr('fill', (d: any) => {\n                        return this.colormap.getColorRGB(d.value);\n                    })\n                    .on('click', (d: any) => {\n                        this.onClick(d);\n                    })\n                    .on('mouseover', (d: any) => {\n                        this.onMouseOver(d);\n                    })\n                    .on('mouseout', () => {\n                        this.onMouseOut();\n                    });\n\n        return this;\n    }\n\n    /*\n     * overrides method from Base\n     */\n    protected onMouseOver(d: any): WeekdayRect {\n\n        const str: string = 'x:' + d.key.weekday +\n            ', y:' + d.key.hourOfDay +\n            ', count:' + d.value;\n        this.svg.select('g.footer').select('text').text(str);\n        return this;\n    }\n\n    protected onMouseOut(): WeekdayRect {\n        this.svg.select('g.footer').select('text').text('');\n        return this;\n    }\n\n    /**\n     * Adds an SVG g element containing a d3.scale.ordinal for plotting\n     * the day of the week on the horizontal axis of the punchcard graph.\n     * @return {WeekdayRect} A reference to the instance of WeekdayRect.\n     */\n    private drawHorizontalAxis(): WeekdayRect {\n\n        const w: number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        const dx: number = this.marginLeft;\n        const dy: number = this.domElem.clientHeight - this.marginBottom;\n\n        const range: number[] = [];\n        const ndays: number = 7.0;\n        for (const r of [0, 0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.0]) {\n            range.push(w * r / ndays);\n        }\n\n        this.dayOfWeekScale = d3.scale.ordinal()\n            .range(range)\n            .domain(['', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun', '']);\n\n        const xAxis = d3.svg.axis()\n            .orient('bottom')\n            .scale(this.dayOfWeekScale)\n            .tickValues(['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'])\n            .innerTickSize(5)\n            .outerTickSize(0);\n\n        this.svg.append('g')\n            .attr('class', 'horizontal-axis')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(xAxis);\n\n        return this;\n\n    }\n\n}\n","l":{"3":1,"4":1,"6":1,"7":1,"12":1,"28":16,"32":15,"33":15,"34":15,"35":15,"36":15,"37":15,"38":15,"46":23,"51":23,"53":50019,"54":50019,"55":50019,"56":50019,"57":50019,"58":50019,"59":50019,"61":0,"64":23,"66":23,"84":1,"86":54,"88":0,"91":54,"93":54,"94":54,"95":54,"96":54,"97":54,"98":54,"99":54,"100":54,"101":54,"102":54,"103":54,"106":54,"117":23,"119":23,"120":23,"121":23,"122":23,"123":23,"124":23,"125":23,"130":23,"131":23,"133":1958,"135":23,"139":23,"140":23,"141":1958,"142":1958,"143":124,"145":1958,"146":93,"149":23,"150":23,"153":23,"163":1958,"166":1958,"171":1958,"174":0,"177":0,"180":0,"183":23,"189":1,"191":0,"194":0,"195":0,"198":1,"199":0,"200":0,"208":1,"210":67,"211":67,"212":67,"214":67,"215":67,"216":603,"217":603,"220":67,"224":67,"231":67,"236":67,"240":1}},
"src/colormap.ts":{"path":"src/colormap.ts","statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":null,"column":-1}},"2":{"start":{"line":67,"column":4},"end":{"line":103,"column":5}},"3":{"start":{"line":69,"column":8},"end":{"line":69,"column":24}},"4":{"start":{"line":70,"column":8},"end":{"line":70,"column":27}},"5":{"start":{"line":72,"column":8},"end":{"line":92,"column":9}},"6":{"start":{"line":74,"column":12},"end":{"line":74,"column":28}},"7":{"start":{"line":75,"column":12},"end":{"line":75,"column":47}},"8":{"start":{"line":77,"column":15},"end":{"line":92,"column":9}},"9":{"start":{"line":79,"column":12},"end":{"line":79,"column":28}},"10":{"start":{"line":80,"column":12},"end":{"line":80,"column":54}},"11":{"start":{"line":82,"column":15},"end":{"line":92,"column":9}},"12":{"start":{"line":84,"column":12},"end":{"line":84,"column":28}},"13":{"start":{"line":85,"column":12},"end":{"line":89,"column":13}},"14":{"start":{"line":86,"column":16},"end":{"line":86,"column":46}},"15":{"start":{"line":88,"column":16},"end":{"line":88,"column":66}},"16":{"start":{"line":91,"column":12},"end":{"line":91,"column":77}},"17":{"start":{"line":96,"column":8},"end":{"line":96,"column":48}},"18":{"start":{"line":99,"column":8},"end":{"line":99,"column":47}},"19":{"start":{"line":100,"column":8},"end":{"line":100,"column":45}},"20":{"start":{"line":101,"column":8},"end":{"line":101,"column":56}},"21":{"start":{"line":113,"column":11},"end":{"line":153,"column":5}},"22":{"start":{"line":117,"column":8},"end":{"line":120,"column":9}},"23":{"start":{"line":118,"column":12},"end":{"line":118,"column":32}},"24":{"start":{"line":119,"column":12},"end":{"line":119,"column":33}},"25":{"start":{"line":122,"column":8},"end":{"line":122,"column":77}},"26":{"start":{"line":123,"column":8},"end":{"line":123,"column":47}},"27":{"start":{"line":125,"column":8},"end":{"line":125,"column":34}},"28":{"start":{"line":126,"column":8},"end":{"line":126,"column":34}},"29":{"start":{"line":128,"column":8},"end":{"line":136,"column":9}},"30":{"start":{"line":129,"column":12},"end":{"line":129,"column":64}},"31":{"start":{"line":130,"column":12},"end":{"line":130,"column":67}},"32":{"start":{"line":131,"column":12},"end":{"line":135,"column":13}},"33":{"start":{"line":132,"column":16},"end":{"line":132,"column":47}},"34":{"start":{"line":133,"column":16},"end":{"line":133,"column":51}},"35":{"start":{"line":134,"column":16},"end":{"line":134,"column":22}},"36":{"start":{"line":138,"column":8},"end":{"line":138,"column":77}},"37":{"start":{"line":139,"column":8},"end":{"line":144,"column":10}},"38":{"start":{"line":146,"column":8},"end":{"line":150,"column":9}},"39":{"start":{"line":146,"column":13},"end":{"line":146,"column":26}},"40":{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},"41":{"start":{"line":148,"column":16},"end":{"line":148,"column":67}},"42":{"start":{"line":152,"column":8},"end":{"line":152,"column":24}},"43":{"start":{"line":161,"column":11},"end":{"line":166,"column":5}},"44":{"start":{"line":163,"column":8},"end":{"line":163,"column":44}},"45":{"start":{"line":164,"column":8},"end":{"line":164,"column":34}},"46":{"start":{"line":165,"column":8},"end":{"line":165,"column":73}},"47":{"start":{"line":173,"column":11},"end":{"line":179,"column":5}},"48":{"start":{"line":175,"column":8},"end":{"line":175,"column":36}},"49":{"start":{"line":176,"column":8},"end":{"line":176,"column":61}},"50":{"start":{"line":178,"column":8},"end":{"line":178,"column":20}},"51":{"start":{"line":186,"column":11},"end":{"line":194,"column":5}},"52":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"53":{"start":{"line":188,"column":13},"end":{"line":188,"column":23}},"54":{"start":{"line":189,"column":12},"end":{"line":189,"column":39}},"55":{"start":{"line":191,"column":8},"end":{"line":191,"column":61}},"56":{"start":{"line":193,"column":8},"end":{"line":193,"column":20}},"57":{"start":{"line":202,"column":14},"end":{"line":364,"column":5}},"58":{"start":{"line":204,"column":8},"end":{"line":204,"column":35}},"59":{"start":{"line":206,"column":8},"end":{"line":360,"column":9}},"60":{"start":{"line":208,"column":16},"end":{"line":208,"column":56}},"61":{"start":{"line":209,"column":16},"end":{"line":209,"column":22}},"62":{"start":{"line":212,"column":16},"end":{"line":229,"column":18}},"63":{"start":{"line":230,"column":16},"end":{"line":230,"column":22}},"64":{"start":{"line":233,"column":16},"end":{"line":242,"column":18}},"65":{"start":{"line":243,"column":16},"end":{"line":243,"column":22}},"66":{"start":{"line":246,"column":16},"end":{"line":263,"column":18}},"67":{"start":{"line":264,"column":16},"end":{"line":264,"column":22}},"68":{"start":{"line":267,"column":16},"end":{"line":284,"column":18}},"69":{"start":{"line":285,"column":16},"end":{"line":285,"column":22}},"70":{"start":{"line":288,"column":16},"end":{"line":305,"column":18}},"71":{"start":{"line":306,"column":16},"end":{"line":306,"column":22}},"72":{"start":{"line":309,"column":16},"end":{"line":354,"column":18}},"73":{"start":{"line":355,"column":16},"end":{"line":355,"column":22}},"74":{"start":{"line":358,"column":16},"end":{"line":358,"column":80}},"75":{"start":{"line":362,"column":8},"end":{"line":362,"column":26}},"76":{"start":{"line":378,"column":12},"end":{"line":387,"column":5}},"77":{"start":{"line":380,"column":8},"end":{"line":386,"column":9}},"78":{"start":{"line":381,"column":12},"end":{"line":381,"column":22}},"79":{"start":{"line":382,"column":15},"end":{"line":386,"column":9}},"80":{"start":{"line":383,"column":12},"end":{"line":383,"column":21}},"81":{"start":{"line":385,"column":12},"end":{"line":385,"column":21}},"82":{"start":{"line":389,"column":0},"end":{"line":389,"column":1}},"83":{"start":{"line":27,"column":11},"end":{"line":44,"column":6}},"84":{"start":{"line":21,"column":13},"end":{"line":21,"column":21}}},"fnMap":{"1":{"name":"(anonymous_125)","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"ColorMap","line":67,"loc":{"start":{"line":67,"column":4},"end":{"line":67,"column":46}}},"3":{"name":"(anonymous_127)","line":113,"loc":{"start":{"line":113,"column":4},"end":{"line":113,"column":30}}},"4":{"name":"(anonymous_128)","line":161,"loc":{"start":{"line":161,"column":4},"end":{"line":161,"column":33}}},"5":{"name":"(anonymous_129)","line":173,"loc":{"start":{"line":173,"column":4},"end":{"line":173,"column":42}}},"6":{"name":"(anonymous_130)","line":186,"loc":{"start":{"line":186,"column":4},"end":{"line":186,"column":39}}},"7":{"name":"(anonymous_131)","line":202,"loc":{"start":{"line":202,"column":4},"end":{"line":202,"column":45}}},"8":{"name":"(anonymous_132)","line":378,"loc":{"start":{"line":378,"column":4},"end":{"line":378,"column":58}}}},"branchMap":{"1":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":7}},{"start":{"line":72,"column":8},"end":{"line":72,"column":7}}]},"2":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":15},"end":{"line":77,"column":14}},{"start":{"line":77,"column":15},"end":{"line":77,"column":14}}]},"3":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":15},"end":{"line":82,"column":14}},{"start":{"line":82,"column":15},"end":{"line":82,"column":14}}]},"4":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":8},"end":{"line":117,"column":7}},{"start":{"line":117,"column":8},"end":{"line":117,"column":7}}]},"5":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":12},"end":{"line":131,"column":11}},{"start":{"line":131,"column":12},"end":{"line":131,"column":11}}]},"6":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":16},"end":{"line":131,"column":21}},{"start":{"line":131,"column":25},"end":{"line":131,"column":30}}]},"7":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":147,"column":11}},{"start":{"line":147,"column":12},"end":{"line":147,"column":11}}]},"8":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":16},"end":{"line":147,"column":27}},{"start":{"line":147,"column":31},"end":{"line":147,"column":44}}]},"9":{"line":207,"type":"switch","locations":[{"start":{"line":207,"column":12},"end":{"line":210,"column":13}},{"start":{"line":211,"column":12},"end":{"line":231,"column":13}},{"start":{"line":232,"column":12},"end":{"line":244,"column":13}},{"start":{"line":245,"column":12},"end":{"line":265,"column":13}},{"start":{"line":266,"column":12},"end":{"line":286,"column":13}},{"start":{"line":287,"column":12},"end":{"line":307,"column":13}},{"start":{"line":308,"column":12},"end":{"line":356,"column":13}},{"start":{"line":357,"column":12},"end":{"line":359,"column":13}}]},"10":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":8},"end":{"line":380,"column":7}},{"start":{"line":380,"column":8},"end":{"line":380,"column":7}}]},"11":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":15},"end":{"line":382,"column":14}},{"start":{"line":382,"column":15},"end":{"line":382,"column":14}}]}},"s":{"1":1,"2":1,"3":101,"4":101,"5":101,"6":47,"7":47,"8":54,"9":52,"10":52,"11":2,"12":1,"13":1,"14":1,"15":0,"16":1,"17":100,"18":100,"19":100,"20":100,"21":1,"22":26080,"23":62,"24":62,"25":26080,"26":26080,"27":26080,"28":26080,"29":26080,"30":78142,"31":78142,"32":78142,"33":26080,"34":26080,"35":26080,"36":26080,"37":26080,"38":26080,"39":104320,"40":104320,"41":0,"42":26080,"43":1,"44":26080,"45":26080,"46":26080,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":2,"54":2,"55":1,"56":1,"57":1,"58":99,"59":99,"60":64,"61":64,"62":3,"63":3,"64":1,"65":1,"66":0,"67":0,"68":8,"69":8,"70":15,"71":15,"72":8,"73":8,"74":0,"75":99,"76":1,"77":700,"78":3,"79":697,"80":697,"81":0,"82":1,"83":1,"84":1},"b":{"1":[47,54],"2":[52,2],"3":[1,1],"4":[62,26018],"5":[26080,52062],"6":[78142,78142],"7":[0,104320],"8":[104320,104320],"9":[64,3,1,0,8,15,8,0],"10":[3,697],"11":[697,0]},"f":{"1":1,"2":101,"3":26080,"4":26080,"5":1,"6":1,"7":99,"8":700},"code":"\n/**\n * Associates a point in the domain space to a color\n * @type {Object}\n */\nexport interface IColorTableItem {\n    at: number;\n    color: [number, number, number];\n}\n\n/**\n * An array of IColorTableItems\n * @type {[type]}\n */\nexport type ColorTable = IColorTableItem[];\n\n/**\n * ColorMap helps you associate values from the domain to rgba color values,\n * where each channel is in the range [0,255]\n */\nexport class ColorMap {\n    /**\n     * if the user does not specify which ColorMap she wants to use,\n     * defaultColorTable is what she'll get.\n     * @type {ColorTable}\n     */\n    static defaultColorTable: ColorTable = [\n        {\n            at: Number.NEGATIVE_INFINITY,\n            color: [255, 255, 255, 255]\n        },\n        {\n            at: 0.0,\n            color: [8, 106, 227, 0]\n        },\n        {\n            at: 1.0,\n            color: [227, 8, 88, 0]\n        },\n        {\n            at: Number.POSITIVE_INFINITY,\n            color: [255, 255, 255, 255]\n        }\n    ];\n    /**\n     * Array of IColorTableItems, where each IColorTableItem associates a point\n     * along the domain's number line to an rgba color.\n     * @type {ColorTable}\n     */\n    public colortable: ColorTable;\n    /**\n     * Domain value assocatiated with the lowest color from the ColorMap.\n     * @type {number}\n     */\n    public cLimLow: number;\n    /**\n     * Domain value assocatiated with the highest color from the ColorMap.\n     * @type {number}\n     */\n    public cLimHigh: number;\n\n    /**\n     * [constructor description]\n     * @param  {ColorTable|string} colortable [description]\n     * @return {[type]}                       [description]\n     */\n    constructor(colortable?: ColorTable|string) {\n\n        let str: string;\n        let ct: ColorTable;\n\n        if (colortable === undefined) {\n\n            str = 'default';\n            ct = this.expandColorTableStr(str);\n\n        } else if (typeof colortable === 'string') {\n\n            str = undefined;\n            ct = this.expandColorTableStr(colortable);\n\n        } else if (typeof colortable === 'object') {\n\n            str = undefined;\n            try {\n                ct = colortable as ColorTable;\n            } catch (Error) {\n                throw new Error('Can\\'t cast to ColorTable type');\n            }\n        } else {\n            throw new Error('Undefined behavior for these input arguments.');\n        }\n\n        // use my own compare function to sort the array based on the value of\n        // each element's 'at' property:\n        this.colortable = ct.sort(this.compare);\n\n        // adjust the color limits\n        const nColors = this.colortable.length;\n        this.cLimLow = this.colortable[1].at;\n        this.cLimHigh = this.colortable[nColors - 2].at;\n\n    }\n    /**\n     * Returns an rgba color array based on the current colormap (including the\n     * domain values at the upper and lower boundaries of the ColorMap) and an\n     * input domain value. The color values are determined by linear\n     * interpolation between the known color values, as defined by the ColorMap.\n     * @param  {number} at Value for which you want to know the associated color\n     * @return {[type]} 4-D vector containing rgba value of the color, with 0\n     * represetning zero intensity and 255 full intensity.\n     */\n    public getColor(at: number): [number, number, number, number] {\n\n        // if there is only one value in the range, lower the lower limit and\n        // raise the upper limit\n        if (this.cLimLow === this.cLimHigh) {\n            this.cLimLow -= 0.5;\n            this.cLimHigh += 0.5;\n        }\n\n        const atUnity = (at - this.cLimLow) / (this.cLimHigh - this.cLimLow);\n        const nColors = this.colortable.length;\n\n        let prev: IColorTableItem;\n        let next: IColorTableItem;\n\n        for (let iColor = 0; iColor < nColors; iColor += 1) {\n            const cond1 = this.colortable[iColor].at <= atUnity;\n            const cond2 = atUnity < this.colortable[iColor + 1].at;\n            if (cond1 && cond2) {\n                prev = this.colortable[iColor];\n                next = this.colortable[iColor + 1];\n                break;\n            }\n        }\n\n        const atRelative: number = (atUnity - prev.at) / (next.at - prev.at);\n        const theColor: [number, number, number, number] = [\n            Math.floor(prev.color[0] + (next.color[0] - prev.color[0]) * atRelative),\n            Math.floor(prev.color[1] + (next.color[1] - prev.color[1]) * atRelative),\n            Math.floor(prev.color[2] + (next.color[2] - prev.color[2]) * atRelative),\n            255\n        ];\n\n        for (const channel of theColor) {\n            if (channel < 0 || channel > 255) {\n                throw new Error('Calculated color out of bounds.');\n            }\n        }\n\n        return theColor;\n    }\n\n    /**\n     * CSS string representation of the result returned by ColorMap.getColor().\n     * Note that the string does not include a transparency value.\n     * @param  {number} at Value for which you want to know the associated color.\n     * @return {string} CSS string representing the rgb color.\n     */\n    public getColorRGB(at: number): string {\n\n        let color: [number, number, number];\n        color = this.getColor(at);\n        return 'rgb(' + color[0] + ',' + color[1] + ',' + color[2] + ')';\n    }\n\n    /**\n     * Add a IColorTableItem to the current ColorMap\n     * @param  {IColorTableItem} color Color to add, with linkage to domain value.\n     * @return {ColorMap} Updated ColorMap\n     */\n    public addColor(color: IColorTableItem): ColorMap {\n\n        this.colortable.push(color);\n        this.colortable = this.colortable.sort(this.compare);\n\n        return this;\n    }\n\n    /**\n     * Add multiple IColorTableItems to the ColorMap\n     * @param  {ColorTable} colors Colors to add to the ColorMap\n     * @return {ColorMap} Updated Colormap\n     */\n    public addColors(colors: ColorTable): ColorMap {\n\n        for (const elem of colors) {\n            this.colortable.push(elem);\n        }\n        this.colortable = this.colortable.sort(this.compare);\n\n        return this;\n    }\n\n    /**\n     * Returns a ColorTable based on an input string\n     * @param  {string} input string, e.g. 'default', 'gray', 'empty',\n     * 'autumn', 'blues', 'summer', 'rainbow'\n     * @return {ColorTable} The ColorTable associated with the input string\n     */\n    protected expandColorTableStr(str: string): ColorTable {\n\n        let colortable: ColorTable;\n\n        switch (str) {\n            case 'default': {\n                colortable = ColorMap.defaultColorTable;\n                break;\n            }\n            case 'gray': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [0, 0, 0, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [255, 255, 255, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'empty': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'autumn': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [255, 0, 0, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [255, 255, 0, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'blues': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [0, 0, 255, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [0, 255, 255, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'summer': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [8, 160, 120, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [252, 252, 42, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'rainbow': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [255, 255,   0,  0]\n                    },\n                    {\n                        at: 0.000,\n                        color: [255, 255,   0,  0]\n                    },\n                    {\n                        at: 0.125,\n                        color: [255, 255,   0,  0]\n                    },\n                    {\n                        at: 0.250,\n                        color: [145, 255,   0,  0]\n                    },\n                    {\n                        at: 0.375,\n                        color: [  0, 255,  54,  0]\n                    },\n                    {\n                        at: 0.500,\n                        color: [  0, 179, 255,  0]\n                    },\n                    {\n                        at: 0.625,\n                        color: [ 10,   0, 255,  0]\n                    },\n                    {\n                        at: 0.750,\n                        color: [171,   0, 255,  0]\n                    },\n                    {\n                        at: 0.875,\n                        color: [255,   0, 159,  0]\n                    },\n                    {\n                        at: 1.000,\n                        color: [255,  89,   0,  0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255,  89,   0,  0]\n                    }\n                ];\n                break;\n            }\n            default: {\n                throw new Error('ColorMap.expandColorTableStr(): unknown case');\n            }\n        }\n\n        return colortable;\n\n    }\n\n    /**\n     * comparison function to help sort the IColorTableItems that make\n     * up a ColorTable. Basically when comparing objects, you have to specify\n     * which key you want to compare/sort on, which for this function is the\n     * value of a IColorTableItem's 'at' key.\n     * @param  {IColorTableItem} a the first IColorTableItem (left hand side\n     * member of the comparison)\n     * @param  {IColorTableItem} b the second IColorTableItem (right hand side\n     * of the comparison)\n     * @return {number} number identifying how a nd b compare. Returns -1 when\n     * a<b, 1 when a>b, or 0 when a==b\n     */\n    private compare(a: IColorTableItem, b: IColorTableItem): number {\n\n        if (a.at < b.at) {\n            return -1;\n        } else if (a.at > b.at) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n}\n","l":{"21":1,"27":1,"67":1,"69":101,"70":101,"72":101,"74":47,"75":47,"77":54,"79":52,"80":52,"82":2,"84":1,"85":1,"86":1,"88":0,"91":1,"96":100,"99":100,"100":100,"101":100,"113":1,"117":26080,"118":62,"119":62,"122":26080,"123":26080,"125":26080,"126":26080,"128":26080,"129":78142,"130":78142,"131":78142,"132":26080,"133":26080,"134":26080,"138":26080,"139":26080,"146":104320,"147":104320,"148":0,"152":26080,"161":1,"163":26080,"164":26080,"165":26080,"173":1,"175":1,"176":1,"178":1,"186":1,"188":2,"189":2,"191":1,"193":1,"202":1,"204":99,"206":99,"208":64,"209":64,"212":3,"230":3,"233":1,"243":1,"246":0,"264":0,"267":8,"285":8,"288":15,"306":15,"309":8,"355":8,"358":0,"362":99,"378":1,"380":700,"381":3,"382":697,"383":697,"385":0,"389":1}},
"src/legend.ts":{"path":"src/legend.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":20,"column":0},"end":{"line":361,"column":1}},"3":{"start":{"line":83,"column":4},"end":{"line":99,"column":5}},"4":{"start":{"line":85,"column":8},"end":{"line":85,"column":31}},"5":{"start":{"line":88,"column":8},"end":{"line":88,"column":28}},"6":{"start":{"line":89,"column":8},"end":{"line":89,"column":30}},"7":{"start":{"line":90,"column":8},"end":{"line":90,"column":48}},"8":{"start":{"line":91,"column":8},"end":{"line":91,"column":54}},"9":{"start":{"line":93,"column":8},"end":{"line":93,"column":83}},"10":{"start":{"line":94,"column":8},"end":{"line":94,"column":93}},"11":{"start":{"line":96,"column":8},"end":{"line":96,"column":24}},"12":{"start":{"line":97,"column":8},"end":{"line":97,"column":25}},"13":{"start":{"line":106,"column":11},"end":{"line":118,"column":5}},"14":{"start":{"line":109,"column":8},"end":{"line":109,"column":30}},"15":{"start":{"line":110,"column":8},"end":{"line":110,"column":34}},"16":{"start":{"line":111,"column":8},"end":{"line":111,"column":32}},"17":{"start":{"line":112,"column":8},"end":{"line":112,"column":37}},"18":{"start":{"line":113,"column":8},"end":{"line":113,"column":25}},"19":{"start":{"line":114,"column":8},"end":{"line":114,"column":27}},"20":{"start":{"line":115,"column":8},"end":{"line":115,"column":23}},"21":{"start":{"line":117,"column":8},"end":{"line":117,"column":20}},"22":{"start":{"line":124,"column":14},"end":{"line":139,"column":5}},"23":{"start":{"line":127,"column":8},"end":{"line":127,"column":105}},"24":{"start":{"line":128,"column":8},"end":{"line":128,"column":42}},"25":{"start":{"line":130,"column":8},"end":{"line":136,"column":56}},"26":{"start":{"line":138,"column":8},"end":{"line":138,"column":20}},"27":{"start":{"line":145,"column":14},"end":{"line":159,"column":5}},"28":{"start":{"line":147,"column":8},"end":{"line":147,"column":105}},"29":{"start":{"line":148,"column":8},"end":{"line":148,"column":95}},"30":{"start":{"line":150,"column":8},"end":{"line":156,"column":52}},"31":{"start":{"line":158,"column":8},"end":{"line":158,"column":20}},"32":{"start":{"line":166,"column":14},"end":{"line":203,"column":5}},"33":{"start":{"line":166,"column":4},"end":{"line":203,"column":5}},"34":{"start":{"line":168,"column":8},"end":{"line":168,"column":105}},"35":{"start":{"line":169,"column":8},"end":{"line":169,"column":81}},"36":{"start":{"line":171,"column":8},"end":{"line":171,"column":29}},"37":{"start":{"line":172,"column":8},"end":{"line":172,"column":35}},"38":{"start":{"line":173,"column":8},"end":{"line":178,"column":9}},"39":{"start":{"line":174,"column":12},"end":{"line":177,"column":19}},"40":{"start":{"line":180,"column":8},"end":{"line":180,"column":58}},"41":{"start":{"line":183,"column":8},"end":{"line":200,"column":23}},"42":{"start":{"line":194,"column":24},"end":{"line":194,"column":80}},"43":{"start":{"line":199,"column":24},"end":{"line":199,"column":74}},"44":{"start":{"line":202,"column":8},"end":{"line":202,"column":20}},"45":{"start":{"line":209,"column":14},"end":{"line":223,"column":5}},"46":{"start":{"line":211,"column":8},"end":{"line":212,"column":74}},"47":{"start":{"line":213,"column":8},"end":{"line":213,"column":47}},"48":{"start":{"line":215,"column":8},"end":{"line":220,"column":36}},"49":{"start":{"line":222,"column":8},"end":{"line":222,"column":20}},"50":{"start":{"line":230,"column":14},"end":{"line":254,"column":5}},"51":{"start":{"line":232,"column":8},"end":{"line":232,"column":88}},"52":{"start":{"line":233,"column":8},"end":{"line":233,"column":97}},"53":{"start":{"line":234,"column":8},"end":{"line":234,"column":109}},"54":{"start":{"line":235,"column":8},"end":{"line":235,"column":81}},"55":{"start":{"line":237,"column":8},"end":{"line":239,"column":85}},"56":{"start":{"line":241,"column":8},"end":{"line":245,"column":30}},"57":{"start":{"line":247,"column":8},"end":{"line":250,"column":32}},"58":{"start":{"line":252,"column":8},"end":{"line":252,"column":20}},"59":{"start":{"line":260,"column":14},"end":{"line":275,"column":5}},"60":{"start":{"line":262,"column":8},"end":{"line":262,"column":97}},"61":{"start":{"line":263,"column":8},"end":{"line":263,"column":84}},"62":{"start":{"line":264,"column":8},"end":{"line":264,"column":52}},"63":{"start":{"line":266,"column":8},"end":{"line":271,"column":57}},"64":{"start":{"line":273,"column":8},"end":{"line":273,"column":20}},"65":{"start":{"line":282,"column":4},"end":{"line":284,"column":5}},"66":{"start":{"line":291,"column":8},"end":{"line":291,"column":32}},"67":{"start":{"line":283,"column":8},"end":{"line":283,"column":51}},"68":{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},"69":{"start":{"line":308,"column":8},"end":{"line":308,"column":33}},"70":{"start":{"line":300,"column":8},"end":{"line":300,"column":53}},"71":{"start":{"line":316,"column":4},"end":{"line":318,"column":5}},"72":{"start":{"line":325,"column":8},"end":{"line":325,"column":31}},"73":{"start":{"line":317,"column":8},"end":{"line":317,"column":70}},"74":{"start":{"line":333,"column":4},"end":{"line":335,"column":5}},"75":{"start":{"line":342,"column":8},"end":{"line":342,"column":34}},"76":{"start":{"line":334,"column":8},"end":{"line":334,"column":79}},"77":{"start":{"line":349,"column":12},"end":{"line":359,"column":5}},"78":{"start":{"line":351,"column":8},"end":{"line":351,"column":105}},"79":{"start":{"line":352,"column":8},"end":{"line":352,"column":81}},"80":{"start":{"line":354,"column":8},"end":{"line":356,"column":68}},"81":{"start":{"line":358,"column":8},"end":{"line":358,"column":20}},"82":{"start":{"line":361,"column":0},"end":{"line":361,"column":1}},"83":{"start":{"line":20,"column":13},"end":{"line":20,"column":19}}},"fnMap":{"1":{"name":"(anonymous_135)","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Legend","line":83,"loc":{"start":{"line":83,"column":4},"end":{"line":83,"column":47}}},"3":{"name":"(anonymous_137)","line":106,"loc":{"start":{"line":106,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_138)","line":124,"loc":{"start":{"line":124,"column":4},"end":{"line":null,"column":-1}}},"5":{"name":"(anonymous_139)","line":145,"loc":{"start":{"line":145,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_140)","line":166,"loc":{"start":{"line":166,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_141)","line":193,"loc":{"start":{"line":193,"column":31},"end":{"line":193,"column":38}}},"8":{"name":"(anonymous_142)","line":198,"loc":{"start":{"line":198,"column":34},"end":{"line":198,"column":41}}},"9":{"name":"(anonymous_143)","line":209,"loc":{"start":{"line":209,"column":4},"end":{"line":null,"column":-1}}},"10":{"name":"(anonymous_144)","line":230,"loc":{"start":{"line":230,"column":4},"end":{"line":null,"column":-1}}},"11":{"name":"(anonymous_145)","line":260,"loc":{"start":{"line":260,"column":4},"end":{"line":null,"column":-1}}},"12":{"name":"(anonymous_146)","line":290,"loc":{"start":{"line":290,"column":4},"end":{"line":null,"column":-1}}},"13":{"name":"(anonymous_147)","line":282,"loc":{"start":{"line":282,"column":4},"end":{"line":282,"column":47}}},"14":{"name":"(anonymous_148)","line":307,"loc":{"start":{"line":307,"column":4},"end":{"line":null,"column":-1}}},"15":{"name":"(anonymous_149)","line":299,"loc":{"start":{"line":299,"column":4},"end":{"line":299,"column":49}}},"16":{"name":"(anonymous_150)","line":324,"loc":{"start":{"line":324,"column":4},"end":{"line":null,"column":-1}}},"17":{"name":"(anonymous_151)","line":316,"loc":{"start":{"line":316,"column":4},"end":{"line":316,"column":45}}},"18":{"name":"(anonymous_152)","line":341,"loc":{"start":{"line":341,"column":4},"end":{"line":null,"column":-1}}},"19":{"name":"(anonymous_153)","line":333,"loc":{"start":{"line":333,"column":4},"end":{"line":333,"column":51}}},"20":{"name":"(anonymous_154)","line":349,"loc":{"start":{"line":349,"column":4},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":25},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":25},"end":{"line":null,"column":-1}}]}},"s":{"1":1,"2":1,"3":1,"4":128,"5":128,"6":128,"7":128,"8":128,"9":128,"10":128,"11":128,"12":128,"13":1,"14":128,"15":128,"16":128,"17":128,"18":128,"19":128,"20":128,"21":128,"22":1,"23":128,"24":128,"25":128,"26":128,"27":1,"28":128,"29":128,"30":128,"31":128,"32":1,"33":128,"34":128,"35":128,"36":128,"37":128,"38":128,"39":16384,"40":128,"41":128,"42":16384,"43":16384,"44":128,"45":1,"46":128,"47":128,"48":128,"49":128,"50":1,"51":128,"52":128,"53":128,"54":128,"55":128,"56":128,"57":128,"58":128,"59":1,"60":128,"61":128,"62":128,"63":128,"64":128,"65":1,"66":1024,"67":128,"68":1,"69":384,"70":128,"71":1,"72":768,"73":128,"74":1,"75":896,"76":128,"77":1,"78":128,"79":128,"80":128,"81":128,"82":1,"83":1},"b":{"1":[1,0]},"f":{"1":1,"2":128,"3":128,"4":128,"5":128,"6":128,"7":16384,"8":16384,"9":128,"10":128,"11":128,"12":1024,"13":128,"14":384,"15":128,"16":768,"17":128,"18":896,"19":128,"20":128},"code":"\nimport * as d3 from 'd3';\n\nimport {Base} from './Base';\nimport {DateCircle} from './DateCircle';\nimport {DateRect} from './DateRect';\nimport {WeekdayCircle} from './WeekdayCircle';\nimport {WeekdayRect} from './WeekdayRect';\n\n/**\n * Convenience type/collection of various punchcards\n */\nexport type PunchcardVisualization = Base|DateCircle|DateRect|\n                                    WeekdayCircle|WeekdayRect;\n\n/**\n * Legend adds a legend to an existing PunchcardVisualization, indicating which\n * color represents which domain value.\n */\nexport class Legend {\n    /**\n     * The Legend's sibling, i.e. the object that the legend is associated with.\n     * @type {PunchcardVisualization}\n     */\n    protected sibling: PunchcardVisualization;\n    /**\n     * The title of the Legend\n     * @type {string}\n     */\n    protected title: string;\n    /**\n     * Text to label the Legend's vertical axis\n     * @type {string}\n     */\n    protected ylabel: string;\n    /**\n     * The legend's horizontal axis scale\n     * @type {any}\n     */\n    protected horizontalScale: any;\n    /**\n     * The Legend's vertical axis scale\n     * @type {any}\n     */\n    protected verticalScale: any;\n    /**\n     * The Legend's width in pixels\n     * @type {number}\n     */\n    protected width: number;\n    /**\n     * The Legend's height in pixels\n     * @type {number}\n     */\n    protected height: number;\n\n    /**\n     * Margin in pixels to the left of the legend\n     * @type {number}\n     */\n    private _marginLeft: number;\n    /**\n     * Margin in pixels to the right of the legend\n     * @type {number}\n     */\n    private _marginRight: number;\n    /**\n     * Margin in pixels to the top of the legend\n     * @type {number}\n     */\n    private _marginTop: number;\n    /**\n     * Margin in pixels to the bottom of the legend\n     * @type {number}\n     */\n    private _marginBottom: number;\n    /**\n     * Adds a legend to an existing PunchcardVisualization.\n     * @param  {PunchcardVisualization} sibling The sibling element, for which\n     * a legend needs to be constructed\n     * @return {[type]} A reference to the instance of Legend\n     */\n    constructor(sibling: PunchcardVisualization) {\n\n        this.sibling = sibling;\n\n        // the margins around the legend body\n        this.marginLeft = 0;\n        this.marginRight = 60;\n        this.marginTop = this.sibling.marginTop;\n        this.marginBottom = this.sibling.marginBottom;\n\n        this.width = this.sibling.legendWidth - this.marginLeft - this.marginRight;\n        this.height = this.sibling.domElem.clientHeight - this.marginTop - this.marginBottom;\n\n        this.title = '';\n        this.ylabel = '';\n\n    }\n\n    /**\n     * This method calls the other methods in a predefined succession, so that\n     * the whole legend gets drawn\n     * @return {Legend} Returns a reference to the instance of Legend\n     */\n    public draw(): Legend {\n        // draw the legend\n\n        this.drawLegendBody();\n        this.drawHorizontalAxis();\n        this.drawVerticalAxis();\n        this.drawVerticalAxisLabel();\n        this.drawTitle();\n        this.drawSymbols();\n        this.drawBox();\n\n        return this;\n    }\n\n    /**\n     * Draws the box around the legend\n     * @return {Legend} Returns a reference to the instance of Legend\n     */\n    protected drawBox(): Legend {\n        // draw box\n\n        const dx: number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        const dy: number = this.marginTop;\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend legendbody-box')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('class', 'legend legendbody-box');\n\n        return this;\n    }\n\n    /**\n     * Draws the Legend's body (but not the colored symbols on it)\n     * @return {Legend} Returns a reference to the instance of Legend\n     */\n    protected drawLegendBody(): Legend {\n        //\n        const dx: number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        const dy: number = this.sibling.domElem.clientHeight - this.marginBottom - this.height;\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend legendbody')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('class', 'legend legendbody');\n\n        return this;\n    }\n\n    /**\n     * Draws the Legend's colored symbols, each of which is associated with a\n     * certain domain value.\n     * @return {Legend} Returns a reference to the instance of Legend\n     */\n    protected drawSymbols(): Legend {\n\n        const dx: number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        const dy: number = this.sibling.domElem.clientHeight - this.marginBottom;\n\n        const data: any = [];\n        const nRects: number = 128;\n        for (let iRect = 0; iRect < nRects; iRect += 1) {\n            data.push({\n                    value: this.sibling.colormap.cLimLow +\n                            ((iRect + 0.5) / nRects) * (this.sibling.colormap.cLimHigh - this.sibling.colormap.cLimLow)\n                });\n        }\n\n        const symbolHeight: number = this.height / nRects;\n\n        // draw the rects\n        this.sibling.svg\n            .append('g')\n            .attr('class', 'punchcard-legend symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('rect.symbol')\n                .data(data)\n                .enter()\n                .append('rect')\n                    .attr('class', 'symbol')\n                    .attr('x', 0)\n                    .attr('y', (d: any) => {\n                        return this.verticalScale(d.value) - 0.5 * symbolHeight;\n                    })\n                    .attr('width', this.width)\n                    .attr('height', symbolHeight)\n                    .attr('fill', (d: any) => {\n                        return this.sibling.colormap.getColorRGB(d.value);\n                    });\n\n        return this;\n    }\n\n    /**\n     * Draws the Legend's title\n     * @return {Legend} Returns a reference to the instance of Legend\n     */\n    protected drawTitle(): Legend {\n\n        const dx: number = this.sibling.domElem.clientWidth -\n            this.sibling.legendWidth + this.marginLeft + 0.5 * this.width;\n        const dy: number = this.marginTop - 20;\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend title')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .append('text')\n            .text(this.title)\n            .attr('class', 'title');\n\n        return this;\n    }\n\n    /**\n     * Draws the Legend's vertical axis, that is used to read the domain value\n     * associated with a certain color.\n     * @return {Legend} Returns a reference to the instance of Legend\n     */\n    protected drawVerticalAxis(): Legend {\n        //\n        const w: number = this.sibling.legendWidth - this.marginLeft - this.marginRight;\n        const h: number = this.sibling.domElem.clientHeight - this.marginTop - this.marginBottom;\n        const dx: number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft + w;\n        const dy: number = this.sibling.domElem.clientHeight - this.marginBottom;\n\n        this.verticalScale = d3.scale.linear()\n            .range([0, -h])\n            .domain([this.sibling.colormap.cLimLow, this.sibling.colormap.cLimHigh]);\n\n        const verticalAxis = d3.svg.axis()\n            .orient('right')\n            .scale(this.verticalScale)\n            .innerTickSize(5)\n            .outerTickSize(5);\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend vertical-axis')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(verticalAxis);\n\n        return this;\n\n    }\n\n    /**\n     * Draws the Legend's vertical axis text label\n     * @return {Legend} Returns a reference to the instance of Legend\n     */\n    protected drawVerticalAxisLabel(): Legend {\n        //\n        const h: number = this.sibling.domElem.clientHeight - this.marginTop - this.marginBottom;\n        const dx: number = this.sibling.domElem.clientWidth - this.marginRight + 40;\n        const dy: number = this.marginTop + 0.5 * h;\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend vertical-axis-label')\n            .attr('transform', 'translate(' + dx + ',' + dy + ') rotate(-90)')\n            .append('text')\n            .text(this.ylabel)\n            .attr('class', 'legend vertical-axis-label');\n\n        return this;\n\n    }\n\n    /**\n     * [marginLeft description]\n     * @param  {number} marginLeft [description]\n     * @return {[type]}            [description]\n     */\n    protected set marginLeft(marginLeft: number) {\n        this._marginLeft = Math.max(marginLeft, 0);\n    }\n\n    /**\n     * [marginLeft description]\n     * @return {number} [description]\n     */\n    protected get marginLeft(): number {\n        return this._marginLeft;\n    }\n\n    /**\n     * [marginRight description]\n     * @param  {number} marginRight [description]\n     * @return {[type]}             [description]\n     */\n    protected set marginRight(marginRight: number) {\n        this._marginRight = Math.max(marginRight, 0);\n    }\n\n    /**\n     * [marginRight description]\n     * @return {number} [description]\n     */\n    protected get marginRight(): number {\n        return this._marginRight;\n    }\n\n    /**\n     * [marginTop description]\n     * @param  {number} marginTop [description]\n     * @return {[type]}           [description]\n     */\n    protected set marginTop(marginTop: number) {\n        this._marginTop = Math.max(marginTop, this.sibling.marginTop);\n    }\n\n    /**\n     * [marginTop description]\n     * @return {number} [description]\n     */\n    protected get marginTop(): number {\n        return this._marginTop;\n    }\n\n    /**\n     * [marginBottom description]\n     * @param  {number} marginBottom [description]\n     * @return {[type]}              [description]\n     */\n    protected set marginBottom(marginBottom: number) {\n        this._marginBottom = Math.max(marginBottom, this.sibling.marginBottom);\n    }\n\n    /**\n     * [marginBottom description]\n     * @return {number} [description]\n     */\n    protected get marginBottom(): number {\n        return this._marginBottom;\n    }\n\n    /**\n     * Draws the Legend's horizontal axis\n     * @return {Legend} Returns a reference to the instance of Legend\n     */\n    private drawHorizontalAxis(): Legend {\n\n        const dx: number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        const dy: number = this.sibling.domElem.clientHeight - this.marginBottom;\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend horizontal-axis')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' );\n\n        return this;\n    }\n\n}\n","l":{"2":1,"20":1,"83":1,"85":128,"88":128,"89":128,"90":128,"91":128,"93":128,"94":128,"96":128,"97":128,"106":1,"109":128,"110":128,"111":128,"112":128,"113":128,"114":128,"115":128,"117":128,"124":1,"127":128,"128":128,"130":128,"138":128,"145":1,"147":128,"148":128,"150":128,"158":128,"166":128,"168":128,"169":128,"171":128,"172":128,"173":128,"174":16384,"180":128,"183":128,"194":16384,"199":16384,"202":128,"209":1,"211":128,"213":128,"215":128,"222":128,"230":1,"232":128,"233":128,"234":128,"235":128,"237":128,"241":128,"247":128,"252":128,"260":1,"262":128,"263":128,"264":128,"266":128,"273":128,"282":1,"283":128,"291":1024,"299":1,"300":128,"308":384,"316":1,"317":128,"325":768,"333":1,"334":128,"342":896,"349":1,"351":128,"352":128,"354":128,"358":128,"361":1}},
"src/punchcards.ts":{"path":"src/punchcards.ts","statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"2":{"start":{"line":5,"column":8},"end":{"line":5,"column":12}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"4":{"start":{"line":6,"column":8},"end":{"line":6,"column":16}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"6":{"start":{"line":7,"column":8},"end":{"line":7,"column":18}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"8":{"start":{"line":8,"column":8},"end":{"line":8,"column":16}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"10":{"start":{"line":9,"column":8},"end":{"line":9,"column":14}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":46}},"12":{"start":{"line":10,"column":8},"end":{"line":10,"column":21}},"13":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"14":{"start":{"line":11,"column":8},"end":{"line":11,"column":19}}},"fnMap":{},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{},"f":{},"code":"\n/**\n * This is the Punchcards module\n */\nexport {Base} from './Base';\nexport {ColorMap} from './colormap';\nexport {DateCircle} from './DateCircle';\nexport {DateRect} from './DateRect';\nexport {Legend} from './legend';\nexport {WeekdayCircle} from './WeekdayCircle';\nexport {WeekdayRect} from './WeekdayRect';\n","l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1}}}

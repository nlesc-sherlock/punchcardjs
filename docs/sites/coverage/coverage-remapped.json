{
"node_modules/browserify/node_modules/browser-pack/_prelude.js":{"path":"node_modules/browserify/node_modules/browser-pack/_prelude.js","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":1,"type":"if","locations":[{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}]}},"s":{"1":108},"b":{"1":[29,21]},"f":{"1":40},"code":"(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","l":{"1":108}},
"src/base.ts":{"path":"src/base.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":21}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":12}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"5":{"start":{"line":15,"column":0},"end":{"line":567,"column":1}},"6":{"start":{"line":125,"column":4},"end":{"line":163,"column":5}},"7":{"start":{"line":128,"column":8},"end":{"line":128,"column":21}},"8":{"start":{"line":131,"column":8},"end":{"line":131,"column":35}},"9":{"start":{"line":134,"column":8},"end":{"line":134,"column":63}},"10":{"start":{"line":138,"column":8},"end":{"line":138,"column":22}},"11":{"start":{"line":141,"column":8},"end":{"line":141,"column":29}},"12":{"start":{"line":144,"column":8},"end":{"line":144,"column":29}},"13":{"start":{"line":145,"column":8},"end":{"line":145,"column":30}},"14":{"start":{"line":146,"column":8},"end":{"line":146,"column":28}},"15":{"start":{"line":147,"column":8},"end":{"line":147,"column":32}},"16":{"start":{"line":148,"column":8},"end":{"line":148,"column":30}},"17":{"start":{"line":150,"column":8},"end":{"line":150,"column":36}},"18":{"start":{"line":151,"column":8},"end":{"line":151,"column":24}},"19":{"start":{"line":153,"column":8},"end":{"line":153,"column":44}},"20":{"start":{"line":154,"column":8},"end":{"line":154,"column":39}},"21":{"start":{"line":156,"column":8},"end":{"line":156,"column":55}},"22":{"start":{"line":159,"column":8},"end":{"line":159,"column":29}},"23":{"start":{"line":160,"column":8},"end":{"line":162,"column":11}},"24":{"start":{"line":161,"column":12},"end":{"line":161,"column":28}},"25":{"start":{"line":174,"column":11},"end":{"line":178,"column":5}},"26":{"start":{"line":177,"column":8},"end":{"line":177,"column":20}},"27":{"start":{"line":187,"column":14},"end":{"line":204,"column":5}},"28":{"start":{"line":189,"column":8},"end":{"line":189,"column":105}},"29":{"start":{"line":190,"column":8},"end":{"line":190,"column":87}},"30":{"start":{"line":191,"column":8},"end":{"line":191,"column":40}},"31":{"start":{"line":192,"column":8},"end":{"line":192,"column":39}},"32":{"start":{"line":195,"column":8},"end":{"line":201,"column":48}},"33":{"start":{"line":203,"column":8},"end":{"line":203,"column":20}},"34":{"start":{"line":215,"column":14},"end":{"line":232,"column":5}},"35":{"start":{"line":217,"column":8},"end":{"line":217,"column":105}},"36":{"start":{"line":218,"column":8},"end":{"line":218,"column":87}},"37":{"start":{"line":219,"column":8},"end":{"line":219,"column":40}},"38":{"start":{"line":220,"column":8},"end":{"line":220,"column":39}},"39":{"start":{"line":223,"column":8},"end":{"line":229,"column":44}},"40":{"start":{"line":231,"column":8},"end":{"line":231,"column":20}},"41":{"start":{"line":236,"column":14},"end":{"line":249,"column":5}},"42":{"start":{"line":238,"column":8},"end":{"line":238,"column":80}},"43":{"start":{"line":239,"column":8},"end":{"line":239,"column":63}},"44":{"start":{"line":240,"column":8},"end":{"line":247,"column":31}},"45":{"start":{"line":248,"column":8},"end":{"line":248,"column":20}},"46":{"start":{"line":258,"column":14},"end":{"line":273,"column":5}},"47":{"start":{"line":260,"column":8},"end":{"line":260,"column":105}},"48":{"start":{"line":261,"column":8},"end":{"line":261,"column":87}},"49":{"start":{"line":262,"column":8},"end":{"line":262,"column":50}},"50":{"start":{"line":263,"column":8},"end":{"line":263,"column":69}},"51":{"start":{"line":265,"column":8},"end":{"line":270,"column":52}},"52":{"start":{"line":272,"column":8},"end":{"line":272,"column":20}},"53":{"start":{"line":281,"column":14},"end":{"line":289,"column":5}},"54":{"start":{"line":284,"column":8},"end":{"line":284,"column":45}},"55":{"start":{"line":285,"column":8},"end":{"line":285,"column":22}},"56":{"start":{"line":288,"column":8},"end":{"line":288,"column":20}},"57":{"start":{"line":298,"column":14},"end":{"line":305,"column":5}},"58":{"start":{"line":300,"column":8},"end":{"line":302,"column":55}},"59":{"start":{"line":304,"column":8},"end":{"line":304,"column":20}},"60":{"start":{"line":314,"column":14},"end":{"line":328,"column":5}},"61":{"start":{"line":316,"column":8},"end":{"line":316,"column":105}},"62":{"start":{"line":317,"column":8},"end":{"line":317,"column":50}},"63":{"start":{"line":318,"column":8},"end":{"line":318,"column":45}},"64":{"start":{"line":320,"column":8},"end":{"line":325,"column":36}},"65":{"start":{"line":327,"column":8},"end":{"line":327,"column":20}},"66":{"start":{"line":337,"column":14},"end":{"line":362,"column":5}},"67":{"start":{"line":339,"column":8},"end":{"line":339,"column":40}},"68":{"start":{"line":340,"column":8},"end":{"line":340,"column":70}},"69":{"start":{"line":341,"column":8},"end":{"line":341,"column":87}},"70":{"start":{"line":344,"column":8},"end":{"line":346,"column":33}},"71":{"start":{"line":348,"column":8},"end":{"line":353,"column":30}},"72":{"start":{"line":355,"column":8},"end":{"line":358,"column":27}},"73":{"start":{"line":360,"column":8},"end":{"line":360,"column":20}},"74":{"start":{"line":371,"column":14},"end":{"line":386,"column":5}},"75":{"start":{"line":373,"column":8},"end":{"line":373,"column":87}},"76":{"start":{"line":374,"column":8},"end":{"line":374,"column":46}},"77":{"start":{"line":375,"column":8},"end":{"line":375,"column":49}},"78":{"start":{"line":377,"column":8},"end":{"line":382,"column":50}},"79":{"start":{"line":384,"column":8},"end":{"line":384,"column":20}},"80":{"start":{"line":398,"column":14},"end":{"line":410,"column":5}},"81":{"start":{"line":401,"column":8},"end":{"line":401,"column":31}},"82":{"start":{"line":404,"column":8},"end":{"line":406,"column":9}},"83":{"start":{"line":405,"column":12},"end":{"line":405,"column":44}},"84":{"start":{"line":408,"column":8},"end":{"line":408,"column":20}},"85":{"start":{"line":414,"column":14},"end":{"line":416,"column":5}},"86":{"start":{"line":415,"column":8},"end":{"line":415,"column":23}},"87":{"start":{"line":420,"column":14},"end":{"line":422,"column":5}},"88":{"start":{"line":421,"column":8},"end":{"line":421,"column":23}},"89":{"start":{"line":432,"column":12},"end":{"line":448,"column":5}},"90":{"start":{"line":434,"column":8},"end":{"line":434,"column":40}},"91":{"start":{"line":435,"column":8},"end":{"line":435,"column":46}},"92":{"start":{"line":437,"column":8},"end":{"line":439,"column":9}},"93":{"start":{"line":438,"column":12},"end":{"line":438,"column":20}},"94":{"start":{"line":441,"column":8},"end":{"line":443,"column":9}},"95":{"start":{"line":442,"column":12},"end":{"line":442,"column":23}},"96":{"start":{"line":445,"column":8},"end":{"line":445,"column":78}},"97":{"start":{"line":447,"column":8},"end":{"line":447,"column":20}},"98":{"start":{"line":458,"column":12},"end":{"line":474,"column":5}},"99":{"start":{"line":460,"column":8},"end":{"line":460,"column":42}},"100":{"start":{"line":461,"column":8},"end":{"line":461,"column":44}},"101":{"start":{"line":463,"column":8},"end":{"line":465,"column":9}},"102":{"start":{"line":464,"column":12},"end":{"line":464,"column":21}},"103":{"start":{"line":467,"column":8},"end":{"line":469,"column":9}},"104":{"start":{"line":468,"column":12},"end":{"line":468,"column":22}},"105":{"start":{"line":471,"column":8},"end":{"line":471,"column":77}},"106":{"start":{"line":473,"column":8},"end":{"line":473,"column":20}},"107":{"start":{"line":482,"column":4},"end":{"line":485,"column":5}},"108":{"start":{"line":492,"column":8},"end":{"line":492,"column":32}},"109":{"start":{"line":483,"column":8},"end":{"line":483,"column":38}},"110":{"start":{"line":484,"column":8},"end":{"line":484,"column":30}},"111":{"start":{"line":500,"column":4},"end":{"line":503,"column":5}},"112":{"start":{"line":510,"column":8},"end":{"line":510,"column":33}},"113":{"start":{"line":501,"column":8},"end":{"line":501,"column":40}},"114":{"start":{"line":502,"column":8},"end":{"line":502,"column":30}},"115":{"start":{"line":518,"column":4},"end":{"line":521,"column":5}},"116":{"start":{"line":528,"column":8},"end":{"line":528,"column":31}},"117":{"start":{"line":519,"column":8},"end":{"line":519,"column":36}},"118":{"start":{"line":520,"column":8},"end":{"line":520,"column":31}},"119":{"start":{"line":536,"column":4},"end":{"line":539,"column":5}},"120":{"start":{"line":546,"column":8},"end":{"line":546,"column":34}},"121":{"start":{"line":537,"column":8},"end":{"line":537,"column":42}},"122":{"start":{"line":538,"column":8},"end":{"line":538,"column":31}},"123":{"start":{"line":554,"column":4},"end":{"line":557,"column":5}},"124":{"start":{"line":564,"column":8},"end":{"line":564,"column":33}},"125":{"start":{"line":555,"column":8},"end":{"line":555,"column":37}},"126":{"start":{"line":556,"column":8},"end":{"line":556,"column":54}},"127":{"start":{"line":567,"column":0},"end":{"line":567,"column":1}},"128":{"start":{"line":15,"column":13},"end":{"line":567,"column":1}}},"fnMap":{"1":{"name":"(anonymous_8)","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Base","line":125,"loc":{"start":{"line":125,"column":4},"end":{"line":125,"column":85}}},"3":{"name":"(anonymous_10)","line":160,"loc":{"start":{"line":160,"column":42},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_11)","line":174,"loc":{"start":{"line":174,"column":4},"end":{"line":null,"column":-1}}},"5":{"name":"(anonymous_12)","line":187,"loc":{"start":{"line":187,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_13)","line":215,"loc":{"start":{"line":215,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_14)","line":236,"loc":{"start":{"line":236,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_15)","line":258,"loc":{"start":{"line":258,"column":4},"end":{"line":null,"column":-1}}},"9":{"name":"(anonymous_16)","line":281,"loc":{"start":{"line":281,"column":4},"end":{"line":null,"column":-1}}},"10":{"name":"(anonymous_17)","line":298,"loc":{"start":{"line":298,"column":4},"end":{"line":null,"column":-1}}},"11":{"name":"(anonymous_18)","line":314,"loc":{"start":{"line":314,"column":4},"end":{"line":null,"column":-1}}},"12":{"name":"(anonymous_19)","line":337,"loc":{"start":{"line":337,"column":4},"end":{"line":null,"column":-1}}},"13":{"name":"(anonymous_20)","line":371,"loc":{"start":{"line":371,"column":4},"end":{"line":null,"column":-1}}},"14":{"name":"(anonymous_21)","line":398,"loc":{"start":{"line":398,"column":4},"end":{"line":null,"column":-1}}},"15":{"name":"(anonymous_22)","line":414,"loc":{"start":{"line":414,"column":4},"end":{"line":414,"column":31}}},"16":{"name":"(anonymous_23)","line":420,"loc":{"start":{"line":420,"column":4},"end":{"line":420,"column":27}}},"17":{"name":"(anonymous_24)","line":432,"loc":{"start":{"line":432,"column":4},"end":{"line":null,"column":-1}}},"18":{"name":"(anonymous_25)","line":458,"loc":{"start":{"line":458,"column":4},"end":{"line":null,"column":-1}}},"19":{"name":"(anonymous_26)","line":491,"loc":{"start":{"line":491,"column":4},"end":{"line":null,"column":-1}}},"20":{"name":"(anonymous_27)","line":482,"loc":{"start":{"line":482,"column":4},"end":{"line":482,"column":43}}},"21":{"name":"(anonymous_28)","line":509,"loc":{"start":{"line":509,"column":4},"end":{"line":null,"column":-1}}},"22":{"name":"(anonymous_29)","line":500,"loc":{"start":{"line":500,"column":4},"end":{"line":500,"column":45}}},"23":{"name":"(anonymous_30)","line":527,"loc":{"start":{"line":527,"column":4},"end":{"line":null,"column":-1}}},"24":{"name":"(anonymous_31)","line":518,"loc":{"start":{"line":518,"column":4},"end":{"line":518,"column":41}}},"25":{"name":"(anonymous_32)","line":545,"loc":{"start":{"line":545,"column":4},"end":{"line":null,"column":-1}}},"26":{"name":"(anonymous_33)","line":536,"loc":{"start":{"line":536,"column":4},"end":{"line":536,"column":47}}},"27":{"name":"(anonymous_34)","line":563,"loc":{"start":{"line":563,"column":4},"end":{"line":null,"column":-1}}},"28":{"name":"(anonymous_35)","line":554,"loc":{"start":{"line":554,"column":4},"end":{"line":554,"column":45}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}}]},"2":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}}]},"3":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":23},"end":{"line":153,"column":30}},{"start":{"line":153,"column":34},"end":{"line":153,"column":43}}]},"4":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":8},"end":{"line":437,"column":7}},{"start":{"line":437,"column":8},"end":{"line":437,"column":7}}]},"5":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":12},"end":{"line":437,"column":38}},{"start":{"line":437,"column":42},"end":{"line":437,"column":49}}]},"6":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":8},"end":{"line":441,"column":7}},{"start":{"line":441,"column":8},"end":{"line":441,"column":7}}]},"7":{"line":441,"type":"binary-expr","locations":[{"start":{"line":441,"column":12},"end":{"line":441,"column":41}},{"start":{"line":441,"column":45},"end":{"line":441,"column":55}}]},"8":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":8},"end":{"line":463,"column":7}},{"start":{"line":463,"column":8},"end":{"line":463,"column":7}}]},"9":{"line":463,"type":"binary-expr","locations":[{"start":{"line":463,"column":12},"end":{"line":463,"column":39}},{"start":{"line":463,"column":43},"end":{"line":463,"column":51}}]},"10":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":8},"end":{"line":467,"column":7}},{"start":{"line":467,"column":8},"end":{"line":467,"column":7}}]},"11":{"line":467,"type":"binary-expr","locations":[{"start":{"line":467,"column":12},"end":{"line":467,"column":40}},{"start":{"line":467,"column":44},"end":{"line":467,"column":53}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":46,"8":46,"9":46,"10":46,"11":46,"12":46,"13":46,"14":46,"15":46,"16":46,"17":46,"18":46,"19":46,"20":46,"21":46,"22":46,"23":46,"24":191,"25":1,"26":96,"27":1,"28":97,"29":97,"30":97,"31":97,"32":97,"33":97,"34":1,"35":97,"36":97,"37":97,"38":97,"39":97,"40":97,"41":1,"42":95,"43":95,"44":95,"45":95,"46":1,"47":97,"48":97,"49":97,"50":97,"51":97,"52":97,"53":1,"54":95,"55":95,"56":95,"57":1,"58":136,"59":136,"60":1,"61":97,"62":97,"63":97,"64":97,"65":97,"66":1,"67":120,"68":120,"69":120,"70":120,"71":120,"72":120,"73":120,"74":1,"75":97,"76":97,"77":97,"78":97,"79":97,"80":1,"81":191,"82":191,"83":106,"84":191,"85":1,"86":0,"87":1,"88":0,"89":1,"90":107,"91":107,"92":107,"93":0,"94":107,"95":46,"96":107,"97":107,"98":1,"99":92,"100":92,"101":92,"102":0,"103":92,"104":46,"105":92,"106":92,"107":1,"108":1565,"109":46,"110":46,"111":1,"112":815,"113":46,"114":46,"115":1,"116":1528,"117":46,"118":46,"119":1,"120":1357,"121":61,"122":61,"123":1,"124":1483,"125":46,"126":46,"127":1,"128":1},"b":{"1":[1,0],"2":[1,0],"3":[46,40],"4":[0,107],"5":[107,107],"6":[46,61],"7":[107,61],"8":[0,92],"9":[92,92],"10":[46,46],"11":[92,46]},"f":{"1":1,"2":46,"3":191,"4":96,"5":97,"6":97,"7":95,"8":97,"9":95,"10":136,"11":97,"12":120,"13":97,"14":191,"15":0,"16":0,"17":107,"18":92,"19":1565,"20":46,"21":815,"22":46,"23":1528,"24":46,"25":1357,"26":61,"27":1483,"28":46},"code":"import 'crossfilter';\r\nimport 'd3';\r\n\r\n\r\nimport {ColorMap} from './colormap';\r\nimport {Legend} from './legend';\r\n\r\n\r\n/**\r\n * This is the base class for all punchcards. It provides the methods that are\r\n * shared between all punchcards, such as drawing of the vertical axis (which is\r\n * always hour of day), drawing of the background box, generation of the SVG DOM\r\n * element, and so on.\r\n */\r\nexport class Base {\r\n\r\n    /**\r\n     * The crossfilter that contains the data which needs to be visualized.\r\n     * @type {CrossFilter.CrossFilter<any>}\r\n     */\r\n    protected cf: CrossFilter.CrossFilter<any>;\r\n    /**\r\n     * The colormap: i.e. the element that determines what color is used to\r\n     * display a certain value.\r\n     * @type {ColorMap}\r\n     */\r\n    public colormap: ColorMap;\r\n    /**\r\n     * The user-defined dimensions that are used to manipulate the crossfilter\r\n     * data.\r\n     * @type {any}\r\n     */\r\n    protected dim: any;\r\n    /**\r\n     * The element of the DOM where the punchcard should be visualized.\r\n     * @type {HTMLElement}\r\n     */\r\n    public domElem: HTMLElement;\r\n    /**\r\n     * The element ID of the this._domElem object.\r\n     * @type {string}\r\n     */\r\n    protected domElemId: string;\r\n    /**\r\n     * The SVG DOM element that is used to draw a punchcard in.\r\n     * @type {any}\r\n     */\r\n    public svg: any;\r\n    /**\r\n     * The space in pixels between the left side of the axis background and\r\n     * edge of the SVG element.\r\n     * @type {number}\r\n     */\r\n    private _marginLeft: number;\r\n    /**\r\n     * The space in pixels between the right side of the  axis background and\r\n     * edge of the SVG element.\r\n     * @type {number}\r\n     */\r\n    private _marginRight: number;\r\n    /**\r\n     * The space in pixels between the top side of axis background and edge of\r\n     * the SVG element.\r\n     * @type {number}\r\n     */\r\n    private _marginTop: number;\r\n    /**\r\n     * The space in pixels between the bottom side of axis background and edge\r\n     * of the SVG element.\r\n     * @type {number}\r\n     */\r\n    private _marginBottom: number;\r\n    /**\r\n     * Text to use as title for the graph\r\n     * @type {string}\r\n     */\r\n    protected title: string;\r\n    /**\r\n     * Text to use as label for the horizontal axis\r\n     * @type {string}\r\n     */\r\n    protected xlabel: string;\r\n    /**\r\n     * Text to use as label for the vertical axis\r\n     * @type {string}\r\n     */\r\n    protected ylabel: string;\r\n    /**\r\n     * d3 time scale for the vertical axis\r\n     * @type {d3.scale.Linear<any, any>}\r\n     */\r\n    protected todScale: d3.scale.Linear<any, any>;\r\n    /**\r\n     * height of the axis\r\n     * @type {number}\r\n     */\r\n    protected height: number;\r\n    /**\r\n     * width in pixels that is occupied by the legend\r\n     * @type {number}\r\n     */\r\n    private _legendWidth: number;\r\n    /**\r\n     * Whether or not there is enough data defined to be able to draw anything.\r\n     * @type {boolean}\r\n     */\r\n    public canDraw: boolean;\r\n    /**\r\n     * Defines which key of your input data contains the datetime information\r\n     * based on which you want to create the symbols in the punchcard's body.\r\n     * The default value is 'datestr'\r\n     * @type {string}\r\n     */\r\n    protected datekey:string;\r\n\r\n    /**\r\n     * Constructs an instance of Base when given a crossfilter object and the\r\n     * name of a DOM element to draw in.\r\n     * @param  {CrossFilter.CrossFilter<any>} cf Crossfilter object\r\n     * containing the data\r\n     * @param  {string} domElemId DOM element identifier for the div in which to\r\n     * draw the punchcard graph\r\n     * @return {[type]} Returns an instance of Base class\r\n     */\r\n    constructor (cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\r\n\n        // the crossfilter object\n        this.cf = cf;\n\n        // the name of the DOM element\n        this.domElemId = domElemId;\n\n        // the DOM element by ID\n        this.domElem = document.getElementById(this.domElemId);\n\n        // all the dimensions are collected into one object, dim, which is\n        // initialized here:\n        this.dim = {};\r\n\r\n        // can only draw stuff after user has defined some dimensions\r\n        this.canDraw = false;\r\n\r\n        // the margins around the graph body\n        this.marginLeft = 70;\n        this.marginRight = 30;\n        this.marginTop = 50;\n        this.marginBottom = 110;\n        this.legendWidth = 80;\n\n        this.ylabel = 'Time of day';\n        this.title = '';\n\n        this.datekey = datekey || 'datestr';\r\n        this.colormap = new ColorMap();\r\n\r\n        this.domElem.classList.add('punchcard-common');\r\n\r\n        // beware: JavaScript magic happens here\r\n        let that:Base = this;\r\n        window.addEventListener('resize', function() {\r\n            that.onResize();\r\n        });\r\n    }\n\r\n\r\n\r\n\r\n    /**\r\n     * Placeholder method that does not do anything but needs to be here because\r\n     * it's called by .onResize(). This method should be overridden by classes\r\n     * that inherit from Base.\r\n     * @return {Base} return the (unchanged) instance of Base\r\n     */\r\n    public draw():Base {\r\n\r\n        // placeholder method to be overridden in classes that inherit from this class\r\n        return this;\r\n    }\r\n\n\n\n    /**\r\n     * Adds an SVG g element containing an SVG rect element with which to draw a\r\n     * border around the punchcard graph.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawBox():Base {\r\n        //\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop;\n\n\n        this.svg.append('g')\n            .attr('class', 'chartbody-box')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', w)\n                .attr('height', h)\n                .attr('class', 'chartbody-box');\n\n        return this;\n    }\n\r\n\r\n\n    /**\r\n     * Appends an SVG g element containing an SVG rect, the size of which is\r\n     * determined by the size of the SVG element minus the margins on 4 sides,\r\n     * and minus the width taken up by the legend. The rect constitutes the\r\n     * background of the punchcard's axes.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawChartBody():Base {\r\n        //\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop;\n\n\n        this.svg.append('g')\n            .attr('class', 'chartbody')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', w)\n                .attr('height', h)\n                .attr('class', 'chartbody');\n\n        return this;\n    }\n\n\n\n    protected drawFooter():Base {\r\n\r\n        let dx = this.domElem.clientWidth - this.marginRight - this.legendWidth;\r\n        let dy = this.domElem.clientHeight - this.marginBottom;\r\n        this.svg.append('g')\r\n            .attr('class', 'footer')\r\n            .append('text')\r\n            .text('')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\r\n            .style('text-anchor', 'end')\r\n            .attr('x', '-5px')\r\n            .attr('y', '-5px');\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Adds an SVG g element containing an SVG text element with which to label\r\n     * the horizontal axis.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawHorizontalAxisLabel():Base {\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft + 0.5 * w;\n        let dy:number = this.marginTop + h + 0.8 * this.marginBottom;\n\n        this.svg.append('g')\n            .attr('class', 'horizontal-axis-label')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .append('text')\n            .text(this.xlabel)\n            .attr('class', 'horizontal-axis-label');\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Adds a Legend to the plot, while resizing the punchcard as necessary.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawLegend():Base {\r\n        // draw the legend\n\n        let legend:Legend = new Legend(this);\r\n        legend.draw();\n\n\n        return this;\n    }\n\r\n\r\n\r\n    /**\r\n     * Adds an SVG element to the DOM, so that other methods you can do d3\r\n     * things with it later.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawSvg():Base {\r\n\n        this.svg = d3.select(this.domElem).append('svg')\n            .attr('width', this.domElem.clientWidth)\n            .attr('height', this.domElem.clientHeight);\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Adds an SVG g element containing an SVG text element representing the\r\n     * title of the punchcard graph.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawTitle():Base {\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let dx:number = this.marginLeft + 0.5 * w;\n        let dy:number = 0.5 * this.marginTop;\n\n        this.svg.append('g')\n            .attr('class', 'title')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .append('text')\n            .text(this.title)\n            .attr('class', 'title');\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Adds an SVG g element containing a d3.linear.axis representing the hour\r\n     * of day.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawVerticalAxis():Base {\r\n        //\n        let dx:number = this.marginLeft;\n        let dy:number = this.domElem.clientHeight - this.marginBottom;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n\n\n        this.todScale = d3.scale.linear()\n            .range([-h, 0])\n            .domain([0.0, 24.0]);\n\n        let todAxis = d3.svg.axis()\n            .orient('left')\n            .scale(this.todScale)\n            .tickValues([0, 3, 6, 9, 12, 15, 18, 21, 24])\n            .innerTickSize(5)\n            .outerTickSize(0);\n\n        this.svg.append('g')\n            .attr('class', 'vertical-axis')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(todAxis);\n\n        return this;\n\n    }\n\n\n\n    /**\r\n     * Adds an SVG g element containing an SVG text element with which to label\r\n     * the vertical axis.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    protected drawVerticalAxisLabel():Base {\r\n        //\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = 0.3 * this.marginLeft;\n        let dy:number = this.marginTop + 0.5 * h;\n\n        this.svg.append('g')\n            .attr('class', 'vertical-axis-label')\n            .attr('transform', 'translate(' + dx + ',' + dy + ') rotate(-90)')\n            .append('text')\n            .text(this.ylabel)\n            .attr('class', 'vertical-axis-label');\n\n        return this;\n\n    }\n\n\n\n\r\n\n\n    /**\r\n     * When the window is resized, redraw the punchcard graph in its entirety,\r\n     * while observing the new maximum size.\r\n     * @return {[type]} [description]\r\n     */\r\n    protected onResize() {\r\n\r\n        // get the div element that we want to redraw\r\n        let div = this.domElem;\r\n\r\n        // delete the contents of the div\r\n        while (div.firstChild) {\r\n            div.removeChild(div.firstChild);\r\n        }\r\n\r\n        this.draw();\r\n\r\n    }\r\n\r\n\r\n\r\n    protected onMouseOver(d:any) {\r\n        console.log(d);\r\n    }\r\n\r\n\r\n\r\n    protected onClick(d:any) {\r\n        console.log(d);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Sets the CSS style min-height such that the body of the punchcard graph\r\n     * cannot become smaller than 100px in height, while taking into account the\r\n     * margins on the top and bottom of the graph.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    private updateMinHeight():Base {\r\n\n        let top:number = this.marginTop;\n        let bottom:number = this.marginBottom;\n\n        if (typeof top === 'undefined' || top < 0) {\n            top = 0;\n        }\n\n        if (typeof bottom === 'undefined' || bottom < 0) {\n            bottom = 0;\n        }\n\n        this.domElem.style.minHeight = (top + bottom + 100).toString() + 'px';\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Sets the CSS style min-width such that the body of the punchcard graph\r\n     * cannot become narrower than 100px, while taking into account the\r\n     * margins on the left and right of the graph.\r\n     * @return {Base} returns a reference to the instance of Base\r\n     */\r\n    private updateMinWidth():Base {\r\n\n        let left:number = this.marginLeft;\n        let right:number = this.marginRight;\n\n        if (typeof left === 'undefined' || left < 0) {\n            left = 0;\n        }\n\n        if (typeof right === 'undefined' || right < 0) {\n            right = 0;\n        }\n\n        this.domElem.style.minWidth = (left + right + 100).toString() + 'px';\n\n        return this;\n    }\n\n\r\n    /**\r\n     * [marginLeft description]\r\n     * @param  {number} marginLeft [description]\r\n     * @return {[type]}            [description]\r\n     */\r\n    public set marginLeft(marginLeft:number) {\n        this._marginLeft = marginLeft;\n        this.updateMinWidth();\n    }\n\r\n    /**\r\n     * [marginLeft description]\r\n     * @return {number} [description]\r\n     */\r\n    public get marginLeft():number {\n        return this._marginLeft;\n    }\n\r\n    /**\r\n     * [marginRight description]\r\n     * @param  {number} marginRight [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    public set marginRight(marginRight:number) {\n        this._marginRight = marginRight;\n        this.updateMinWidth();\n    }\r\n\r\n    /**\r\n     * [marginRight description]\r\n     * @return {number} [description]\r\n     */\r\n    public get marginRight():number {\r\n        return this._marginRight;\n    }\n\r\n    /**\r\n     * [marginTop description]\r\n     * @param  {number} marginTop [description]\r\n     * @return {[type]}           [description]\r\n     */\r\n    public set marginTop(marginTop:number) {\n        this._marginTop = marginTop;\n        this.updateMinHeight();\n    }\n\r\n    /**\r\n     * [marginTop description]\r\n     * @return {number} [description]\r\n     */\r\n    public get marginTop():number {\n        return this._marginTop;\n    }\n\r\n    /**\r\n     * [marginBottom description]\r\n     * @param  {number} marginBottom [description]\r\n     * @return {[type]}              [description]\r\n     */\r\n    public set marginBottom(marginBottom:number) {\n        this._marginBottom = marginBottom;\n        this.updateMinHeight();\n    }\r\n\r\n    /**\r\n     * [marginBottom description]\r\n     * @return {number} [description]\r\n     */\r\n    public get marginBottom():number {\r\n        return this._marginBottom;\n    }\n\r\n    /**\r\n     * [legendWidth description]\r\n     * @param  {number} legendWidth [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    public set legendWidth(legendWidth:number) {\r\n        let minimumWidth:number = 50;\r\n        this._legendWidth = Math.max(legendWidth, 50);\r\n    }\r\n\r\n    /**\r\n     * [legendWidth description]\r\n     * @return {number} [description]\r\n     */\r\n    public get legendWidth():number {\r\n        return this._legendWidth;\r\n    }\r\n\r\n}\r\n\n\n","l":{"1":1,"2":1,"5":1,"6":1,"15":1,"125":1,"128":46,"131":46,"134":46,"138":46,"141":46,"144":46,"145":46,"146":46,"147":46,"148":46,"150":46,"151":46,"153":46,"154":46,"156":46,"159":46,"160":46,"161":191,"174":1,"177":96,"187":1,"189":97,"190":97,"191":97,"192":97,"195":97,"203":97,"215":1,"217":97,"218":97,"219":97,"220":97,"223":97,"231":97,"236":1,"238":95,"239":95,"240":95,"248":95,"258":1,"260":97,"261":97,"262":97,"263":97,"265":97,"272":97,"281":1,"284":95,"285":95,"288":95,"298":1,"300":136,"304":136,"314":1,"316":97,"317":97,"318":97,"320":97,"327":97,"337":1,"339":120,"340":120,"341":120,"344":120,"348":120,"355":120,"360":120,"371":1,"373":97,"374":97,"375":97,"377":97,"384":97,"398":1,"401":191,"404":191,"405":106,"408":191,"414":1,"415":0,"420":1,"421":0,"432":1,"434":107,"435":107,"437":107,"438":0,"441":107,"442":46,"445":107,"447":107,"458":1,"460":92,"461":92,"463":92,"464":0,"467":92,"468":46,"471":92,"473":92,"482":1,"483":46,"484":46,"492":1565,"500":1,"501":46,"502":46,"510":815,"518":1,"519":46,"520":46,"528":1528,"536":1,"537":61,"538":61,"546":1357,"554":1,"555":46,"556":46,"564":1483,"567":1}},
"src/colormap.ts":{"path":"src/colormap.ts","statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":402,"column":1}},"2":{"start":{"line":68,"column":4},"end":{"line":104,"column":5}},"3":{"start":{"line":70,"column":8},"end":{"line":70,"column":24}},"4":{"start":{"line":71,"column":8},"end":{"line":71,"column":28}},"5":{"start":{"line":73,"column":8},"end":{"line":93,"column":9}},"6":{"start":{"line":75,"column":12},"end":{"line":75,"column":28}},"7":{"start":{"line":76,"column":12},"end":{"line":76,"column":47}},"8":{"start":{"line":78,"column":15},"end":{"line":93,"column":9}},"9":{"start":{"line":80,"column":12},"end":{"line":80,"column":28}},"10":{"start":{"line":81,"column":12},"end":{"line":81,"column":54}},"11":{"start":{"line":83,"column":15},"end":{"line":93,"column":9}},"12":{"start":{"line":85,"column":12},"end":{"line":85,"column":28}},"13":{"start":{"line":86,"column":12},"end":{"line":90,"column":13}},"14":{"start":{"line":87,"column":16},"end":{"line":87,"column":44}},"15":{"start":{"line":89,"column":16},"end":{"line":89,"column":66}},"16":{"start":{"line":92,"column":12},"end":{"line":92,"column":77}},"17":{"start":{"line":97,"column":8},"end":{"line":97,"column":48}},"18":{"start":{"line":100,"column":8},"end":{"line":100,"column":45}},"19":{"start":{"line":101,"column":8},"end":{"line":101,"column":45}},"20":{"start":{"line":102,"column":8},"end":{"line":102,"column":56}},"21":{"start":{"line":119,"column":12},"end":{"line":128,"column":5}},"22":{"start":{"line":121,"column":8},"end":{"line":127,"column":9}},"23":{"start":{"line":122,"column":12},"end":{"line":122,"column":22}},"24":{"start":{"line":123,"column":15},"end":{"line":127,"column":9}},"25":{"start":{"line":124,"column":12},"end":{"line":124,"column":21}},"26":{"start":{"line":126,"column":12},"end":{"line":126,"column":21}},"27":{"start":{"line":137,"column":14},"end":{"line":299,"column":5}},"28":{"start":{"line":139,"column":8},"end":{"line":139,"column":34}},"29":{"start":{"line":141,"column":8},"end":{"line":295,"column":9}},"30":{"start":{"line":143,"column":16},"end":{"line":143,"column":56}},"31":{"start":{"line":144,"column":16},"end":{"line":144,"column":22}},"32":{"start":{"line":147,"column":16},"end":{"line":164,"column":18}},"33":{"start":{"line":165,"column":16},"end":{"line":165,"column":22}},"34":{"start":{"line":168,"column":16},"end":{"line":177,"column":18}},"35":{"start":{"line":178,"column":16},"end":{"line":178,"column":22}},"36":{"start":{"line":181,"column":16},"end":{"line":198,"column":18}},"37":{"start":{"line":199,"column":16},"end":{"line":199,"column":22}},"38":{"start":{"line":202,"column":16},"end":{"line":219,"column":18}},"39":{"start":{"line":220,"column":16},"end":{"line":220,"column":22}},"40":{"start":{"line":223,"column":16},"end":{"line":240,"column":18}},"41":{"start":{"line":241,"column":16},"end":{"line":241,"column":22}},"42":{"start":{"line":244,"column":16},"end":{"line":289,"column":18}},"43":{"start":{"line":290,"column":16},"end":{"line":290,"column":22}},"44":{"start":{"line":293,"column":16},"end":{"line":293,"column":80}},"45":{"start":{"line":297,"column":8},"end":{"line":297,"column":26}},"46":{"start":{"line":312,"column":11},"end":{"line":352,"column":5}},"47":{"start":{"line":316,"column":8},"end":{"line":319,"column":9}},"48":{"start":{"line":317,"column":12},"end":{"line":317,"column":32}},"49":{"start":{"line":318,"column":12},"end":{"line":318,"column":33}},"50":{"start":{"line":321,"column":8},"end":{"line":321,"column":75}},"51":{"start":{"line":322,"column":8},"end":{"line":322,"column":45}},"52":{"start":{"line":324,"column":8},"end":{"line":324,"column":32}},"53":{"start":{"line":325,"column":8},"end":{"line":325,"column":32}},"54":{"start":{"line":327,"column":8},"end":{"line":335,"column":9}},"55":{"start":{"line":328,"column":12},"end":{"line":328,"column":62}},"56":{"start":{"line":329,"column":12},"end":{"line":329,"column":65}},"57":{"start":{"line":330,"column":12},"end":{"line":334,"column":13}},"58":{"start":{"line":331,"column":16},"end":{"line":331,"column":47}},"59":{"start":{"line":332,"column":16},"end":{"line":332,"column":51}},"60":{"start":{"line":333,"column":16},"end":{"line":333,"column":22}},"61":{"start":{"line":337,"column":8},"end":{"line":337,"column":74}},"62":{"start":{"line":338,"column":8},"end":{"line":343,"column":10}},"63":{"start":{"line":345,"column":8},"end":{"line":349,"column":9}},"64":{"start":{"line":345,"column":13},"end":{"line":345,"column":24}},"65":{"start":{"line":346,"column":12},"end":{"line":348,"column":13}},"66":{"start":{"line":347,"column":16},"end":{"line":347,"column":67}},"67":{"start":{"line":351,"column":8},"end":{"line":351,"column":24}},"68":{"start":{"line":362,"column":11},"end":{"line":367,"column":5}},"69":{"start":{"line":364,"column":8},"end":{"line":364,"column":43}},"70":{"start":{"line":365,"column":8},"end":{"line":365,"column":34}},"71":{"start":{"line":366,"column":8},"end":{"line":366,"column":73}},"72":{"start":{"line":376,"column":11},"end":{"line":382,"column":5}},"73":{"start":{"line":378,"column":8},"end":{"line":378,"column":36}},"74":{"start":{"line":379,"column":8},"end":{"line":379,"column":61}},"75":{"start":{"line":381,"column":8},"end":{"line":381,"column":20}},"76":{"start":{"line":389,"column":11},"end":{"line":397,"column":5}},"77":{"start":{"line":391,"column":8},"end":{"line":393,"column":9}},"78":{"start":{"line":391,"column":13},"end":{"line":391,"column":21}},"79":{"start":{"line":392,"column":12},"end":{"line":392,"column":39}},"80":{"start":{"line":394,"column":8},"end":{"line":394,"column":61}},"81":{"start":{"line":396,"column":8},"end":{"line":396,"column":20}},"82":{"start":{"line":44,"column":11},"end":{"line":61,"column":6}},"83":{"start":{"line":402,"column":0},"end":{"line":402,"column":1}},"84":{"start":{"line":21,"column":13},"end":{"line":402,"column":1}}},"fnMap":{"1":{"name":"(anonymous_37)","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"ColorMap","line":68,"loc":{"start":{"line":68,"column":4},"end":{"line":68,"column":46}}},"3":{"name":"(anonymous_39)","line":119,"loc":{"start":{"line":119,"column":4},"end":{"line":119,"column":54}}},"4":{"name":"(anonymous_40)","line":137,"loc":{"start":{"line":137,"column":4},"end":{"line":137,"column":44}}},"5":{"name":"(anonymous_41)","line":312,"loc":{"start":{"line":312,"column":4},"end":{"line":312,"column":29}}},"6":{"name":"(anonymous_42)","line":362,"loc":{"start":{"line":362,"column":4},"end":{"line":362,"column":32}}},"7":{"name":"(anonymous_43)","line":376,"loc":{"start":{"line":376,"column":4},"end":{"line":376,"column":41}}},"8":{"name":"(anonymous_44)","line":389,"loc":{"start":{"line":389,"column":4},"end":{"line":389,"column":38}}}},"branchMap":{"1":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":7}},{"start":{"line":73,"column":8},"end":{"line":73,"column":7}}]},"2":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":15},"end":{"line":78,"column":14}},{"start":{"line":78,"column":15},"end":{"line":78,"column":14}}]},"3":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":15},"end":{"line":83,"column":14}},{"start":{"line":83,"column":15},"end":{"line":83,"column":14}}]},"4":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":7}},{"start":{"line":121,"column":8},"end":{"line":121,"column":7}}]},"5":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":15},"end":{"line":123,"column":14}},{"start":{"line":123,"column":15},"end":{"line":123,"column":14}}]},"6":{"line":142,"type":"switch","locations":[{"start":{"line":142,"column":12},"end":{"line":145,"column":13}},{"start":{"line":146,"column":12},"end":{"line":166,"column":13}},{"start":{"line":167,"column":12},"end":{"line":179,"column":13}},{"start":{"line":180,"column":12},"end":{"line":200,"column":13}},{"start":{"line":201,"column":12},"end":{"line":221,"column":13}},{"start":{"line":222,"column":12},"end":{"line":242,"column":13}},{"start":{"line":243,"column":12},"end":{"line":291,"column":13}},{"start":{"line":292,"column":12},"end":{"line":294,"column":13}}]},"7":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":8},"end":{"line":316,"column":7}},{"start":{"line":316,"column":8},"end":{"line":316,"column":7}}]},"8":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":12},"end":{"line":330,"column":11}},{"start":{"line":330,"column":12},"end":{"line":330,"column":11}}]},"9":{"line":330,"type":"binary-expr","locations":[{"start":{"line":330,"column":16},"end":{"line":330,"column":21}},{"start":{"line":330,"column":25},"end":{"line":330,"column":30}}]},"10":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":12},"end":{"line":346,"column":11}},{"start":{"line":346,"column":12},"end":{"line":346,"column":11}}]},"11":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":16},"end":{"line":346,"column":27}},{"start":{"line":346,"column":31},"end":{"line":346,"column":44}}]}},"s":{"1":1,"2":1,"3":101,"4":101,"5":101,"6":47,"7":47,"8":54,"9":52,"10":52,"11":2,"12":1,"13":1,"14":1,"15":0,"16":1,"17":100,"18":100,"19":100,"20":100,"21":1,"22":700,"23":3,"24":697,"25":697,"26":0,"27":1,"28":99,"29":99,"30":64,"31":64,"32":3,"33":3,"34":1,"35":1,"36":0,"37":0,"38":8,"39":8,"40":15,"41":15,"42":8,"43":8,"44":0,"45":99,"46":1,"47":20025,"48":46,"49":46,"50":20025,"51":20025,"52":20025,"53":20025,"54":20025,"55":66015,"56":66015,"57":66015,"58":20025,"59":20025,"60":20025,"61":20025,"62":20025,"63":20025,"64":80100,"65":80100,"66":0,"67":20025,"68":1,"69":20025,"70":20025,"71":20025,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":2,"79":2,"80":1,"81":1,"82":1,"83":1,"84":1},"b":{"1":[47,54],"2":[52,2],"3":[1,1],"4":[3,697],"5":[697,0],"6":[64,3,1,0,8,15,8,0],"7":[46,19979],"8":[20025,45990],"9":[66015,66015],"10":[0,80100],"11":[80100,80100]},"f":{"1":1,"2":101,"3":700,"4":99,"5":20025,"6":20025,"7":1,"8":1},"code":"\n/**\r\n * Associates a point in the domain space to a color\r\n * @type {Object}\r\n */\r\ntype ColorTableItem = {\n    at   : number;\n    color: [number, number, number];\n}\n\r\n/**\r\n * An array of ColorTableItems\r\n * @type {[type]}\r\n */\r\ntype ColorTable = Array<ColorTableItem>;\r\n\n/**\r\n * ColorMap helps you associate values from the domain to rgba color values,\r\n * where each channel is in the range [0,255]\r\n */\r\nexport class ColorMap {\r\n\r\n    /**\r\n     * Array of ColorTableItems, where each ColorTableItem associates a point\r\n     * along the domain's number line to an rgba color.\r\n     * @type {ColorTable}\r\n     */\r\n    public colortable: ColorTable;\r\n    /**\r\n     * Domain value assocatiated with the lowest color from the ColorMap.\r\n     * @type {number}\r\n     */\r\n    public cLimLow: number;\r\n    /**\r\n     * Domain value assocatiated with the highest color from the ColorMap.\r\n     * @type {number}\r\n     */\r\n    public cLimHigh: number;\r\n    /**\r\n     * if the user does not specify which ColorMap she wants to use,\r\n     * defaultColorTable is what she'll get.\r\n     * @type {ColorTable}\r\n     */\r\n    static defaultColorTable:ColorTable = [\n        {\n            at: Number.NEGATIVE_INFINITY,\n            color: [255, 255, 255, 255]\n        },\n        {\n            at: 0.0,\n            color: [8, 106, 227, 0]\n        },\n        {\n            at: 1.0,\n            color: [227, 8, 88, 0]\n        },\n        {\n            at: Number.POSITIVE_INFINITY,\n            color: [255, 255, 255, 255]\n        }\n    ];\n\n    /**\r\n     * [constructor description]\r\n     * @param  {ColorTable|string} colortable [description]\r\n     * @return {[type]}                       [description]\r\n     */\r\n    constructor (colortable?:ColorTable|string) {\n\n        let str: string;\n        let ct : ColorTable;\r\n\r\n        if (typeof colortable === 'undefined') {\r\n\r\n            str = 'default';\r\n            ct = this.expandColorTableStr(str);\n\n        } else if (typeof colortable === 'string') {\n\r\n            str = undefined;\r\n            ct = this.expandColorTableStr(colortable);\n\n        } else if (typeof colortable === 'object') {\r\n\r\n            str = undefined;\r\n            try {\r\n                ct = <ColorTable>colortable;\r\n            } catch (Error) {\r\n                throw new Error('Can\\'t cast to ColorTable type');\r\n            }\r\n        } else {\r\n            throw new Error('Undefined behavior for these input arguments.');\r\n        }\r\n\n        // use my own compare function to sort the array based on the value of\n        // each element's 'at' property:\n        this.colortable = ct.sort(this.compare);\n\n        // adjust the color limits\n        let nColors = this.colortable.length;\n        this.cLimLow = this.colortable[1].at;\n        this.cLimHigh = this.colortable[nColors - 2].at;\n\n    }\n\n\n    /**\r\n     * comparison function to help sort the ColorTableItems that make\r\n     * up a ColorTable. Basically when comparing objects, you have to specify\r\n     * which key you want to compare/sort on, which for this function is the\r\n     * value of a ColorTableItem's 'at' key.\r\n     * @param  {ColorTableItem} a the first ColorTableItem (left hand side\r\n     * member of the comparison)\r\n     * @param  {ColorTableItem} b the second ColorTableItem (right hand side\r\n     * of the comparison)\r\n     * @return {number} number identifying how a nd b compare. Returns -1 when\r\n     * a<b, 1 when a>b, or 0 when a==b\r\n     */\r\n    private compare(a:ColorTableItem, b:ColorTableItem):number {\n\n        if (a.at < b.at) {\n            return -1;\n        } else if (a.at > b.at) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n\n    /**\r\n     * Returns a ColorTable based on an input string\r\n     * @param  {string} input string, e.g. 'default', 'gray', 'empty',\r\n     * 'autumn', 'blues', 'summer', 'rainbow'\r\n     * @return {ColorTable} The ColorTable associated with the input string\r\n     */\r\n    protected expandColorTableStr(str:string):ColorTable {\r\n\n        let colortable:ColorTable;\n\n        switch (str) {\n            case 'default': {\n                colortable = ColorMap.defaultColorTable;\r\n                break;\n            }\n            case 'gray': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [0, 0, 0, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [255, 255, 255, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\r\n            }\n            case 'empty': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'autumn': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [255, 0, 0, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [255, 255, 0, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'blues': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [0, 0, 255, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [0, 255, 255, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'summer': {\n                colortable = [\n                    {\n                        at: Number.NEGATIVE_INFINITY,\n                        color: [0, 0, 0, 255]\n                    },\n                    {\n                        at: 0.0,\n                        color: [8, 160, 120, 0]\n                    },\n                    {\n                        at: 1.0,\n                        color: [252, 252, 42, 0]\n                    },\n                    {\n                        at: Number.POSITIVE_INFINITY,\n                        color: [255, 255, 255, 255]\n                    }\n                ];\n                break;\n            }\n            case 'rainbow': {\n                colortable = [\n                    {\n                        at:Number.NEGATIVE_INFINITY,\n                        color: [255, 255,   0,  0]\n                    },\n                    {\n                        at:0.000,\n                        color: [255, 255,   0,  0]\n                    },\n                    {\n                        at:0.125,\n                        color: [255, 255,   0,  0]\n                    },\n                    {\n                        at:0.250,\n                        color: [145, 255,   0,  0]\n                    },\n                    {\n                        at:0.375,\n                        color: [  0, 255,  54,  0]\n                    },\n                    {\n                        at:0.500,\n                        color: [  0, 179, 255,  0]\n                    },\n                    {\n                        at:0.625,\n                        color: [ 10,   0, 255,  0]\n                    },\n                    {\n                        at:0.750,\n                        color: [171,   0, 255,  0]\n                    },\n                    {\n                        at:0.875,\n                        color: [255,   0, 159,  0]\n                    },\n                    {\n                        at:1.000,\n                        color: [255,  89,   0,  0]\n                    },\n                    {\n                        at:Number.POSITIVE_INFINITY,\n                        color: [255,  89,   0,  0]\n                    }\n                ];\n                break;\n            }\n            default: {\n                throw new Error('ColorMap.expandColorTableStr(): unknown case');\n            }\n        }\n\n        return colortable;\n\n    }\n\n\n\n    /**\r\n     * Returns an rgba color array based on the current colormap (including the\r\n     * domain values at the upper and lower boundaries of the ColorMap) and an\r\n     * input domain value. The color values are determined by linear\r\n     * interpolation between the known color values, as defined by the ColorMap.\r\n     * @param  {number} at Value for which you want to know the associated color\r\n     * @return {[type]} 4-D vector containing rgba value of the color, with 0\r\n     * represetning zero intensity and 255 full intensity.\r\n     */\r\n    public getColor(at:number):[number, number, number, number] {\r\n\n        // if there is only one value in the range, lower the lower limit and\r\n        // raise the upper limit\r\n        if (this.cLimLow === this.cLimHigh) {\n            this.cLimLow -= 0.5;\n            this.cLimHigh += 0.5;\n        }\n\n        let atUnity = (at - this.cLimLow) / (this.cLimHigh - this.cLimLow);\n        let nColors = this.colortable.length;\n\n        let prev:ColorTableItem;\r\n        let next:ColorTableItem;\r\n\n        for (let iColor = 0; iColor < nColors; iColor++) {\n            let cond1 = this.colortable[iColor].at <= atUnity;\n            let cond2 = atUnity < this.colortable[iColor + 1].at;\n            if (cond1 && cond2) {\n                prev = this.colortable[iColor];\n                next = this.colortable[iColor + 1];\n                break;\n            }\n        }\n\n        let atRelative:number = (atUnity - prev.at) / (next.at - prev.at);\n        let theColor: [number, number, number, number] = [\n            Math.floor(prev.color[0] + (next.color[0] - prev.color[0]) * atRelative),\n            Math.floor(prev.color[1] + (next.color[1] - prev.color[1]) * atRelative),\n            Math.floor(prev.color[2] + (next.color[2] - prev.color[2]) * atRelative),\n            255\n        ];\n\n        for (let channel of theColor) {\n            if (channel < 0 || channel > 255) {\n                throw new Error('Calculated color out of bounds.');\n            }\n        }\n\n        return theColor;\n    }\n\n\n\n    /**\r\n     * CSS string representation of the result returned by ColorMap.getColor().\r\n     * Note that the string does not include a transparency value.\r\n     * @param  {number} at Value for which you want to know the associated color.\r\n     * @return {string} CSS string representing the rgb color.\r\n     */\r\n    public getColorRGB(at:number):string {\n\n        let color:[number, number, number];\n        color = this.getColor(at);\n        return 'rgb(' + color[0] + ',' + color[1] + ',' + color[2] + ')';\n    }\n\n\n\n    /**\r\n     * Add a ColorTableItem to the current ColorMap\r\n     * @param  {ColorTableItem} color Color to add, with linkage to domain value.\r\n     * @return {ColorMap} Updated ColorMap\r\n     */\r\n    public addColor(color: ColorTableItem): ColorMap {\r\n\n        this.colortable.push(color);\n        this.colortable = this.colortable.sort(this.compare);\n\n        return this;\n    }\n\r\n    /**\r\n     * Add multiple ColorTableItems to the ColorMap\r\n     * @param  {ColorTable} colors Colors to add to the ColorMap\r\n     * @return {ColorMap} Updated Colormap\r\n     */\r\n    public addColors(colors:ColorTable): ColorMap {\r\n\n        for (let elem of colors) {\n            this.colortable.push(elem);\n        }\n        this.colortable = this.colortable.sort(this.compare);\n\n        return this;\n    }\n\n\n\r\n\r\n}","l":{"21":1,"44":1,"68":1,"70":101,"71":101,"73":101,"75":47,"76":47,"78":54,"80":52,"81":52,"83":2,"85":1,"86":1,"87":1,"89":0,"92":1,"97":100,"100":100,"101":100,"102":100,"119":1,"121":700,"122":3,"123":697,"124":697,"126":0,"137":1,"139":99,"141":99,"143":64,"144":64,"147":3,"165":3,"168":1,"178":1,"181":0,"199":0,"202":8,"220":8,"223":15,"241":15,"244":8,"290":8,"293":0,"297":99,"312":1,"316":20025,"317":46,"318":46,"321":20025,"322":20025,"324":20025,"325":20025,"327":20025,"328":66015,"329":66015,"330":66015,"331":20025,"332":20025,"333":20025,"337":20025,"338":20025,"345":80100,"346":80100,"347":0,"351":20025,"362":1,"364":20025,"365":20025,"366":20025,"376":1,"378":1,"379":1,"381":1,"389":1,"391":2,"392":2,"394":1,"396":1,"402":1}},
"src/date-circle.ts":{"path":"src/date-circle.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":21}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":12}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"6":{"start":{"line":13,"column":0},"end":{"line":118,"column":1}},"7":{"start":{"line":13,"column":32},"end":{"line":13,"column":40}},"8":{"start":{"line":16,"column":4},"end":{"line":27,"column":5}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":38}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":40}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":48}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":33}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":61}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":60}},"16":{"start":{"line":32,"column":14},"end":{"line":115,"column":5}},"17":{"start":{"line":35,"column":8},"end":{"line":35,"column":35}},"18":{"start":{"line":37,"column":8},"end":{"line":37,"column":105}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":87}},"20":{"start":{"line":39,"column":8},"end":{"line":39,"column":40}},"21":{"start":{"line":40,"column":8},"end":{"line":40,"column":43}},"22":{"start":{"line":41,"column":8},"end":{"line":41,"column":65}},"23":{"start":{"line":42,"column":8},"end":{"line":42,"column":89}},"24":{"start":{"line":44,"column":8},"end":{"line":44,"column":85}},"25":{"start":{"line":45,"column":8},"end":{"line":45,"column":84}},"26":{"start":{"line":46,"column":8},"end":{"line":46,"column":67}},"27":{"start":{"line":51,"column":8},"end":{"line":51,"column":54}},"28":{"start":{"line":52,"column":8},"end":{"line":55,"column":11}},"29":{"start":{"line":54,"column":12},"end":{"line":54,"column":38}},"30":{"start":{"line":56,"column":8},"end":{"line":56,"column":35}},"31":{"start":{"line":61,"column":8},"end":{"line":61,"column":46}},"32":{"start":{"line":62,"column":8},"end":{"line":62,"column":47}},"33":{"start":{"line":63,"column":8},"end":{"line":70,"column":9}},"34":{"start":{"line":63,"column":13},"end":{"line":63,"column":21}},"35":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"36":{"start":{"line":65,"column":16},"end":{"line":65,"column":36}},"37":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"38":{"start":{"line":68,"column":16},"end":{"line":68,"column":37}},"39":{"start":{"line":71,"column":8},"end":{"line":71,"column":39}},"40":{"start":{"line":72,"column":8},"end":{"line":72,"column":41}},"41":{"start":{"line":76,"column":8},"end":{"line":111,"column":23}},"42":{"start":{"line":86,"column":24},"end":{"line":86,"column":77}},"43":{"start":{"line":89,"column":24},"end":{"line":89,"column":114}},"44":{"start":{"line":92,"column":24},"end":{"line":92,"column":75}},"45":{"start":{"line":93,"column":24},"end":{"line":93,"column":90}},"46":{"start":{"line":94,"column":24},"end":{"line":98,"column":25}},"47":{"start":{"line":95,"column":28},"end":{"line":95,"column":50}},"48":{"start":{"line":97,"column":28},"end":{"line":97,"column":66}},"49":{"start":{"line":101,"column":24},"end":{"line":101,"column":66}},"50":{"start":{"line":104,"column":24},"end":{"line":104,"column":40}},"51":{"start":{"line":107,"column":24},"end":{"line":107,"column":44}},"52":{"start":{"line":110,"column":24},"end":{"line":110,"column":42}},"53":{"start":{"line":113,"column":8},"end":{"line":113,"column":20}},"54":{"start":{"line":118,"column":0},"end":{"line":118,"column":1}},"55":{"start":{"line":13,"column":13},"end":{"line":118,"column":1}}},"fnMap":{"1":{"name":"(anonymous_49)","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"DateCircle","line":16,"loc":{"start":{"line":16,"column":4},"end":{"line":16,"column":85}}},"3":{"name":"(anonymous_51)","line":32,"loc":{"start":{"line":32,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_52)","line":52,"loc":{"start":{"line":52,"column":28},"end":{"line":52,"column":42}}},"5":{"name":"(anonymous_53)","line":85,"loc":{"start":{"line":85,"column":32},"end":{"line":85,"column":46}}},"6":{"name":"(anonymous_54)","line":88,"loc":{"start":{"line":88,"column":32},"end":{"line":88,"column":46}}},"7":{"name":"(anonymous_55)","line":91,"loc":{"start":{"line":91,"column":31},"end":{"line":91,"column":45}}},"8":{"name":"(anonymous_56)","line":100,"loc":{"start":{"line":100,"column":34},"end":{"line":100,"column":48}}},"9":{"name":"(anonymous_57)","line":103,"loc":{"start":{"line":103,"column":33},"end":{"line":103,"column":47}}},"10":{"name":"(anonymous_58)","line":106,"loc":{"start":{"line":106,"column":37},"end":{"line":106,"column":51}}},"11":{"name":"(anonymous_59)","line":109,"loc":{"start":{"line":109,"column":36},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}}]},"2":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":16},"end":{"line":null,"column":-1}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":11}},{"start":{"line":64,"column":12},"end":{"line":64,"column":11}}]},"5":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":11}},{"start":{"line":67,"column":12},"end":{"line":67,"column":11}}]},"6":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":24},"end":{"line":94,"column":23}},{"start":{"line":94,"column":24},"end":{"line":94,"column":23}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":8,"10":8,"11":8,"12":8,"13":8,"14":8,"15":8,"16":1,"17":45,"18":45,"19":45,"20":45,"21":45,"22":45,"23":45,"24":45,"25":45,"26":45,"27":45,"28":45,"29":2397,"30":45,"31":45,"32":45,"33":45,"34":2397,"35":2397,"36":147,"37":2397,"38":187,"39":45,"40":45,"41":45,"42":2397,"43":2397,"44":2397,"45":2397,"46":2397,"47":22,"48":2375,"49":2397,"50":0,"51":0,"52":0,"53":45,"54":1,"55":1},"b":{"1":[1,0],"2":[1,0],"3":[1,0],"4":[147,2250],"5":[187,2210],"6":[22,2375]},"f":{"1":1,"2":8,"3":45,"4":2397,"5":2397,"6":2397,"7":2397,"8":2397,"9":0,"10":0,"11":0},"code":"import 'crossfilter';\r\nimport 'd3';\r\nimport 'moment';\r\n\r\n\r\nimport {ColorMap} from './colormap';\r\nimport {DateRect} from './date-rect';\r\n\r\n\r\n/**\r\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\r\n */\r\nexport class DateCircle extends DateRect {\r\n\n\n    constructor (cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\r\n\n        super(cf, domElemId, datekey);\r\n\r\n        this.xlabel = '';\n        this.title = 'DateCircle title';\r\n        this.colormap = new ColorMap('rainbow');\r\n        super.defineDimensions();\r\n        this.domElem.classList.remove('punchcard-date-rect');\r\n        this.domElem.classList.add('punchcard-date-circle');\r\n\r\n    }\n\n\n\n\n    protected drawSymbols():DateCircle {\r\n\n        // capture the this object\n        let that:DateCircle = this;\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop + h;\n        let symbolMargin = {left:0, right: 0, top: 0, bottom: 0}; // pixels\n        let wDays:number = moment(this.dateTo).diff(moment(this.dateFrom), 'days', true);\n\n        let symbolWidth :number = w / wDays - symbolMargin.left - symbolMargin.right;\n        let symbolHeight:number = h / 24.0 - symbolMargin.top - symbolMargin.bottom;\n        let r:number = Math.min(symbolWidth, symbolHeight) / 2 - 2;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        let group = this.dim.dateAndHourOfDay.group();\n        group.all().forEach(function(d:any) {\r\n            //parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        let data:any = group.all();\n\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (let elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n\n        // draw the circles\r\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('circle.symbol')\n                .data(data)\n                .enter()\n                .append('circle')\n                    .attr('class', 'symbol')\n                    .attr('cx', function(d:any){\r\n                        return that.dateScale(new Date(d.key[that.datekey]));\r\n                        })\n                    .attr('cy', function(d:any){\r\n                        return that.todScale(parseInt(d.key.hourOfDay, 10)) + symbolMargin.top + symbolHeight / 2;\n                    })\n                    .attr('r', function(d:any) {\r\n                        let numer:number = d.value - that.colormap.cLimLow;\r\n                        let denom:number = that.colormap.cLimHigh - that.colormap.cLimLow;\r\n                        if (denom === 0) {\r\n                            return Math.max(r, 1);\r\n                        } else {\r\n                            return Math.max(r * numer / denom, 1);\r\n                        }\r\n                    })\r\n                    .attr('fill', function(d:any){\r\n                        return that.colormap.getColorRGB(d.value);\n                    })\r\n                    .on('click', function(d:any){\r\n                        that.onClick(d);\r\n                    })\r\n                    .on('mouseover', function(d:any){\r\n                        that.onMouseOver(d);\r\n                    })\r\n                    .on('mouseout', function(){\r\n                        that.onMouseOut();\r\n                    });\r\n\n        return this;\n\n    }\n\n\n}\n\n\n","l":{"1":1,"2":1,"3":1,"6":1,"7":1,"13":1,"16":1,"18":8,"20":8,"21":8,"22":8,"23":8,"24":8,"25":8,"32":1,"35":45,"37":45,"38":45,"39":45,"40":45,"41":45,"42":45,"44":45,"45":45,"46":45,"51":45,"52":45,"54":2397,"56":45,"61":45,"62":45,"63":2397,"64":2397,"65":147,"67":2397,"68":187,"71":45,"72":45,"76":45,"86":2397,"89":2397,"92":2397,"93":2397,"94":2397,"95":22,"97":2375,"101":2397,"104":0,"107":0,"110":0,"113":45,"118":1}},
"src/date-rect.ts":{"path":"src/date-rect.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":21}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":12}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"6":{"start":{"line":12,"column":0},"end":{"line":279,"column":1}},"7":{"start":{"line":12,"column":30},"end":{"line":12,"column":34}},"8":{"start":{"line":26,"column":4},"end":{"line":36,"column":5}},"9":{"start":{"line":28,"column":8},"end":{"line":28,"column":38}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":25}},"11":{"start":{"line":31,"column":8},"end":{"line":31,"column":38}},"12":{"start":{"line":32,"column":8},"end":{"line":32,"column":48}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":32}},"14":{"start":{"line":34,"column":8},"end":{"line":34,"column":58}},"15":{"start":{"line":45,"column":14},"end":{"line":67,"column":5}},"16":{"start":{"line":48,"column":8},"end":{"line":48,"column":33}},"17":{"start":{"line":52,"column":8},"end":{"line":64,"column":11}},"18":{"start":{"line":53,"column":12},"end":{"line":53,"column":32}},"19":{"start":{"line":54,"column":12},"end":{"line":63,"column":13}},"20":{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},"21":{"start":{"line":56,"column":16},"end":{"line":56,"column":33}},"22":{"start":{"line":57,"column":16},"end":{"line":57,"column":59}},"23":{"start":{"line":58,"column":16},"end":{"line":58,"column":45}},"24":{"start":{"line":60,"column":16},"end":{"line":60,"column":43}},"25":{"start":{"line":62,"column":16},"end":{"line":62,"column":53}},"26":{"start":{"line":65,"column":8},"end":{"line":65,"column":28}},"27":{"start":{"line":66,"column":8},"end":{"line":66,"column":20}},"28":{"start":{"line":87,"column":11},"end":{"line":110,"column":5}},"29":{"start":{"line":89,"column":8},"end":{"line":109,"column":9}},"30":{"start":{"line":91,"column":12},"end":{"line":91,"column":24}},"31":{"start":{"line":94,"column":12},"end":{"line":107,"column":13}},"32":{"start":{"line":96,"column":16},"end":{"line":96,"column":32}},"33":{"start":{"line":97,"column":16},"end":{"line":97,"column":38}},"34":{"start":{"line":98,"column":16},"end":{"line":98,"column":42}},"35":{"start":{"line":99,"column":16},"end":{"line":99,"column":48}},"36":{"start":{"line":100,"column":16},"end":{"line":100,"column":41}},"37":{"start":{"line":101,"column":16},"end":{"line":101,"column":46}},"38":{"start":{"line":102,"column":16},"end":{"line":102,"column":34}},"39":{"start":{"line":103,"column":16},"end":{"line":103,"column":35}},"40":{"start":{"line":104,"column":16},"end":{"line":104,"column":32}},"41":{"start":{"line":105,"column":16},"end":{"line":105,"column":35}},"42":{"start":{"line":106,"column":16},"end":{"line":106,"column":35}},"43":{"start":{"line":108,"column":12},"end":{"line":108,"column":24}},"44":{"start":{"line":119,"column":12},"end":{"line":169,"column":5}},"45":{"start":{"line":121,"column":8},"end":{"line":121,"column":105}},"46":{"start":{"line":122,"column":8},"end":{"line":122,"column":40}},"47":{"start":{"line":123,"column":8},"end":{"line":123,"column":70}},"48":{"start":{"line":125,"column":8},"end":{"line":125,"column":93}},"49":{"start":{"line":126,"column":8},"end":{"line":126,"column":131}},"50":{"start":{"line":128,"column":8},"end":{"line":128,"column":89}},"51":{"start":{"line":129,"column":8},"end":{"line":129,"column":131}},"52":{"start":{"line":131,"column":8},"end":{"line":131,"column":38}},"53":{"start":{"line":132,"column":8},"end":{"line":132,"column":32}},"54":{"start":{"line":133,"column":8},"end":{"line":133,"column":95}},"55":{"start":{"line":135,"column":8},"end":{"line":141,"column":9}},"56":{"start":{"line":136,"column":12},"end":{"line":136,"column":57}},"57":{"start":{"line":137,"column":12},"end":{"line":137,"column":22}},"58":{"start":{"line":139,"column":12},"end":{"line":139,"column":57}},"59":{"start":{"line":140,"column":12},"end":{"line":140,"column":33}},"60":{"start":{"line":143,"column":8},"end":{"line":146,"column":35}},"61":{"start":{"line":148,"column":8},"end":{"line":152,"column":36}},"62":{"start":{"line":154,"column":8},"end":{"line":157,"column":28}},"63":{"start":{"line":160,"column":8},"end":{"line":165,"column":45}},"64":{"start":{"line":167,"column":8},"end":{"line":167,"column":20}},"65":{"start":{"line":180,"column":14},"end":{"line":255,"column":5}},"66":{"start":{"line":183,"column":8},"end":{"line":183,"column":33}},"67":{"start":{"line":185,"column":8},"end":{"line":185,"column":105}},"68":{"start":{"line":186,"column":8},"end":{"line":186,"column":87}},"69":{"start":{"line":187,"column":8},"end":{"line":187,"column":40}},"70":{"start":{"line":188,"column":8},"end":{"line":188,"column":43}},"71":{"start":{"line":189,"column":8},"end":{"line":189,"column":65}},"72":{"start":{"line":190,"column":8},"end":{"line":190,"column":89}},"73":{"start":{"line":192,"column":8},"end":{"line":192,"column":85}},"74":{"start":{"line":193,"column":8},"end":{"line":193,"column":84}},"75":{"start":{"line":198,"column":8},"end":{"line":198,"column":54}},"76":{"start":{"line":199,"column":8},"end":{"line":202,"column":11}},"77":{"start":{"line":201,"column":12},"end":{"line":201,"column":38}},"78":{"start":{"line":203,"column":8},"end":{"line":203,"column":35}},"79":{"start":{"line":208,"column":8},"end":{"line":208,"column":46}},"80":{"start":{"line":209,"column":8},"end":{"line":209,"column":47}},"81":{"start":{"line":210,"column":8},"end":{"line":217,"column":9}},"82":{"start":{"line":210,"column":13},"end":{"line":210,"column":21}},"83":{"start":{"line":211,"column":12},"end":{"line":213,"column":13}},"84":{"start":{"line":212,"column":16},"end":{"line":212,"column":36}},"85":{"start":{"line":214,"column":12},"end":{"line":216,"column":13}},"86":{"start":{"line":215,"column":16},"end":{"line":215,"column":37}},"87":{"start":{"line":218,"column":8},"end":{"line":218,"column":39}},"88":{"start":{"line":219,"column":8},"end":{"line":219,"column":41}},"89":{"start":{"line":223,"column":8},"end":{"line":251,"column":23}},"90":{"start":{"line":233,"column":24},"end":{"line":233,"column":77}},"91":{"start":{"line":236,"column":24},"end":{"line":236,"column":76}},"92":{"start":{"line":241,"column":24},"end":{"line":241,"column":66}},"93":{"start":{"line":244,"column":24},"end":{"line":244,"column":40}},"94":{"start":{"line":247,"column":24},"end":{"line":247,"column":44}},"95":{"start":{"line":250,"column":24},"end":{"line":250,"column":42}},"96":{"start":{"line":253,"column":8},"end":{"line":253,"column":20}},"97":{"start":{"line":262,"column":14},"end":{"line":268,"column":5}},"98":{"start":{"line":263,"column":8},"end":{"line":265,"column":33}},"99":{"start":{"line":266,"column":8},"end":{"line":266,"column":61}},"100":{"start":{"line":267,"column":8},"end":{"line":267,"column":20}},"101":{"start":{"line":272,"column":14},"end":{"line":275,"column":5}},"102":{"start":{"line":273,"column":8},"end":{"line":273,"column":60}},"103":{"start":{"line":274,"column":8},"end":{"line":274,"column":20}},"104":{"start":{"line":279,"column":0},"end":{"line":279,"column":1}},"105":{"start":{"line":12,"column":13},"end":{"line":279,"column":1}}},"fnMap":{"1":{"name":"(anonymous_64)","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"DateRect","line":26,"loc":{"start":{"line":26,"column":4},"end":{"line":26,"column":85}}},"3":{"name":"(anonymous_66)","line":45,"loc":{"start":{"line":45,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_67)","line":52,"loc":{"start":{"line":52,"column":54},"end":{"line":52,"column":69}}},"5":{"name":"(anonymous_68)","line":87,"loc":{"start":{"line":87,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_69)","line":119,"loc":{"start":{"line":119,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_70)","line":180,"loc":{"start":{"line":180,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_71)","line":199,"loc":{"start":{"line":199,"column":28},"end":{"line":199,"column":42}}},"9":{"name":"(anonymous_72)","line":232,"loc":{"start":{"line":232,"column":31},"end":{"line":232,"column":45}}},"10":{"name":"(anonymous_73)","line":235,"loc":{"start":{"line":235,"column":31},"end":{"line":235,"column":45}}},"11":{"name":"(anonymous_74)","line":240,"loc":{"start":{"line":240,"column":34},"end":{"line":240,"column":48}}},"12":{"name":"(anonymous_75)","line":243,"loc":{"start":{"line":243,"column":33},"end":{"line":243,"column":47}}},"13":{"name":"(anonymous_76)","line":246,"loc":{"start":{"line":246,"column":37},"end":{"line":246,"column":51}}},"14":{"name":"(anonymous_77)","line":249,"loc":{"start":{"line":249,"column":36},"end":{"line":null,"column":-1}}},"15":{"name":"(anonymous_78)","line":262,"loc":{"start":{"line":262,"column":4},"end":{"line":262,"column":32}}},"16":{"name":"(anonymous_79)","line":272,"loc":{"start":{"line":272,"column":4},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":21},"end":{"line":null,"column":-1}}]},"2":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":16},"end":{"line":null,"column":-1}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":11}},{"start":{"line":54,"column":12},"end":{"line":54,"column":11}}]},"5":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":89,"column":7}},{"start":{"line":89,"column":8},"end":{"line":89,"column":7}}]},"6":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":11}},{"start":{"line":94,"column":12},"end":{"line":94,"column":11}}]},"7":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":7}},{"start":{"line":135,"column":8},"end":{"line":135,"column":7}}]},"8":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":12},"end":{"line":211,"column":11}},{"start":{"line":211,"column":12},"end":{"line":211,"column":11}}]},"9":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":12},"end":{"line":214,"column":11}},{"start":{"line":214,"column":12},"end":{"line":214,"column":11}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":15,"10":15,"11":15,"12":15,"13":15,"14":15,"15":1,"16":23,"17":23,"18":50019,"19":50019,"20":50019,"21":50019,"22":50019,"23":50019,"24":50019,"25":0,"26":23,"27":23,"28":1,"29":64,"30":0,"31":64,"32":64,"33":64,"34":64,"35":64,"36":64,"37":64,"38":64,"39":64,"40":64,"41":64,"42":64,"43":64,"44":1,"45":77,"46":77,"47":77,"48":77,"49":77,"50":77,"51":77,"52":77,"53":77,"54":77,"55":77,"56":36,"57":36,"58":41,"59":41,"60":77,"61":77,"62":77,"63":77,"64":77,"65":1,"66":31,"67":31,"68":31,"69":31,"70":31,"71":31,"72":31,"73":31,"74":31,"75":31,"76":31,"77":2520,"78":31,"79":31,"80":31,"81":31,"82":2520,"83":2520,"84":139,"85":2520,"86":180,"87":31,"88":31,"89":31,"90":2520,"91":2520,"92":2520,"93":0,"94":0,"95":0,"96":31,"97":1,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":1,"105":1},"b":{"1":[1,0],"2":[1,0],"3":[1,0],"4":[50019,0],"5":[0,64],"6":[64,0],"7":[36,41],"8":[139,2381],"9":[180,2340]},"f":{"1":1,"2":15,"3":23,"4":50019,"5":64,"6":77,"7":31,"8":2520,"9":2520,"10":2520,"11":2520,"12":0,"13":0,"14":0,"15":0,"16":0},"code":"import 'crossfilter';\r\nimport 'd3';\r\nimport 'moment';\r\n\r\n\r\nimport {Base} from './base';\r\nimport {ColorMap} from './colormap';\r\n\r\n/**\r\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\r\n */\r\nexport class DateRect extends Base {\r\n\n    protected dateScale: d3.time.Scale<any, any>;\r\n    protected dateFrom: Date;\r\n    protected dateTo: Date;\r\n\n\r\n    /**\r\n     * Constructor method for DateRect\r\n     * @param  {CrossFilter.CrossFilter<any>} cf Crossfilter object\r\n     * containing the data.\r\n     * @param  {string} domElemId name of the DOM element to draw in.\r\n     * @return {[type]} A reference to an instance of DateRect.\r\n     */\r\n    constructor (cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\r\n\n        super(cf, domElemId, datekey);\r\n\n        this.xlabel = '';\n        this.title = 'DateRect title';\r\n        this.colormap = new ColorMap('default');\r\n        this.defineDimensions();\r\n        this.domElem.classList.add('punchcard-date-rect');\r\n\r\n    }\n\n\n\n\n    /**\r\n     * Defines the crossfilter dimensions as used by this class\r\n     * @return {Base} A reference to an instance of DateRect.\r\n     */\r\n    protected defineDimensions():Base {\r\n\r\n        // store a reference to the instance\r\n        let that:DateRect = this;\r\n\r\n        // based on example from\r\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\r\n        this.dim.dateAndHourOfDay = this.cf.dimension(function (d:any) {\r\n            let m:moment.Moment;\r\n            if (d.hasOwnProperty(that.datekey)) {\r\n                m = moment(d[that.datekey]);\r\n                let obj:any = {};\r\n                obj[that.datekey] = m.format('YYYY-MM-DD');\r\n                obj['hourOfDay'] =  m.hour();\r\n                //stringify() and later, parse() to get keyed objects\r\n                return JSON.stringify(obj);\r\n            } else {\r\n                throw new Error('datekey undefined');\r\n            }\r\n        });\r\n        this.canDraw = true;\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * This method defines which other methods to call in order to create\r\n     * a punchcard graph with the date on the horizontal axis and the time of\r\n     * day on the vertical axis. Mostly calls methods of the parent class, Base,\r\n     * but for example the symbols for this class are SVG rects, so it calls its\r\n     * own method .drawSymbols() for that.\r\n     *\r\n     * Successful drawing depends on whether the container is currently visible,\r\n     * and whether there is enough information in the instance to draw anything\r\n     * at all.\r\n     *\r\n     * This method overrides stub method in parent class.\r\n     *\r\n     * @return {DateRect} A reference to an instance of DateRect.\r\n     */\r\n    public draw():DateRect {\r\n\n        if (this.domElem.classList.contains('hidden')) {\n            // div is hidden\n            return this;\n        } else {\r\n            // div is visible\r\n            if (this.canDraw) {\r\n                // dimensions have been defined\r\n                super.drawSvg();\r\n                super.drawChartBody();\r\n                this.drawHorizontalAxis();\r\n                super.drawHorizontalAxisLabel();\r\n                super.drawVerticalAxis();\r\n                super.drawVerticalAxisLabel();\r\n                super.drawTitle();\r\n                this.drawSymbols();\r\n                super.drawBox();\r\n                super.drawLegend();\r\n                super.drawFooter();\r\n            }\r\n            return this;\r\n        }\n    }\n\n\n\n    /**\r\n     * Adds an SVG g element containing a horizontal d3.time.scale axis to the\r\n     * DOM, representing the date.\r\n     * @return {DateRect} A reference to an instance of DateRect.\r\n     */\r\n    private drawHorizontalAxis():DateRect {\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let dx:number = this.marginLeft;\n        let dy:number = this.domElem.clientHeight - this.marginBottom;\n\n        let firstResultDate = new Date(this.dim.dateAndHourOfDay.bottom(1)[0][this.datekey]);\r\n        this.dateFrom = new Date(firstResultDate.getFullYear(), firstResultDate.getMonth(), firstResultDate.getDate(), 0, 0, 0, 0);\n\n        let lastResultDate = new Date(this.dim.dateAndHourOfDay.top(1)[0][this.datekey]);\r\n        this.dateTo = new Date(lastResultDate.getFullYear(), lastResultDate.getMonth(), lastResultDate.getDate(), 23, 59, 59, 999);\n\n        let tickFormat:d3.time.Format;\r\n        let ticks: number | any; // FIXME second type should be Date[] but that doesn't work somehow\r\n        let nHoursDiff: number = moment(this.dateTo).diff(moment(this.dateFrom), 'hour', true);\n\n        if (nHoursDiff > 5 * 24) {\n            tickFormat = d3.time.format('%a %b %-d, %Y');\n            ticks = 7;\n        } else {\n            tickFormat = d3.time.format('%a %b %-d, %Y');\n            ticks = d3.time.days;\r\n        };\n\n        this.dateScale = d3.time.scale()\n            .range([0, w])\n            .domain([this.dateFrom,\n                     this.dateTo]);\n\n        let dateAxis = d3.svg.axis()\n            .orient('bottom')\n            .scale(this.dateScale)\n            .ticks(ticks)\n            .tickFormat(tickFormat);\n\n        this.svg.append('g')\n            .attr('class', 'horizontal-axis')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(dateAxis);\n\n        // doing style stuff in JavaScript is considered bad practice...:\n        this.svg.select('.horizontal-axis')\n            .selectAll('text')\n                .attr('x', -10)\n                .attr('y', 0)\n                .attr('dy', '.35em')\n                .style('text-anchor', 'end');\n\n        return this;\n\n    }\r\n\r\n\n\n    /**\r\n     * This method adds an SVG g element with many SVG rects in it. Each rect\r\n     * represents the count of how many data rows fall within the area covered\r\n     * by the rect, where the horizontal boundaries dictate the date range and\r\n     * the vertical boundaries dictate the time of day range.\r\n     * @return {DateRect} A reference to the instance of DateRect.\r\n     */\r\n    protected drawSymbols():DateRect {\r\n\n        // capture the this object\n        let that:DateRect = this;\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop + h;\n        let symbolMargin = {left:0, right: 0, top: 0, bottom: 0}; // pixels\n        let wDays:number = moment(this.dateTo).diff(moment(this.dateFrom), 'days', true);\n\n        let symbolWidth :number = w / wDays - symbolMargin.left - symbolMargin.right;\n        let symbolHeight:number = h / 24.0 - symbolMargin.top - symbolMargin.bottom;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        let group = this.dim.dateAndHourOfDay.group();\n        group.all().forEach(function(d:any) {\r\n            //parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        let data:any = group.all();\n\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (let elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n\n        // draw the rects\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('rect.symbol')\n                .data(data)\n                .enter()\n                .append('rect')\n                    .attr('class', 'symbol')\n                    .attr('x', function(d:any){\r\n                        return that.dateScale(new Date(d.key[that.datekey]));\r\n                        })\n                    .attr('y', function(d:any){\r\n                        return that.todScale(parseInt(d.key.hourOfDay, 10));\n                    })\n                    .attr('width', symbolWidth)\n                    .attr('height', symbolHeight)\n                    .attr('fill', function(d:any){\r\n                        return that.colormap.getColorRGB(d.value);\n                    })\r\n                    .on('click', function(d:any){\r\n                        that.onClick(d);\r\n                    })\r\n                    .on('mouseover', function(d:any){\r\n                        that.onMouseOver(d);\r\n                    })\r\n                    .on('mouseout', function(){\r\n                        that.onMouseOut();\r\n                    });\r\n\n        return this;\n\n    }\r\n\r\n\r\n\r\n    /*\r\n     * overrides method from Base\r\n     */\r\n    protected onMouseOver(d: any): DateRect {\r\n        let str: string = 'x:' + d.key[this.datekey] +\r\n            ', y:' + d.key['hourOfDay'] +\r\n            ', count:' + d.value;\r\n        this.svg.select('g.footer').select('text').text(str);\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n    protected onMouseOut(): DateRect {\r\n        this.svg.select('g.footer').select('text').text('');\r\n        return this;\r\n    }\r\n\r\n\r\n\n}\n\n\n","l":{"1":1,"2":1,"3":1,"6":1,"7":1,"12":1,"26":1,"28":15,"30":15,"31":15,"32":15,"33":15,"34":15,"45":1,"48":23,"52":23,"53":50019,"54":50019,"55":50019,"56":50019,"57":50019,"58":50019,"60":50019,"62":0,"65":23,"66":23,"87":1,"89":64,"91":0,"94":64,"96":64,"97":64,"98":64,"99":64,"100":64,"101":64,"102":64,"103":64,"104":64,"105":64,"106":64,"108":64,"119":1,"121":77,"122":77,"123":77,"125":77,"126":77,"128":77,"129":77,"131":77,"132":77,"133":77,"135":77,"136":36,"137":36,"139":41,"140":41,"143":77,"148":77,"154":77,"160":77,"167":77,"180":1,"183":31,"185":31,"186":31,"187":31,"188":31,"189":31,"190":31,"192":31,"193":31,"198":31,"199":31,"201":2520,"203":31,"208":31,"209":31,"210":2520,"211":2520,"212":139,"214":2520,"215":180,"218":31,"219":31,"223":31,"233":2520,"236":2520,"241":2520,"244":0,"247":0,"250":0,"253":31,"262":1,"263":0,"266":0,"267":0,"272":1,"273":0,"274":0,"279":1}},
"src/legend.ts":{"path":"src/legend.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":12}},"2":{"start":{"line":20,"column":0},"end":{"line":389,"column":1}},"3":{"start":{"line":84,"column":4},"end":{"line":100,"column":5}},"4":{"start":{"line":86,"column":8},"end":{"line":86,"column":31}},"5":{"start":{"line":89,"column":8},"end":{"line":89,"column":28}},"6":{"start":{"line":90,"column":8},"end":{"line":90,"column":30}},"7":{"start":{"line":91,"column":8},"end":{"line":91,"column":48}},"8":{"start":{"line":92,"column":8},"end":{"line":92,"column":54}},"9":{"start":{"line":94,"column":8},"end":{"line":94,"column":83}},"10":{"start":{"line":95,"column":8},"end":{"line":95,"column":93}},"11":{"start":{"line":97,"column":8},"end":{"line":97,"column":24}},"12":{"start":{"line":98,"column":8},"end":{"line":98,"column":25}},"13":{"start":{"line":109,"column":11},"end":{"line":121,"column":5}},"14":{"start":{"line":112,"column":8},"end":{"line":112,"column":30}},"15":{"start":{"line":113,"column":8},"end":{"line":113,"column":34}},"16":{"start":{"line":114,"column":8},"end":{"line":114,"column":32}},"17":{"start":{"line":115,"column":8},"end":{"line":115,"column":37}},"18":{"start":{"line":116,"column":8},"end":{"line":116,"column":25}},"19":{"start":{"line":117,"column":8},"end":{"line":117,"column":27}},"20":{"start":{"line":118,"column":8},"end":{"line":118,"column":23}},"21":{"start":{"line":120,"column":8},"end":{"line":120,"column":20}},"22":{"start":{"line":129,"column":14},"end":{"line":144,"column":5}},"23":{"start":{"line":132,"column":8},"end":{"line":132,"column":102}},"24":{"start":{"line":133,"column":8},"end":{"line":133,"column":39}},"25":{"start":{"line":135,"column":8},"end":{"line":141,"column":56}},"26":{"start":{"line":143,"column":8},"end":{"line":143,"column":20}},"27":{"start":{"line":152,"column":12},"end":{"line":168,"column":5}},"28":{"start":{"line":154,"column":8},"end":{"line":154,"column":102}},"29":{"start":{"line":155,"column":8},"end":{"line":155,"column":78}},"30":{"start":{"line":157,"column":8},"end":{"line":160,"column":22}},"31":{"start":{"line":162,"column":8},"end":{"line":164,"column":68}},"32":{"start":{"line":166,"column":8},"end":{"line":166,"column":20}},"33":{"start":{"line":176,"column":14},"end":{"line":191,"column":5}},"34":{"start":{"line":178,"column":8},"end":{"line":178,"column":102}},"35":{"start":{"line":179,"column":8},"end":{"line":179,"column":92}},"36":{"start":{"line":182,"column":8},"end":{"line":188,"column":52}},"37":{"start":{"line":190,"column":8},"end":{"line":190,"column":20}},"38":{"start":{"line":200,"column":14},"end":{"line":240,"column":5}},"39":{"start":{"line":203,"column":8},"end":{"line":203,"column":31}},"40":{"start":{"line":205,"column":8},"end":{"line":205,"column":102}},"41":{"start":{"line":206,"column":8},"end":{"line":206,"column":78}},"42":{"start":{"line":208,"column":8},"end":{"line":208,"column":27}},"43":{"start":{"line":209,"column":8},"end":{"line":209,"column":32}},"44":{"start":{"line":210,"column":8},"end":{"line":215,"column":9}},"45":{"start":{"line":211,"column":12},"end":{"line":214,"column":19}},"46":{"start":{"line":217,"column":8},"end":{"line":217,"column":56}},"47":{"start":{"line":220,"column":8},"end":{"line":237,"column":23}},"48":{"start":{"line":231,"column":24},"end":{"line":231,"column":80}},"49":{"start":{"line":236,"column":24},"end":{"line":236,"column":74}},"50":{"start":{"line":239,"column":8},"end":{"line":239,"column":20}},"51":{"start":{"line":248,"column":14},"end":{"line":261,"column":5}},"52":{"start":{"line":250,"column":8},"end":{"line":250,"column":121}},"53":{"start":{"line":251,"column":8},"end":{"line":251,"column":44}},"54":{"start":{"line":253,"column":8},"end":{"line":258,"column":36}},"55":{"start":{"line":260,"column":8},"end":{"line":260,"column":20}},"56":{"start":{"line":270,"column":14},"end":{"line":294,"column":5}},"57":{"start":{"line":272,"column":8},"end":{"line":272,"column":86}},"58":{"start":{"line":273,"column":8},"end":{"line":273,"column":95}},"59":{"start":{"line":274,"column":8},"end":{"line":274,"column":106}},"60":{"start":{"line":275,"column":8},"end":{"line":275,"column":78}},"61":{"start":{"line":277,"column":8},"end":{"line":279,"column":85}},"62":{"start":{"line":281,"column":8},"end":{"line":285,"column":30}},"63":{"start":{"line":287,"column":8},"end":{"line":290,"column":32}},"64":{"start":{"line":292,"column":8},"end":{"line":292,"column":20}},"65":{"start":{"line":302,"column":14},"end":{"line":317,"column":5}},"66":{"start":{"line":304,"column":8},"end":{"line":304,"column":95}},"67":{"start":{"line":305,"column":8},"end":{"line":305,"column":81}},"68":{"start":{"line":306,"column":8},"end":{"line":306,"column":49}},"69":{"start":{"line":308,"column":8},"end":{"line":313,"column":57}},"70":{"start":{"line":315,"column":8},"end":{"line":315,"column":20}},"71":{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},"72":{"start":{"line":335,"column":8},"end":{"line":335,"column":32}},"73":{"start":{"line":327,"column":8},"end":{"line":327,"column":51}},"74":{"start":{"line":343,"column":4},"end":{"line":345,"column":5}},"75":{"start":{"line":352,"column":8},"end":{"line":352,"column":33}},"76":{"start":{"line":344,"column":8},"end":{"line":344,"column":53}},"77":{"start":{"line":360,"column":4},"end":{"line":362,"column":5}},"78":{"start":{"line":369,"column":8},"end":{"line":369,"column":31}},"79":{"start":{"line":361,"column":8},"end":{"line":361,"column":70}},"80":{"start":{"line":377,"column":4},"end":{"line":379,"column":5}},"81":{"start":{"line":386,"column":8},"end":{"line":386,"column":34}},"82":{"start":{"line":378,"column":8},"end":{"line":378,"column":79}},"83":{"start":{"line":389,"column":0},"end":{"line":389,"column":1}},"84":{"start":{"line":20,"column":13},"end":{"line":389,"column":1}}},"fnMap":{"1":{"name":"(anonymous_82)","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Legend","line":84,"loc":{"start":{"line":84,"column":4},"end":{"line":84,"column":47}}},"3":{"name":"(anonymous_84)","line":109,"loc":{"start":{"line":109,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_85)","line":129,"loc":{"start":{"line":129,"column":4},"end":{"line":null,"column":-1}}},"5":{"name":"(anonymous_86)","line":152,"loc":{"start":{"line":152,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_87)","line":176,"loc":{"start":{"line":176,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_88)","line":200,"loc":{"start":{"line":200,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_89)","line":230,"loc":{"start":{"line":230,"column":31},"end":{"line":230,"column":45}}},"9":{"name":"(anonymous_90)","line":235,"loc":{"start":{"line":235,"column":34},"end":{"line":235,"column":48}}},"10":{"name":"(anonymous_91)","line":248,"loc":{"start":{"line":248,"column":4},"end":{"line":null,"column":-1}}},"11":{"name":"(anonymous_92)","line":270,"loc":{"start":{"line":270,"column":4},"end":{"line":null,"column":-1}}},"12":{"name":"(anonymous_93)","line":302,"loc":{"start":{"line":302,"column":4},"end":{"line":null,"column":-1}}},"13":{"name":"(anonymous_94)","line":334,"loc":{"start":{"line":334,"column":4},"end":{"line":null,"column":-1}}},"14":{"name":"(anonymous_95)","line":326,"loc":{"start":{"line":326,"column":4},"end":{"line":326,"column":46}}},"15":{"name":"(anonymous_96)","line":351,"loc":{"start":{"line":351,"column":4},"end":{"line":null,"column":-1}}},"16":{"name":"(anonymous_97)","line":343,"loc":{"start":{"line":343,"column":4},"end":{"line":343,"column":48}}},"17":{"name":"(anonymous_98)","line":368,"loc":{"start":{"line":368,"column":4},"end":{"line":null,"column":-1}}},"18":{"name":"(anonymous_99)","line":360,"loc":{"start":{"line":360,"column":4},"end":{"line":360,"column":44}}},"19":{"name":"(anonymous_100)","line":385,"loc":{"start":{"line":385,"column":4},"end":{"line":null,"column":-1}}},"20":{"name":"(anonymous_101)","line":377,"loc":{"start":{"line":377,"column":4},"end":{"line":377,"column":50}}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":12},"end":{"line":null,"column":-1}}]}},"s":{"1":1,"2":1,"3":1,"4":95,"5":95,"6":95,"7":95,"8":95,"9":95,"10":95,"11":95,"12":95,"13":1,"14":95,"15":95,"16":95,"17":95,"18":95,"19":95,"20":95,"21":95,"22":1,"23":95,"24":95,"25":95,"26":95,"27":1,"28":95,"29":95,"30":95,"31":95,"32":95,"33":1,"34":95,"35":95,"36":95,"37":95,"38":1,"39":95,"40":95,"41":95,"42":95,"43":95,"44":95,"45":12160,"46":95,"47":95,"48":12160,"49":12160,"50":95,"51":1,"52":95,"53":95,"54":95,"55":95,"56":1,"57":95,"58":95,"59":95,"60":95,"61":95,"62":95,"63":95,"64":95,"65":1,"66":95,"67":95,"68":95,"69":95,"70":95,"71":1,"72":760,"73":95,"74":1,"75":285,"76":95,"77":1,"78":570,"79":95,"80":1,"81":665,"82":95,"83":1,"84":1},"b":{"1":[1,0]},"f":{"1":1,"2":95,"3":95,"4":95,"5":95,"6":95,"7":95,"8":12160,"9":12160,"10":95,"11":95,"12":95,"13":760,"14":95,"15":285,"16":95,"17":570,"18":95,"19":665,"20":95},"code":"\r\nimport 'd3';\r\n\r\nimport {Base} from './base';\r\nimport {DateCircle} from './date-circle';\r\nimport {DateRect} from './date-rect';\r\nimport {WeekdayCircle} from './weekday-circle';\r\nimport {WeekdayRect} from './weekday-rect';\r\n\r\n/**\r\n * Convenience type/collection of various punchcards\r\n  */\r\ntype PunchcardVisualization = Base|DateCircle|DateRect|\r\n                                    WeekdayCircle|WeekdayRect;\r\n\n/**\r\n * Legend adds a legend to an existing PunchcardVisualization, indicating which\r\n * color represents which domain value.\r\n */\r\nexport class Legend {\r\n\r\n    /**\r\n     * Margin in pixels to the left of the legend\r\n     * @type {number}\r\n     */\r\n    private _marginLeft: number;\r\n    /**\r\n     * Margin in pixels to the right of the legend\r\n     * @type {number}\r\n     */\r\n    private _marginRight: number;\r\n    /**\r\n     * Margin in pixels to the top of the legend\r\n     * @type {number}\r\n     */\r\n    private _marginTop: number;\r\n    /**\r\n     * Margin in pixels to the bottom of the legend\r\n     * @type {number}\r\n     */\r\n    private _marginBottom: number;\r\n    /**\r\n     * The Legend's sibling, i.e. the object that the legend is associated with.\r\n     * @type {PunchcardVisualization}\r\n     */\r\n    protected sibling: PunchcardVisualization;\r\n    /**\r\n     * The title of the Legend\r\n     * @type {string}\r\n     */\r\n    protected title: string;\r\n    /**\r\n     * Text to label the Legend's vertical axis\r\n     * @type {string}\r\n     */\r\n    protected ylabel: string;\r\n    /**\r\n     * The legend's horizontal axis scale\r\n     * @type {any}\r\n     */\r\n    protected horizontalScale: any;\r\n    /**\r\n     * The Legend's vertical axis scale\r\n     * @type {any}\r\n     */\r\n    protected verticalScale: any;\r\n    /**\r\n     * The Legend's width in pixels\r\n     * @type {number}\r\n     */\r\n    protected width: number;\r\n    /**\r\n     * The Legend's height in pixels\r\n     * @type {number}\r\n     */\r\n    protected height: number;\r\n\r\n    /**\r\n     * Adds a legend to an existing PunchcardVisualization.\r\n     * @param  {PunchcardVisualization} sibling The sibling element, for which\r\n     * a legend needs to be constructed\r\n     * @return {[type]} A reference to the instance of Legend\r\n     */\r\n    constructor (sibling:PunchcardVisualization) {\n\n        this.sibling = sibling;\n\n        // the margins around the legend body\n        this.marginLeft = 0;\n        this.marginRight = 60;\n        this.marginTop = this.sibling.marginTop;\n        this.marginBottom = this.sibling.marginBottom;\n\n        this.width = this.sibling.legendWidth - this.marginLeft - this.marginRight;\n        this.height = this.sibling.domElem.clientHeight - this.marginTop - this.marginBottom;\n\n        this.title = '';\n        this.ylabel = '';\n\n    }\n\n\n\n    /**\r\n     * This method calls the other methods in a predefined succession, so that\r\n     * the whole legend gets drawn\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    public draw(): Legend {\r\n        // draw the legend\n\n        this.drawLegendBody();\n        this.drawHorizontalAxis();\n        this.drawVerticalAxis();\n        this.drawVerticalAxisLabel();\n        this.drawTitle();\n        this.drawSymbols();\n        this.drawBox();\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Draws the box around the legend\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawBox():Legend {\r\n        // draw box\n\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        let dy:number = this.marginTop;\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend legendbody-box')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('class', 'legend legendbody-box');\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Draws the Legend's horizontal axis\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    private drawHorizontalAxis():Legend {\r\n\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        let dy:number = this.sibling.domElem.clientHeight - this.marginBottom;\n\n        let horizontalAxis = d3.svg.axis()\n            .orient('bottom')\n            .scale(this.horizontalScale)\n            .ticks(0);\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend horizontal-axis')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' );\n\n        return this;\n\n    }\n\n\n\n    /**\r\n     * Draws the Legend's body (but not the colored symbols on it)\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawLegendBody():Legend {\r\n        //\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        let dy:number = this.sibling.domElem.clientHeight - this.marginBottom - this.height;\n\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend legendbody')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .append('rect')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('class', 'legend legendbody');\r\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Draws the Legend's colored symbols, each of which is associated with a\r\n     * certain domain value.\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawSymbols():Legend {\r\n        // pass\n\n        let that:Legend = this;\r\n\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft;\n        let dy:number = this.sibling.domElem.clientHeight - this.marginBottom;\n\n        let data: any = [];\n        let nRects:number = 128;\n        for (let iRect = 0; iRect < nRects; iRect += 1) {\n            data.push({\n                    value: this.sibling.colormap.cLimLow +\n                            ((iRect + 0.5) / nRects) * (this.sibling.colormap.cLimHigh - this.sibling.colormap.cLimLow)\n                });\n        }\n\n        let symbolHeight: number = this.height / nRects;\n\n        // draw the rects\n        this.sibling.svg\n            .append('g')\n            .attr('class', 'punchcard-legend symbol')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('rect.symbol')\n                .data(data)\n                .enter()\n                .append('rect')\n                    .attr('class', 'symbol')\n                    .attr('x', 0)\n                    .attr('y', function(d:any){\r\n                        return that.verticalScale(d.value) - 0.5 * symbolHeight;\n                    })\n                    .attr('width', this.width)\n                    .attr('height', symbolHeight)\n                    .attr('fill', function(d:any){\r\n                        return that.sibling.colormap.getColorRGB(d.value);\n                    });\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Draws the Legend's title\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawTitle():Legend {\r\n\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft + 0.5 * this.width;\n        let dy:number = this.marginTop - 20;\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend title')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .append('text')\n            .text(this.title)\n            .attr('class', 'title');\n\n        return this;\n    }\n\n\n\n    /**\r\n     * Draws the Legend's vertical axis, that is used to read the domain value\r\n     * associated with a certain color.\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawVerticalAxis():Legend {\r\n        //\n        let w :number = this.sibling.legendWidth - this.marginLeft - this.marginRight;\n        let h :number = this.sibling.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.sibling.domElem.clientWidth - this.sibling.legendWidth + this.marginLeft + w;\n        let dy:number = this.sibling.domElem.clientHeight - this.marginBottom;\n\n        this.verticalScale = d3.scale.linear()\n            .range([0, -h])\n            .domain([this.sibling.colormap.cLimLow, this.sibling.colormap.cLimHigh]);\n\n        let verticalAxis = d3.svg.axis()\n            .orient('right')\n            .scale(this.verticalScale)\n            .innerTickSize(5)\n            .outerTickSize(5);\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend vertical-axis')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(verticalAxis);\n\n        return this;\n\n    }\n\n\n\n    /**\r\n     * Draws the Legend's vertical axis text label\r\n     * @return {Legend} Returns a reference to the instance of Legend\r\n     */\r\n    protected drawVerticalAxisLabel():Legend {\r\n        //\n        let h :number = this.sibling.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.sibling.domElem.clientWidth - this.marginRight + 40;\n        let dy:number = this.marginTop + 0.5 * h;\n\n        this.sibling.svg.append('g')\n            .attr('class', 'punchcard-legend vertical-axis-label')\r\n            .attr('transform', 'translate(' + dx + ',' + dy + ') rotate(-90)')\n            .append('text')\n            .text(this.ylabel)\n            .attr('class', 'legend vertical-axis-label');\n\n        return this;\n\n    }\n\n\n\n    /**\r\n     * [marginLeft description]\r\n     * @param  {number} marginLeft [description]\r\n     * @return {[type]}            [description]\r\n     */\r\n    protected set marginLeft(marginLeft:number) {\n        this._marginLeft = Math.max(marginLeft, 0);\n    }\n\r\n    /**\r\n     * [marginLeft description]\r\n     * @return {number} [description]\r\n     */\r\n    protected get marginLeft():number {\n        return this._marginLeft;\n    }\n\r\n    /**\r\n     * [marginRight description]\r\n     * @param  {number} marginRight [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    protected set marginRight(marginRight:number) {\n        this._marginRight = Math.max(marginRight, 0);\n    }\n\r\n    /**\r\n     * [marginRight description]\r\n     * @return {number} [description]\r\n     */\r\n    protected get marginRight():number {\n        return this._marginRight;\n    }\n\r\n    /**\r\n     * [marginTop description]\r\n     * @param  {number} marginTop [description]\r\n     * @return {[type]}           [description]\r\n     */\r\n    protected set marginTop(marginTop:number) {\n        this._marginTop = Math.max(marginTop, this.sibling.marginTop);\n    }\n\r\n    /**\r\n     * [marginTop description]\r\n     * @return {number} [description]\r\n     */\r\n    protected get marginTop():number {\n        return this._marginTop;\n    }\n\r\n    /**\r\n     * [marginBottom description]\r\n     * @param  {number} marginBottom [description]\r\n     * @return {[type]}              [description]\r\n     */\r\n    protected set marginBottom(marginBottom:number) {\n        this._marginBottom = Math.max(marginBottom, this.sibling.marginBottom);\n    }\n\r\n    /**\r\n     * [marginBottom description]\r\n     * @return {number} [description]\r\n     */\r\n    protected get marginBottom():number {\n        return this._marginBottom;\n    }\n\r\n}\r\n\n","l":{"2":1,"20":1,"84":1,"86":95,"89":95,"90":95,"91":95,"92":95,"94":95,"95":95,"97":95,"98":95,"109":1,"112":95,"113":95,"114":95,"115":95,"116":95,"117":95,"118":95,"120":95,"129":1,"132":95,"133":95,"135":95,"143":95,"152":1,"154":95,"155":95,"157":95,"162":95,"166":95,"176":1,"178":95,"179":95,"182":95,"190":95,"200":1,"203":95,"205":95,"206":95,"208":95,"209":95,"210":95,"211":12160,"217":95,"220":95,"231":12160,"236":12160,"239":95,"248":1,"250":95,"251":95,"253":95,"260":95,"270":1,"272":95,"273":95,"274":95,"275":95,"277":95,"281":95,"287":95,"292":95,"302":1,"304":95,"305":95,"306":95,"308":95,"315":95,"326":1,"327":95,"335":760,"343":1,"344":95,"352":285,"360":1,"361":95,"369":570,"377":1,"378":95,"386":665,"389":1}},
"src/punchcards.ts":{"path":"src/punchcards.ts","statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"2":{"start":{"line":5,"column":8},"end":{"line":5,"column":28}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"4":{"start":{"line":6,"column":8},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":41}},"6":{"start":{"line":7,"column":8},"end":{"line":7,"column":41}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"8":{"start":{"line":8,"column":8},"end":{"line":8,"column":37}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"10":{"start":{"line":9,"column":8},"end":{"line":9,"column":32}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"12":{"start":{"line":10,"column":8},"end":{"line":10,"column":47}},"13":{"start":{"line":11,"column":0},"end":{"line":11,"column":43}},"14":{"start":{"line":11,"column":8},"end":{"line":11,"column":43}}},"fnMap":{},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{},"f":{},"code":"\r\n/**\r\n * This is the Punchcards module\r\n */\r\nexport {Base} from './base';\r\nexport {ColorMap} from './colormap';\r\nexport {DateCircle} from './date-circle';\r\nexport {DateRect} from './date-rect';\r\nexport {Legend} from './legend';\r\nexport {WeekdayCircle} from './weekday-circle';\r\nexport {WeekdayRect} from './weekday-rect';\r\n\r\n","l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1}},
"src/weekday-circle.ts":{"path":"src/weekday-circle.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":21}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":12}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":121,"column":1}},"6":{"start":{"line":12,"column":35},"end":{"line":12,"column":46}},"7":{"start":{"line":14,"column":4},"end":{"line":24,"column":5}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":38}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":36}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":43}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":46}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":33}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":64}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":63}},"15":{"start":{"line":35,"column":14},"end":{"line":117,"column":5}},"16":{"start":{"line":38,"column":8},"end":{"line":38,"column":38}},"17":{"start":{"line":40,"column":8},"end":{"line":40,"column":105}},"18":{"start":{"line":41,"column":8},"end":{"line":41,"column":87}},"19":{"start":{"line":42,"column":8},"end":{"line":42,"column":40}},"20":{"start":{"line":43,"column":8},"end":{"line":43,"column":43}},"21":{"start":{"line":44,"column":8},"end":{"line":44,"column":65}},"22":{"start":{"line":45,"column":8},"end":{"line":45,"column":81}},"23":{"start":{"line":46,"column":8},"end":{"line":46,"column":82}},"24":{"start":{"line":48,"column":8},"end":{"line":48,"column":67}},"25":{"start":{"line":53,"column":8},"end":{"line":53,"column":57}},"26":{"start":{"line":54,"column":8},"end":{"line":57,"column":11}},"27":{"start":{"line":56,"column":12},"end":{"line":56,"column":38}},"28":{"start":{"line":58,"column":8},"end":{"line":58,"column":35}},"29":{"start":{"line":63,"column":8},"end":{"line":63,"column":46}},"30":{"start":{"line":64,"column":8},"end":{"line":64,"column":47}},"31":{"start":{"line":65,"column":8},"end":{"line":72,"column":9}},"32":{"start":{"line":65,"column":13},"end":{"line":65,"column":21}},"33":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"34":{"start":{"line":67,"column":16},"end":{"line":67,"column":36}},"35":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"36":{"start":{"line":70,"column":16},"end":{"line":70,"column":37}},"37":{"start":{"line":73,"column":8},"end":{"line":73,"column":39}},"38":{"start":{"line":74,"column":8},"end":{"line":74,"column":41}},"39":{"start":{"line":78,"column":8},"end":{"line":113,"column":23}},"40":{"start":{"line":88,"column":24},"end":{"line":88,"column":89}},"41":{"start":{"line":91,"column":24},"end":{"line":91,"column":103}},"42":{"start":{"line":94,"column":24},"end":{"line":94,"column":75}},"43":{"start":{"line":95,"column":24},"end":{"line":95,"column":90}},"44":{"start":{"line":96,"column":24},"end":{"line":100,"column":25}},"45":{"start":{"line":97,"column":28},"end":{"line":97,"column":50}},"46":{"start":{"line":99,"column":28},"end":{"line":99,"column":66}},"47":{"start":{"line":103,"column":24},"end":{"line":103,"column":66}},"48":{"start":{"line":106,"column":24},"end":{"line":106,"column":40}},"49":{"start":{"line":109,"column":24},"end":{"line":109,"column":44}},"50":{"start":{"line":112,"column":24},"end":{"line":112,"column":42}},"51":{"start":{"line":116,"column":8},"end":{"line":116,"column":20}},"52":{"start":{"line":121,"column":0},"end":{"line":121,"column":1}},"53":{"start":{"line":12,"column":13},"end":{"line":121,"column":1}}},"fnMap":{"1":{"name":"(anonymous_107)","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"WeekdayCircle","line":14,"loc":{"start":{"line":14,"column":4},"end":{"line":14,"column":85}}},"3":{"name":"(anonymous_109)","line":35,"loc":{"start":{"line":35,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_110)","line":54,"loc":{"start":{"line":54,"column":28},"end":{"line":54,"column":42}}},"5":{"name":"(anonymous_111)","line":87,"loc":{"start":{"line":87,"column":32},"end":{"line":87,"column":46}}},"6":{"name":"(anonymous_112)","line":90,"loc":{"start":{"line":90,"column":32},"end":{"line":90,"column":46}}},"7":{"name":"(anonymous_113)","line":93,"loc":{"start":{"line":93,"column":31},"end":{"line":93,"column":45}}},"8":{"name":"(anonymous_114)","line":102,"loc":{"start":{"line":102,"column":34},"end":{"line":102,"column":48}}},"9":{"name":"(anonymous_115)","line":105,"loc":{"start":{"line":105,"column":33},"end":{"line":105,"column":47}}},"10":{"name":"(anonymous_116)","line":108,"loc":{"start":{"line":108,"column":37},"end":{"line":108,"column":51}}},"11":{"name":"(anonymous_117)","line":111,"loc":{"start":{"line":111,"column":36},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":21},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":21},"end":{"line":null,"column":-1}}]},"2":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":12},"end":{"line":null,"column":-1}}]},"3":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":66,"column":11}},{"start":{"line":66,"column":12},"end":{"line":66,"column":11}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":11}},{"start":{"line":69,"column":12},"end":{"line":69,"column":11}}]},"5":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":24},"end":{"line":96,"column":23}},{"start":{"line":96,"column":24},"end":{"line":96,"column":23}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":8,"9":8,"10":8,"11":8,"12":8,"13":8,"14":8,"15":1,"16":27,"17":27,"18":27,"19":27,"20":27,"21":27,"22":27,"23":27,"24":27,"25":27,"26":27,"27":1549,"28":27,"29":27,"30":27,"31":27,"32":1549,"33":1549,"34":108,"35":1549,"36":82,"37":27,"38":27,"39":27,"40":1549,"41":1549,"42":1549,"43":1549,"44":1549,"45":12,"46":1537,"47":1549,"48":0,"49":0,"50":0,"51":27,"52":1,"53":1},"b":{"1":[1,0],"2":[1,0],"3":[108,1441],"4":[82,1467],"5":[12,1537]},"f":{"1":1,"2":8,"3":27,"4":1549,"5":1549,"6":1549,"7":1549,"8":1549,"9":0,"10":0,"11":0},"code":"\r\nimport 'crossfilter';\r\nimport 'd3';\r\n\r\nimport {ColorMap} from './colormap';\r\nimport {WeekdayRect} from './weekday-rect';\r\n\r\n\r\n/**\r\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\r\n */\r\nexport class WeekdayCircle extends WeekdayRect {\r\n\n    constructor (cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\r\n\n        super(cf, domElemId, datekey);\r\n\n        this.xlabel = 'Day of week';\n        this.title = 'WeekdayCircle title';\r\n        this.colormap = new ColorMap('blues');\r\n        super.defineDimensions();\r\n        this.domElem.classList.remove('punchcard-weekday-rect');\r\n        this.domElem.classList.add('punchcard-weekday-circle');\r\n    }\n\n\n\n    /**\r\n     * This method adds an SVG g element containing many SVG circle elements,\r\n     * i.e. the 'symbols', to the DOM. Each symbol represents the count of how\r\n     * many rows from the data fall on a given day/time-of-day combination.\r\n     * @return {WeekdayCircle} Returns a reference to the instance of\r\n     * WeekdayCircle\r\n     */\r\n    protected drawSymbols():WeekdayCircle {\r\n\n        // capture the this object\n        let that:WeekdayCircle = this;\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop + h;\n        let symbolMargin = {left:2, right: 2, top: 2, bottom: 2}; // pixels\n        let symbolWidth :number = w / 7 - symbolMargin.left - symbolMargin.right;\n        let symbolHeight:number = h / 24 - symbolMargin.top - symbolMargin.bottom;\n\n        let r:number = Math.min(symbolWidth, symbolHeight) / 2 - 2;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        let group = this.dim.weekdayAndHourOfDay.group();\n        group.all().forEach(function(d:any) {\r\n            //parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        let data:any = group.all();\n\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (let elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n\n        // draw the circles\r\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('circle.symbol')\n                .data(data)\n                .enter()\n                .append('circle')\n                    .attr('class', 'symbol')\n                    .attr('cx', function(d:any){\r\n                        return that.dayOfWeekScale(d.key['weekday']) + symbolMargin.left;\n                    })\n                    .attr('cy', function(d:any){\r\n                        return that.todScale(d.key['hourOfDay']) + symbolHeight / 2 + symbolMargin.top;\n                    })\n                    .attr('r', function(d:any){\r\n                        let numer:number = d.value - that.colormap.cLimLow;\r\n                        let denom:number = that.colormap.cLimHigh - that.colormap.cLimLow;\r\n                        if (denom === 0) {\r\n                            return Math.max(r, 1);\r\n                        } else {\r\n                            return Math.max(r * numer / denom, 1);\r\n                        }\r\n                    })\r\n                    .attr('fill', function(d:any){\r\n                        return that.colormap.getColorRGB(d.value);\n                    })\r\n                    .on('click', function(d:any){\r\n                        that.onClick(d);\r\n                    })\r\n                    .on('mouseover', function(d:any){\r\n                        that.onMouseOver(d);\r\n                    })\r\n                    .on('mouseout', function(){\r\n                        that.onMouseOut();\r\n                    });\r\n\r\n\n        return this;\n    }\n\n\n\n}\n\n\n","l":{"2":1,"3":1,"5":1,"6":1,"12":1,"14":1,"16":8,"18":8,"19":8,"20":8,"21":8,"22":8,"23":8,"35":1,"38":27,"40":27,"41":27,"42":27,"43":27,"44":27,"45":27,"46":27,"48":27,"53":27,"54":27,"56":1549,"58":27,"63":27,"64":27,"65":1549,"66":1549,"67":108,"69":1549,"70":82,"73":27,"74":27,"78":27,"88":1549,"91":1549,"94":1549,"95":1549,"96":1549,"97":12,"99":1537,"103":1549,"106":0,"109":0,"112":0,"116":27,"121":1}},
"src/weekday-rect.ts":{"path":"src/weekday-rect.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":21}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":12}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":16}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"6":{"start":{"line":12,"column":0},"end":{"line":264,"column":1}},"7":{"start":{"line":12,"column":33},"end":{"line":12,"column":37}},"8":{"start":{"line":28,"column":4},"end":{"line":39,"column":5}},"9":{"start":{"line":30,"column":8},"end":{"line":30,"column":38}},"10":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"11":{"start":{"line":33,"column":8},"end":{"line":33,"column":36}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":41}},"13":{"start":{"line":35,"column":8},"end":{"line":35,"column":47}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":32}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":61}},"16":{"start":{"line":48,"column":14},"end":{"line":72,"column":5}},"17":{"start":{"line":51,"column":8},"end":{"line":51,"column":36}},"18":{"start":{"line":56,"column":8},"end":{"line":68,"column":11}},"19":{"start":{"line":58,"column":12},"end":{"line":58,"column":32}},"20":{"start":{"line":59,"column":12},"end":{"line":67,"column":13}},"21":{"start":{"line":60,"column":16},"end":{"line":60,"column":44}},"22":{"start":{"line":61,"column":16},"end":{"line":61,"column":33}},"23":{"start":{"line":62,"column":16},"end":{"line":62,"column":49}},"24":{"start":{"line":63,"column":16},"end":{"line":63,"column":44}},"25":{"start":{"line":64,"column":16},"end":{"line":64,"column":43}},"26":{"start":{"line":66,"column":16},"end":{"line":66,"column":53}},"27":{"start":{"line":69,"column":8},"end":{"line":69,"column":28}},"28":{"start":{"line":71,"column":8},"end":{"line":71,"column":20}},"29":{"start":{"line":92,"column":11},"end":{"line":116,"column":5}},"30":{"start":{"line":94,"column":8},"end":{"line":115,"column":9}},"31":{"start":{"line":96,"column":12},"end":{"line":96,"column":24}},"32":{"start":{"line":99,"column":12},"end":{"line":112,"column":13}},"33":{"start":{"line":101,"column":16},"end":{"line":101,"column":32}},"34":{"start":{"line":102,"column":16},"end":{"line":102,"column":38}},"35":{"start":{"line":103,"column":16},"end":{"line":103,"column":42}},"36":{"start":{"line":104,"column":16},"end":{"line":104,"column":48}},"37":{"start":{"line":105,"column":16},"end":{"line":105,"column":41}},"38":{"start":{"line":106,"column":16},"end":{"line":106,"column":46}},"39":{"start":{"line":107,"column":16},"end":{"line":107,"column":34}},"40":{"start":{"line":108,"column":16},"end":{"line":108,"column":35}},"41":{"start":{"line":109,"column":16},"end":{"line":109,"column":32}},"42":{"start":{"line":110,"column":16},"end":{"line":110,"column":35}},"43":{"start":{"line":111,"column":16},"end":{"line":111,"column":35}},"44":{"start":{"line":114,"column":12},"end":{"line":114,"column":24}},"45":{"start":{"line":126,"column":12},"end":{"line":156,"column":5}},"46":{"start":{"line":128,"column":8},"end":{"line":128,"column":105}},"47":{"start":{"line":129,"column":8},"end":{"line":129,"column":40}},"48":{"start":{"line":130,"column":8},"end":{"line":130,"column":70}},"49":{"start":{"line":132,"column":8},"end":{"line":132,"column":37}},"50":{"start":{"line":133,"column":8},"end":{"line":133,"column":31}},"51":{"start":{"line":134,"column":8},"end":{"line":136,"column":9}},"52":{"start":{"line":134,"column":13},"end":{"line":134,"column":18}},"53":{"start":{"line":135,"column":12},"end":{"line":135,"column":38}},"54":{"start":{"line":138,"column":8},"end":{"line":140,"column":79}},"55":{"start":{"line":142,"column":8},"end":{"line":147,"column":30}},"56":{"start":{"line":149,"column":8},"end":{"line":152,"column":25}},"57":{"start":{"line":154,"column":8},"end":{"line":154,"column":20}},"58":{"start":{"line":167,"column":14},"end":{"line":239,"column":5}},"59":{"start":{"line":170,"column":8},"end":{"line":170,"column":36}},"60":{"start":{"line":172,"column":8},"end":{"line":172,"column":105}},"61":{"start":{"line":173,"column":8},"end":{"line":173,"column":87}},"62":{"start":{"line":174,"column":8},"end":{"line":174,"column":40}},"63":{"start":{"line":175,"column":8},"end":{"line":175,"column":43}},"64":{"start":{"line":176,"column":8},"end":{"line":176,"column":65}},"65":{"start":{"line":177,"column":8},"end":{"line":177,"column":81}},"66":{"start":{"line":178,"column":8},"end":{"line":178,"column":82}},"67":{"start":{"line":183,"column":8},"end":{"line":183,"column":57}},"68":{"start":{"line":184,"column":8},"end":{"line":187,"column":11}},"69":{"start":{"line":186,"column":12},"end":{"line":186,"column":38}},"70":{"start":{"line":188,"column":8},"end":{"line":188,"column":35}},"71":{"start":{"line":193,"column":8},"end":{"line":193,"column":46}},"72":{"start":{"line":194,"column":8},"end":{"line":194,"column":47}},"73":{"start":{"line":195,"column":8},"end":{"line":202,"column":9}},"74":{"start":{"line":195,"column":13},"end":{"line":195,"column":21}},"75":{"start":{"line":196,"column":12},"end":{"line":198,"column":13}},"76":{"start":{"line":197,"column":16},"end":{"line":197,"column":36}},"77":{"start":{"line":199,"column":12},"end":{"line":201,"column":13}},"78":{"start":{"line":200,"column":16},"end":{"line":200,"column":37}},"79":{"start":{"line":203,"column":8},"end":{"line":203,"column":39}},"80":{"start":{"line":204,"column":8},"end":{"line":204,"column":41}},"81":{"start":{"line":208,"column":8},"end":{"line":236,"column":23}},"82":{"start":{"line":218,"column":24},"end":{"line":218,"column":87}},"83":{"start":{"line":221,"column":24},"end":{"line":221,"column":65}},"84":{"start":{"line":226,"column":24},"end":{"line":226,"column":66}},"85":{"start":{"line":229,"column":24},"end":{"line":229,"column":40}},"86":{"start":{"line":232,"column":24},"end":{"line":232,"column":44}},"87":{"start":{"line":235,"column":24},"end":{"line":235,"column":42}},"88":{"start":{"line":238,"column":8},"end":{"line":238,"column":20}},"89":{"start":{"line":246,"column":14},"end":{"line":253,"column":5}},"90":{"start":{"line":248,"column":8},"end":{"line":250,"column":33}},"91":{"start":{"line":251,"column":8},"end":{"line":251,"column":61}},"92":{"start":{"line":252,"column":8},"end":{"line":252,"column":20}},"93":{"start":{"line":257,"column":14},"end":{"line":260,"column":5}},"94":{"start":{"line":258,"column":8},"end":{"line":258,"column":60}},"95":{"start":{"line":259,"column":8},"end":{"line":259,"column":20}},"96":{"start":{"line":264,"column":0},"end":{"line":264,"column":1}},"97":{"start":{"line":12,"column":13},"end":{"line":264,"column":1}}},"fnMap":{"1":{"name":"(anonymous_122)","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"WeekdayRect","line":28,"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":85}}},"3":{"name":"(anonymous_124)","line":48,"loc":{"start":{"line":48,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_125)","line":56,"loc":{"start":{"line":56,"column":57},"end":{"line":56,"column":72}}},"5":{"name":"(anonymous_126)","line":92,"loc":{"start":{"line":92,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_127)","line":126,"loc":{"start":{"line":126,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_128)","line":167,"loc":{"start":{"line":167,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_129)","line":184,"loc":{"start":{"line":184,"column":28},"end":{"line":184,"column":42}}},"9":{"name":"(anonymous_130)","line":217,"loc":{"start":{"line":217,"column":31},"end":{"line":217,"column":45}}},"10":{"name":"(anonymous_131)","line":220,"loc":{"start":{"line":220,"column":31},"end":{"line":220,"column":45}}},"11":{"name":"(anonymous_132)","line":225,"loc":{"start":{"line":225,"column":34},"end":{"line":225,"column":48}}},"12":{"name":"(anonymous_133)","line":228,"loc":{"start":{"line":228,"column":33},"end":{"line":228,"column":47}}},"13":{"name":"(anonymous_134)","line":231,"loc":{"start":{"line":231,"column":37},"end":{"line":231,"column":51}}},"14":{"name":"(anonymous_135)","line":234,"loc":{"start":{"line":234,"column":36},"end":{"line":null,"column":-1}}},"15":{"name":"(anonymous_136)","line":246,"loc":{"start":{"line":246,"column":4},"end":{"line":246,"column":32}}},"16":{"name":"(anonymous_137)","line":257,"loc":{"start":{"line":257,"column":4},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":2,"type":"cond-expr","locations":[{"start":{"line":2,"column":21},"end":{"line":null,"column":-1}},{"start":{"line":2,"column":21},"end":{"line":null,"column":-1}}]},"2":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":12},"end":{"line":null,"column":-1}}]},"3":{"line":4,"type":"cond-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":null,"column":-1}},{"start":{"line":4,"column":16},"end":{"line":null,"column":-1}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":11}},{"start":{"line":59,"column":12},"end":{"line":59,"column":11}}]},"5":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":7}},{"start":{"line":94,"column":8},"end":{"line":94,"column":7}}]},"6":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":99,"column":11}},{"start":{"line":99,"column":12},"end":{"line":99,"column":11}}]},"7":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":12},"end":{"line":196,"column":11}},{"start":{"line":196,"column":12},"end":{"line":196,"column":11}}]},"8":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":12},"end":{"line":199,"column":11}},{"start":{"line":199,"column":12},"end":{"line":199,"column":11}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":15,"10":15,"11":15,"12":15,"13":15,"14":15,"15":15,"16":1,"17":23,"18":23,"19":50019,"20":50019,"21":50019,"22":50019,"23":50019,"24":50019,"25":50019,"26":0,"27":23,"28":23,"29":1,"30":31,"31":0,"32":31,"33":31,"34":31,"35":31,"36":31,"37":31,"38":31,"39":31,"40":31,"41":31,"42":31,"43":31,"44":31,"45":1,"46":44,"47":44,"48":44,"49":44,"50":44,"51":44,"52":396,"53":396,"54":44,"55":44,"56":44,"57":44,"58":1,"59":16,"60":16,"61":16,"62":16,"63":16,"64":16,"65":16,"66":16,"67":16,"68":16,"69":1398,"70":16,"71":16,"72":16,"73":16,"74":1398,"75":1398,"76":88,"77":1398,"78":66,"79":16,"80":16,"81":16,"82":1398,"83":1398,"84":1398,"85":0,"86":0,"87":0,"88":16,"89":1,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":1,"97":1},"b":{"1":[1,0],"2":[1,0],"3":[1,0],"4":[50019,0],"5":[0,31],"6":[31,0],"7":[88,1310],"8":[66,1332]},"f":{"1":1,"2":15,"3":23,"4":50019,"5":31,"6":44,"7":16,"8":1398,"9":1398,"10":1398,"11":1398,"12":0,"13":0,"14":0,"15":0,"16":0},"code":"\r\nimport 'crossfilter';\r\nimport 'd3';\r\nimport 'moment';\r\n\r\nimport {Base} from './base';\r\nimport {ColorMap} from './colormap';\r\n\r\n/**\r\n * See <a href=\"https://nlesc-sherlock.github.io/punchcardjs-demo/sites/demo/\">examples on GitHub</a>.\r\n */\r\nexport class WeekdayRect extends Base {\r\n\n    protected dayOfWeekScale: d3.scale.Ordinal<any, any>;\r\n    protected xFrom         : number;\r\n    protected xTo           : number;\r\n\n    /**\r\n     * Constructor method for making a punchcard visualization with the day of\r\n     * week on the horizontal axis, and hour of day on the vertical axis, using\r\n     * rectangular symbols to represent how many rows from the input data fall\r\n     * within the area covered by each rectangle.\r\n     * @param  {CrossFilter.CrossFilter<any>} cf Crossfilter object\r\n     * containing the data.\r\n     * @param  {string} domElemId Name of the DOM element in which to draw.\r\n     * @return {[type]} A reference to the instance of WeekdayRect.\r\n     */\r\n    constructor (cf: CrossFilter.CrossFilter<any>, domElemId: string, datekey: string) {\r\n\n        super(cf, domElemId, datekey);\r\n\n        this.marginBottom = 50;\n        this.xlabel = 'Day of week';\n        this.title = 'WeekdayRect title';\r\n        this.colormap = new ColorMap('summer');\r\n        this.defineDimensions();\r\n        this.domElem.classList.add('punchcard-weekday-rect');\r\n\r\n    }\n\n\n\n\n    /**\r\n     * define the crossfilter dimensions as used by this class\r\n     * @return {WeekdayRect} A reference to the instance of WeekdayRect\r\n     */\r\n    protected defineDimensions():WeekdayRect {\r\n\r\n        // store a reference to the instance\r\n        let that:WeekdayRect = this;\r\n\r\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n\n        this.dim.weekdayAndHourOfDay = this.cf.dimension(function (d:any) {\r\n            //stringify() and later, parse() to get keyed objects\n            let m:moment.Moment;\r\n            if (d.hasOwnProperty(that.datekey)) {\r\n                m = moment(d[that.datekey]);\r\n                let obj:any = {};\r\n                obj['weekday'] = m.format('ddd');\r\n                obj['hourOfDay'] = m.hour();\r\n                return JSON.stringify(obj);\r\n            } else {\r\n                throw new Error('datekey undefined');\r\n            }\r\n        });\r\n        this.canDraw = true;\r\n\n        return this;\n    }\n\n\n\n\n    /**\r\n     * This method defines which other methods to call in order to create\r\n     * a punchcard graph with the day of week on the horizontal axis and the\r\n     * time of day on the vertical axis. Mostly calls methods of the parent\r\n     * class, Base, but for example the symbols for this class are SVG rects,\r\n     * so it calls its own method .drawSymbols() for that.\r\n     *\r\n     * Successful drawing depends on whether the container is currently visible,\r\n     * and whether there is enough information in the instance to draw anything\r\n     * at all.\r\n     *\r\n     * This method overrides stub method in parent class.\r\n     *\r\n     * @return {WeekdayRect} A reference to an instance of WeekdayRect.\r\n     */\r\n    public draw():WeekdayRect {\r\n\n        if (this.domElem.classList.contains('hidden')) {\n            // div is hidden\n            return this;\n        } else {\r\n            // div is visible\r\n            if (this.canDraw) {\r\n                // dimensions have been defined\r\n                super.drawSvg();\r\n                super.drawChartBody();\r\n                this.drawHorizontalAxis();\r\n                super.drawHorizontalAxisLabel();\r\n                super.drawVerticalAxis();\r\n                super.drawVerticalAxisLabel();\r\n                super.drawTitle();\r\n                this.drawSymbols();\r\n                super.drawBox();\r\n                super.drawLegend();\r\n                super.drawFooter();\r\n            }\r\n\n            return this;\n        }\n    }\n\n\n\n\n    /**\r\n     * Adds an SVG g element containing a d3.scale.ordinal for plotting\r\n     * the day of the week on the horizontal axis of the punchcard graph.\r\n     * @return {WeekdayRect} A reference to the instance of WeekdayRect.\r\n     */\r\n    private drawHorizontalAxis():WeekdayRect {\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let dx:number = this.marginLeft;\n        let dy:number = this.domElem.clientHeight - this.marginBottom;\n\n        let range:Array<number> = [];\n        let ndays:number = 7.0;\n        for (let r of [0, 0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.0]) {\n            range.push(w * r / ndays);\n        }\n\n        this.dayOfWeekScale = d3.scale.ordinal()\n            .range(range)\n            .domain(['', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun', '']);\n\n        let xAxis = d3.svg.axis()\n            .orient('bottom')\n            .scale(this.dayOfWeekScale)\n            .tickValues(['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'])\n            .innerTickSize(5)\n            .outerTickSize(0);\n\n        this.svg.append('g')\n            .attr('class', 'horizontal-axis')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')' )\n            .call(xAxis);\n\n        return this;\n\n    }\n\n\n\n    /**\r\n     * This method adds an SVG g element with many SVG rects in it. Each rect\r\n     * represents the count of how many data rows fall within the area covered\r\n     * by the rect, where the horizontal boundaries dictate the day-of-week and\r\n     * the vertical boundaries dictate the time of day range.\r\n     * @return {WeekdayRect} A reference to the instance of WeekdayRect.\r\n     */\r\n    protected drawSymbols():WeekdayRect {\r\n\n        // capture the this object\n        let that:WeekdayRect = this;\r\n\n        let w :number = this.domElem.clientWidth - this.marginLeft - this.marginRight - this.legendWidth;\n        let h :number = this.domElem.clientHeight - this.marginTop - this.marginBottom;\n        let dx:number = this.marginLeft;\n        let dy:number = this.marginTop + h;\n        let symbolMargin = {left:0, right: 0, top: 0, bottom: 0}; // pixels\n        let symbolWidth :number = w / 7 - symbolMargin.left - symbolMargin.right;\n        let symbolHeight:number = h / 24 - symbolMargin.top - symbolMargin.bottom;\n\n        // based on example from\n        // http://stackoverflow.com/questions/16766986/is-it-possible-to-group-by-multiple-dimensions-in-crossfilter\n        // forEach method could be very expensive on write.\n        let group = this.dim.weekdayAndHourOfDay.group();\n        group.all().forEach(function(d:any) {\r\n            //parse the json string created above\n            d.key = JSON.parse(d.key);\n        });\n        let data:any = group.all();\n\n\n        // determine the min and max in the count in order to set the color\n        // limits on the colormap later\n        let lowest = Number.POSITIVE_INFINITY;\n        let highest = Number.NEGATIVE_INFINITY;\n        for (let elem of data) {\n            if (elem.value < lowest) {\n                lowest = elem.value;\n            }\n            if (elem.value > highest) {\n                highest = elem.value;\n            }\n        }\n        this.colormap.cLimLow = lowest;\n        this.colormap.cLimHigh = highest;\n\n\n        // draw the rects\n        this.svg\n            .append('g')\n            .attr('class', 'symbol')\n            .attr('transform', 'translate(' + dx + ',' + dy + ')')\n            .selectAll('rect.symbol')\n                .data(data)\n                .enter()\n                .append('rect')\n                    .attr('class', 'symbol')\n                    .attr('x', function(d:any){\r\n                        return that.dayOfWeekScale(d.key['weekday']) - symbolWidth / 2;\n                    })\n                    .attr('y', function(d:any){\r\n                        return that.todScale(d.key['hourOfDay']);\n                    })\n                    .attr('width', symbolWidth)\n                    .attr('height', symbolHeight)\n                    .attr('fill', function(d:any){\r\n                        return that.colormap.getColorRGB(d.value);\n                    })\r\n                    .on('click', function(d:any){\r\n                        that.onClick(d);\r\n                    })\r\n                    .on('mouseover', function(d:any){\r\n                        that.onMouseOver(d);\r\n                    })\r\n                    .on('mouseout', function(){\r\n                        that.onMouseOut();\r\n                    });\r\n\r\n        return this;\n    }\r\n\r\n\r\n\r\n    /*\r\n     * overrides method from Base\r\n     */\r\n    protected onMouseOver(d: any): WeekdayRect {\r\n\r\n        let str: string = 'x:' + d.key['weekday'] +\r\n            ', y:' + d.key['hourOfDay'] +\r\n            ', count:' + d.value;\r\n        this.svg.select('g.footer').select('text').text(str);\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n    protected onMouseOut(): WeekdayRect {\r\n        this.svg.select('g.footer').select('text').text('');\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n}\n\n\n","l":{"2":1,"3":1,"4":1,"6":1,"7":1,"12":1,"28":1,"30":15,"32":15,"33":15,"34":15,"35":15,"36":15,"37":15,"48":1,"51":23,"56":23,"58":50019,"59":50019,"60":50019,"61":50019,"62":50019,"63":50019,"64":50019,"66":0,"69":23,"71":23,"92":1,"94":31,"96":0,"99":31,"101":31,"102":31,"103":31,"104":31,"105":31,"106":31,"107":31,"108":31,"109":31,"110":31,"111":31,"114":31,"126":1,"128":44,"129":44,"130":44,"132":44,"133":44,"134":396,"135":396,"138":44,"142":44,"149":44,"154":44,"167":1,"170":16,"172":16,"173":16,"174":16,"175":16,"176":16,"177":16,"178":16,"183":16,"184":16,"186":1398,"188":16,"193":16,"194":16,"195":1398,"196":1398,"197":88,"199":1398,"200":66,"203":16,"204":16,"208":16,"218":1398,"221":1398,"226":1398,"229":0,"232":0,"235":0,"238":16,"246":1,"248":0,"251":0,"252":0,"257":1,"258":0,"259":0,"264":1}}}
